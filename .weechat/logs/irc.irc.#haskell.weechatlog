2015-09-21 20:18:00	-->	harwiltz (~harwiltz@modemcable109.165-58-74.mc.videotron.ca) has joined #haskell
2015-09-21 20:18:00	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-09-21 20:18:00	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Wed, 06 May 2015 01:23:24
2015-09-21 20:18:00	--	Channel #haskell: 1468 nicks (1 op, 0 voices, 1467 normals)
2015-09-21 20:18:00	--	URL for #haskell: http://www.haskell.org/
2015-09-21 20:18:02	--	Channel created on Sun, 26 Nov 2006 06:42:48
2015-09-21 20:18:22	-->	grouzen (~grouzen@diagonal-interview.volia.net) has joined #haskell
2015-09-21 20:18:29	-->	xplat (~james@67.205.253.166) has joined #haskell
2015-09-21 20:18:29	-->	eagleflo (~aku@eagleflow.fi) has joined #haskell
2015-09-21 20:18:34	-->	jgt1 (~jgt@dfh151.neoplus.adsl.tpnet.pl) has joined #haskell
2015-09-21 20:18:37	mniip	so it's a relation?
2015-09-21 20:19:09	Shockk	so like a pseudocodey bimap of Int <=> String would be like:   [Int] :<=>: ([String] :<=>: UnitPolyMap)
2015-09-21 20:19:40	Shockk	that definition is kind of loose, bear in mind, because I'm still learning about how type level stuff works as I write it
2015-09-21 20:19:45	mniip	is it a polyadic relation, or a polyjection?
2015-09-21 20:20:10	-->	pkkm3 (~pkkm@djo213.neoplus.adsl.tpnet.pl) has joined #haskell
2015-09-21 20:20:24	Shockk	what's a polyjection?
2015-09-21 20:20:34	mniip	like bi-jection, but poly
2015-09-21 20:20:54	-->	Biohazard (~Biohazard@osiris.stary2001.co.uk) has joined #haskell
2015-09-21 20:21:04	<--	swgillespie (~textual@167.220.102.234) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-09-21 20:21:04	harwiltz	hey can someone help me with a frustrating problem in my code?
2015-09-21 20:21:22	<--	m0rphism (~m0rphism@HSI-KBW-095-208-106-119.hsi5.kabel-badenwuerttemberg.de) has quit (Remote host closed the connection)
2015-09-21 20:21:35	harwiltz	I'm trying to make a function that converts an amount of money into the least amount of coins
2015-09-21 20:21:37	mniip	harwiltz, don't ask to ask
2015-09-21 20:21:41	-->	noexcept (~noexcept@noexcept.org) has joined #haskell
2015-09-21 20:21:42	-->	pdxleif (~pdxleif@ec2-54-68-166-10.us-west-2.compute.amazonaws.com) has joined #haskell
2015-09-21 20:21:44	harwiltz	mniip, thanks
2015-09-21 20:21:50	Shockk	hmm.. I'm not sure which of those it is
2015-09-21 20:22:00	-->	Wuzzy (~Wuzzy@p549F9BC7.dip0.t-ipconnect.de) has joined #haskell
2015-09-21 20:22:02	harwiltz	So should I send it line by line? It's only 5 lines long
2015-09-21 20:22:03	Shockk	I don't fully understand the concepts
2015-09-21 20:22:03	-->	darkbolt (~darkbolt@23.252.55.57) has joined #haskell
2015-09-21 20:22:15	mniip	Shockk, [1,2] :-: [True, True] :-: PNil
2015-09-21 20:22:28	mniip	is a 2-place relation, but not a bijection
2015-09-21 20:22:55	<--	jgt1 (~jgt@dfh151.neoplus.adsl.tpnet.pl) has quit (Ping timeout: 240 seconds)
2015-09-21 20:23:08	<--	jxv (~jxv@cpe-104-173-191-238.socal.res.rr.com) has quit (Quit: Leaving)
2015-09-21 20:23:10	harwiltz	makeChange :: Num a => a -> (a -> [a] -> [a]) -> [a]
2015-09-21 20:23:12	Shockk	oh, because it's not a 1:1 correspondence?
2015-09-21 20:23:17	mniip	yes
2015-09-21 20:23:32	mniip	relations are just sets of unique tuples
2015-09-21 20:23:32	harwiltz	makeChange m = let list = [200,100,25,10,5,1]
2015-09-21 20:23:39	harwiltz	in calculateChange m list
2015-09-21 20:23:42	<--	dh (dh@bsd.ee) has quit (Disconnected by services)
2015-09-21 20:23:45	mniip	bijections ensure that for every A there's exactly one B, and vice versa
2015-09-21 20:23:48	-->	dh_ (dh@bsd.ee) has joined #haskell
2015-09-21 20:23:56	<--	eazar001 (~ebrahim@99-151-0-118.lightspeed.snrmca.sbcglobal.net) has quit (Quit: WeeChat 1.3)
2015-09-21 20:24:15	harwiltz	where calculateChange money (x:xs) = (floor(money/x)):(calculateChange (money `mod` x) (xs))
2015-09-21 20:24:23	<--	pfoetchen (~pfoetchen@beiboot1.petschge.de) has quit (Ping timeout: 240 seconds)
2015-09-21 20:24:23	<--	adam_hardkey_shi (~hardkey@147.127.160.10) has quit (Ping timeout: 240 seconds)
2015-09-21 20:24:28	harwiltz	And I'm getting that calculateChange is being applied to too many arguments
2015-09-21 20:24:43	<--	sys_ (~gustavo@pdpc/supporter/active/sys) has quit (Ping timeout: 240 seconds)
2015-09-21 20:24:44	-->	kamatsu (~Adium@123-243-95-236.static.tpgi.com.au) has joined #haskell
2015-09-21 20:24:44	<--	path[l] (~vsi@199.201.64.133) has quit (Quit: path[l])
2015-09-21 20:25:01	Shockk	I haven't thought about that specifically very much, and it's probably something I should think about 
2015-09-21 20:25:03	<--	shwouchk (~shwouchk@unaffiliated/shwouchk) has quit (Ping timeout: 240 seconds)
2015-09-21 20:25:23	<--	ahf (ahf@irssi/staff/ahf) has quit (Ping timeout: 240 seconds)
2015-09-21 20:25:23	<--	davean (~davean@107.6.89.242) has quit (Ping timeout: 240 seconds)
2015-09-21 20:25:28	-->	eazar001 (~ebrahim@99-151-0-118.lightspeed.snrmca.sbcglobal.net) has joined #haskell
2015-09-21 20:25:38	-->	zariuq (~zar@79.138.130.144.mobile.tre.se) has joined #haskell
2015-09-21 20:25:41	-->	davean (~davean@107.6.89.242) has joined #haskell
2015-09-21 20:25:45	<--	ajtulloc_ (~ajtulloch@199.201.64.2) has quit (Ping timeout: 265 seconds)
2015-09-21 20:25:46	mniip	[02:17:36] <harwiltz> makeChange :: Num a => a -> (a -> [a] -> [a]) -> [a]
2015-09-21 20:25:50	-->	sys (~gustavo@pdpc/supporter/active/sys) has joined #haskell
2015-09-21 20:26:01	mniip	that signature seems wrong
2015-09-21 20:26:02	harwiltz	mniip, that's what I wrote
2015-09-21 20:26:08	harwiltz	mniip, yea I thought so hahaha
2015-09-21 20:26:18	<--	eazar001 (~ebrahim@99-151-0-118.lightspeed.snrmca.sbcglobal.net) has quit (Client Quit)
2015-09-21 20:26:28	harwiltz	mniip, Is it because of Num, or because of the whole thing in general?
2015-09-21 20:26:40	-->	kloeri_ (~kloeri@freenode/staff/exherbo.kloeri) has joined #haskell
2015-09-21 20:26:43	-->	shwouchk (~shwouchk@unaffiliated/shwouchk) has joined #haskell
2015-09-21 20:27:03	mniip	you take a function turning a number and a list into a list, and that function in combination with a number gives you a list of numbers
2015-09-21 20:27:04	-->	pfoetchen (~pfoetchen@beiboot1.petschge.de) has joined #haskell
2015-09-21 20:27:06	Shockk	ultimately I want to use Set instead of [], so in that case the elements would be unique, although I want to do so through a typeclass for the type of storage, so I can have a set on one side of the map and a multiset on some other side
2015-09-21 20:27:18	harwiltz	mniip, thats right
2015-09-21 20:27:34	mniip	Shockk, so why are you storing your polymap in such a /transposed/ way
2015-09-21 20:27:35	-->	haskell711 (cb8faf43@gateway/web/freenode/ip.203.143.175.67) has joined #haskell
2015-09-21 20:27:50	<--	haskell711 (cb8faf43@gateway/web/freenode/ip.203.143.175.67) has quit (Client Quit)
2015-09-21 20:28:18	<--	Kiryx (~Kiryx@80.50.228.98) has quit (Ping timeout: 250 seconds)
2015-09-21 20:28:28	Shockk	transposed?
2015-09-21 20:28:29	harwiltz	mniip, both numbers in the type signature represent the same number. Just that I pass it from the big function into the subfunction
2015-09-21 20:29:02	-->	yfeldblum (~yfeldblum@2620:10d:c090:180::3c31) has joined #haskell
2015-09-21 20:29:21	<--	erikur (~erikur@c-69-143-168-50.hsd1.md.comcast.net) has quit (Quit: erikur)
2015-09-21 20:29:26	mniip	harwiltz, why would makeChange take a function as argument
2015-09-21 20:29:29	-->	ahf (ahf@irssi/staff/ahf) has joined #haskell
2015-09-21 20:29:32	-->	hunteriam (uid63798@gateway/web/irccloud.com/x-dzajvtyghftgdwhi) has joined #haskell
2015-09-21 20:29:36	harwiltz	makeChange takes just a number
2015-09-21 20:29:39	hunteriam	How does one develop a package with stack? Is there a guide anywhwere, i couldnt find one
2015-09-21 20:29:44	-->	inteq (~int3q@23-113-69-15.lightspeed.tukrga.sbcglobal.net) has joined #haskell
2015-09-21 20:29:45	-->	eazar001 (~ebrahim@99-151-0-118.lightspeed.snrmca.sbcglobal.net) has joined #haskell
2015-09-21 20:29:47	harwiltz	but it passes that number into another function (calculateChange)
2015-09-21 20:29:49	-->	emmanuel_erc (~user@137.54.39.89) has joined #haskell
2015-09-21 20:29:59	mniip	harwiltz, right
2015-09-21 20:30:13	mniip	and what does calculateChange have to do with the type signature
2015-09-21 20:30:15	-->	Literphor (~alfred@209.237.92.139) has joined #haskell
2015-09-21 20:30:16	<--	tomh- (uid501@gateway/web/irccloud.com/x-blgdjavchfxunldx) has quit (Quit: Connection closed for inactivity)
2015-09-21 20:30:17	harwiltz	mniip, so I don't have to declare the other function (calculateChange) in the type signature?
2015-09-21 20:30:36	-->	adam_hardkey_shi (~hardkey@147.127.160.10) has joined #haskell
2015-09-21 20:30:53	mniip	no, why would you
2015-09-21 20:31:02	Shockk	I've got to go afk now actually, sorry
2015-09-21 20:31:08	mniip	a type signature is a declaration of what arguments does your function take, and what it returns
2015-09-21 20:31:12	harwiltz	mniip, I was reading a book and I thought it said I had to. Thanks
2015-09-21 20:31:23	<--	kloeri (~kloeri@freenode/staff/exherbo.kloeri) has quit (Ping timeout: 600 seconds)
2015-09-21 20:31:27	harwiltz	mniip, so it should be Num a => a -> [a]
2015-09-21 20:31:29	mniip	yes
2015-09-21 20:31:43	mniip	harwiltz, what book if I may
2015-09-21 20:31:43	harwiltz	mniip, Ok, thanks a lot, I'll try it
2015-09-21 20:31:50	harwiltz	mniip, Real World Haskell
2015-09-21 20:31:59	harwiltz	I probably misunderstood something
2015-09-21 20:32:03	-->	hellertime (~hellertim@pool-173-48-154-80.bstnma.fios.verizon.net) has joined #haskell
2015-09-21 20:32:15	mniip	I wonder what path of logical thought lead you to this
2015-09-21 20:32:21	mniip	chapter/location?
2015-09-21 20:32:38	-->	gpacheco (~weechat@179.26.12.243) has joined #haskell
2015-09-21 20:32:49	harwiltz	mniip, Chapter 4. There was a function that had another function inside it, and it looked like the other function was declared in the type signature
2015-09-21 20:32:53	-->	ajtulloch (~ajtulloch@199.201.64.2) has joined #haskell
2015-09-21 20:33:00	<--	erkin (~erkin@unaffiliated/erkin) has quit (Quit: Ouch! Got SIGABRT, dying...)
2015-09-21 20:33:06	-->	illsci (~jsabo@216.9.110.14) has joined #haskell
2015-09-21 20:33:14	harwiltz	mniip, That's where I got the idea of putting stuff in parentheses. I didn't make it up, I probably just misunderstood.
2015-09-21 20:33:46	mniip	harwiltz, that's probably because the "function inside it" was actually passed as argument
2015-09-21 20:33:49	-->	path[l] (~vsi@199.201.64.133) has joined #haskell
2015-09-21 20:33:54	harwiltz	mniip, probably
2015-09-21 20:33:57	mniip	like for example how 'map' does it
2015-09-21 20:34:09	mniip	like I said, [02:25:34] <mniip> a type signature is a declaration of what arguments does your function take, and what it returns
2015-09-21 20:34:26	<--	ineol (~textual@nol75-1-88-190-208-245.fbxo.proxad.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-09-21 20:34:34	gpacheco	Hi, I'm having a design doubt. If I'm going to make an applicative parser, for example using uu-parsinglib, is it a good idea to use Alex to parse the tokens first, or is it considered ok to just use the parsing combinators even for Lexer?
2015-09-21 20:34:47	harwiltz	mniip, thanks, I get it now. I got another error but I think this one I can fix haha
2015-09-21 20:34:48	<--	marr (~ccc@159-205-177-181.adsl.inetia.pl) has quit (Ping timeout: 250 seconds)
2015-09-21 20:34:59	mniip	parentheses are just... parentheses, they're there for the same reason as we write (1 + 2) * 3 with parens
2015-09-21 20:36:08	harwiltz	now it's saying to add RealFrac a to the context of the type signature
2015-09-21 20:36:10	emmanuel_erc	hello there everyone..
2015-09-21 20:36:44	-->	Raiinb (~rainb@181.50.148.224) has joined #haskell
2015-09-21 20:36:50	mniip	harwiltz, it's because you're using floor and /
2015-09-21 20:37:02	mniip	you should be using something else instead
2015-09-21 20:37:03	hunteriam	in ghci how do you write a line with "b :: String; b = "string""
2015-09-21 20:37:06	-->	gamegoblin (~grant@64.187.168.233) has joined #haskell
2015-09-21 20:37:08	hunteriam	it says ; is unrecognized
2015-09-21 20:37:10	<--	jasonkuhrt (~jasonkuhr@modemcable022.139-83-70.mc.videotron.ca) has quit (Quit: Lingo: www.lingoirc.com)
2015-09-21 20:37:12	mniip	hunteriam, let ...
2015-09-21 20:37:27	<--	cjheath (~cjh@14-203-27-33.tpgi.com.au) has quit (Ping timeout: 240 seconds)
2015-09-21 20:37:32	<--	eazar001 (~ebrahim@99-151-0-118.lightspeed.snrmca.sbcglobal.net) has quit (Read error: Connection reset by peer)
2015-09-21 20:37:43	-->	eazar001 (~ebrahim@99-151-0-118.lightspeed.snrmca.sbcglobal.net) has joined #haskell
2015-09-21 20:37:44	hunteriam	does not work
2015-09-21 20:37:45	hunteriam	mniip: 
2015-09-21 20:37:48	hunteriam	afaik
2015-09-21 20:38:07	<--	petricore (~petricore@104-9-84-38.lightspeed.irvnca.sbcglobal.net) has quit (Quit: Textual IRC Client: www.textualapp.com)
2015-09-21 20:38:08	mniip	how much do you want to bet
2015-09-21 20:38:09	<--	Wuzzy (~Wuzzy@p549F9BC7.dip0.t-ipconnect.de) has quit (Remote host closed the connection)
2015-09-21 20:38:13	<--	kaidelong (~kaidelong@c-73-11-13-223.hsd1.or.comcast.net) has quit (Quit: Leaving)
2015-09-21 20:38:18	emmanuel_erc	I just wrote (what I believe to be) a now testable version of some code I've been working on.
2015-09-21 20:38:18	hunteriam	i really just want to know how i was supposed to do it
2015-09-21 20:38:19	hunteriam	not bet
2015-09-21 20:38:27	mniip	[02:32:10] <hunteriam> does not work
2015-09-21 20:38:31	mniip	it does very well work
2015-09-21 20:38:32	-->	maomeno (bd0747b9@gateway/web/freenode/ip.189.7.71.185) has joined #haskell
2015-09-21 20:38:36	emmanuel_erc	It isn't anything special but I would like to know how I could improve it speed wise.
2015-09-21 20:38:36	hunteriam	ok..
2015-09-21 20:38:58	-->	Zekka (~zekka@ip24-251-69-145.ph.ph.cox.net) has joined #haskell
2015-09-21 20:39:41	<--	michaelneale (~textual@ppp121-44-202-185.lns20.syd7.internode.on.net) has quit (Ping timeout: 244 seconds)
2015-09-21 20:39:43	<--	jack_rabbit_ (~jack_rabb@2601:240:8200:2380:6a17:29ff:fef6:76d8) has quit (Ping timeout: 240 seconds)
2015-09-21 20:40:16	lpaste_	emmanuel_erc pasted “Simple code” at http://lpaste.net/141445
2015-09-21 20:40:35	-->	BlackCoyote (~BlackCoyo@66-227-205-48.dhcp.bycy.mi.charter.com) has joined #haskell
2015-09-21 20:41:19	<--	yfeldblum (~yfeldblum@2620:10d:c090:180::3c31) has quit (Ping timeout: 240 seconds)
2015-09-21 20:41:39	-->	croyd (~croyd@146-115-81-34.c3-0.sbo-ubr1.sbo.ma.cable.rcn.com) has joined #haskell
2015-09-21 20:42:46	-->	L8D (~L8D@cpe-70-123-155-208.austin.res.rr.com) has joined #haskell
2015-09-21 20:43:03	-->	pw_ (~user@114.249.26.205) has joined #haskell
2015-09-21 20:43:37	-->	bros (~textual@adsl-065-015-063-026.sip.bct.bellsouth.net) has joined #haskell
2015-09-21 20:43:50	<--	maomeno (bd0747b9@gateway/web/freenode/ip.189.7.71.185) has quit (Quit: Page closed)
2015-09-21 20:44:32	-->	jinblack (~jinblack@128.111.48.6) has joined #haskell
2015-09-21 20:45:34	<--	ajtulloch (~ajtulloch@199.201.64.2) has quit (Ping timeout: 265 seconds)
2015-09-21 20:46:03	emmanuel_erc	If anyone would be able to gve me a few pointers, I would greatly appreciate it!
2015-09-21 20:46:16	harwiltz	mniip, I got it! Thanks for the help. Never saw the quot function before but that solved the issue
2015-09-21 20:46:39	mniip	harwiltz, general advice: use div with mod, and quot with rem
2015-09-21 20:46:48	mniip	otherwise it's mixing pepsi with coke
2015-09-21 20:46:53	harwiltz	mniip, what's rem?
2015-09-21 20:47:05	harwiltz	nevermind lol
2015-09-21 20:47:18	mniip	> quotRem -5 3
2015-09-21 20:47:19	lambdabot	     Could not deduce (Num a0)
2015-09-21 20:47:20	lambdabot	     from the context (Integral a,
2015-09-21 20:47:20	lambdabot	                       Num a1,
2015-09-21 20:47:24	-->	gpacheco1 (~weechat@r186-48-177-217.dialup.adsl.anteldata.net.uy) has joined #haskell
2015-09-21 20:47:30	mniip	> quotRem (-5) 3
2015-09-21 20:47:31	lambdabot	 (-1,-2)
2015-09-21 20:47:33	mniip	> divMod (-5) 3
2015-09-21 20:47:35	lambdabot	 (-2,1)
2015-09-21 20:47:40	mniip	observe the difference
2015-09-21 20:47:52	Sindriava	…oh. OH.
2015-09-21 20:47:52	<--	sinelaw (~unenough@176.106.227.132) has quit (Quit: Leaving)
2015-09-21 20:47:55	Sindriava	> otherwise
2015-09-21 20:47:56	lambdabot	 True
2015-09-21 20:48:01	harwiltz	mniip, Yup, I just changed it. Thanks a lot for your help
2015-09-21 20:48:07	-->	SK0 (~i@53514B51.cm-6-2b.dynamic.ziggo.nl) has joined #haskell
2015-09-21 20:48:23	mniip	Sindriava, yes
2015-09-21 20:48:25	<--	Sixmsj (~Sixmsj@c-50-131-110-35.hsd1.ca.comcast.net) has quit (Quit: Sixmsj)
2015-09-21 20:48:39	-->	kmels (~kmels@184.62.151.186.static.intelnet.net.gt) has joined #haskell
2015-09-21 20:48:43	<--	AfC (~andrew@120.18.228.176) has quit (Read error: Connection reset by peer)
2015-09-21 20:49:07	<--	harwiltz (~harwiltz@modemcable109.165-58-74.mc.videotron.ca) has left #haskell ("WeeChat 1.3")
2015-09-21 20:52:13	-->	harwiltz (~harwiltz@modemcable109.165-58-74.mc.videotron.ca) has joined #haskell
2015-09-21 20:52:13	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-09-21 20:52:13	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Wed, 06 May 2015 01:23:24
2015-09-21 20:52:13	--	Channel #haskell: 1476 nicks (1 op, 0 voices, 1475 normals)
2015-09-21 20:52:13	--	Channel created on Sun, 26 Nov 2006 06:42:48
2015-09-21 20:52:13	--	URL for #haskell: http://www.haskell.org/
2015-09-21 20:52:22	<--	cjlarose (~textual@wsip-174-69-245-124.sd.sd.cox.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-09-21 20:52:25	Sindriava	johnw: What you wrote still contains a *lot* less syntax than a common C++ sample IMO
2015-09-21 20:52:25	mniip	johnw, forgot {} and indentation blocks, do, let, if, case
2015-09-21 20:52:27	<--	mizu_no_oto (~textual@c-73-219-2-228.hsd1.ma.comcast.net) has quit (Client Quit)
2015-09-21 20:52:29	<--	SK0 (~i@53514B51.cm-6-2b.dynamic.ziggo.nl) has quit (Ping timeout: 246 seconds)
2015-09-21 20:52:33	harwiltz	does anyone know how to stop GHCi from warning me about Tab characters?
2015-09-21 20:52:44	-->	michaelneale (~textual@1.129.97.41) has joined #haskell
2015-09-21 20:52:45	Welkin	harwiltz: don't use tabs
2015-09-21 20:52:46	Sindriava	harwiltz: Stop using tab characters :D
2015-09-21 20:52:46	mniip	! `infix` $() 
2015-09-21 20:52:51	Welkin	harwiltz: it will cause problems
2015-09-21 20:52:59	harwiltz	But then isn't code ugly?
2015-09-21 20:53:03	-->	ajtulloch (~ajtulloch@204.28.118.167) has joined #haskell
2015-09-21 20:53:04	Welkin	no
2015-09-21 20:53:05	johnw	Sindriava: is that unique syntax, as I just did, or do you mean C++ just using lots of it?
2015-09-21 20:53:05	mniip	harwiltz, {-# OPTIONS_GHC -fno-warn-tabs #-}
2015-09-21 20:53:08	Welkin	use spaces
2015-09-21 20:53:14	Welkin	have your editor convert tabs to spaces
2015-09-21 20:53:15	Sindriava	harwiltz: What do tabs have to do with appearance?
2015-09-21 20:53:18	johnw	mniip: yeah, it wasn't exhaustive :)
2015-09-21 20:53:19	-->	evanbd (~evand@freenet/theorist/evanbd) has joined #haskell
2015-09-21 20:53:36	harwiltz	Sindriava, if there's no tabs code is often hard to read
2015-09-21 20:53:49	Sindriava	harwiltz: I think you're confusing tabs with indentation.
2015-09-21 20:54:13	harwiltz	Sindriava, evidently I am, I just don't understand why tabs should cause issues
2015-09-21 20:54:23	mniip	because some people misuse tabs
2015-09-21 20:54:25	-->	broma0 (~broma0@204.144.15.19) has joined #haskell
2015-09-21 20:54:26	mniip	and mix them with spaces
2015-09-21 20:54:27	Welkin	harwiltz: haskell is whitespace sensitive
2015-09-21 20:54:40	Sindriava	harwiltz: They don't have the same width everywhere.
2015-09-21 20:55:03	harwiltz	Ok, so I just have my editor replace tabs with spaces?
2015-09-21 20:55:04	Sindriava	harwiltz: They are used for tabulation. Indentation is arguably not tabulation.
2015-09-21 20:55:19	Sindriava	harwiltz: Yep. `expandtab` in Vim IIRC
2015-09-21 20:55:26	harwiltz	really?
2015-09-21 20:55:29	harwiltz	thats easy hahaha
2015-09-21 20:55:34	Axman6	harwiltz: tabs in haskell are defined to be at 8 character tabstops, most editors render them as 4 by default, or any other number, which means that code that looks right is actually grossly misaligned
2015-09-21 20:55:35	harwiltz	and how did you know I use vim?
2015-09-21 20:55:43	broma0	anyone ever have postgresql-simple hang?
2015-09-21 20:55:44	<--	xyh (~xyh@183.15.247.38) has quit (Remote host closed the connection)
2015-09-21 20:55:58	harwiltz	Axman6, thanks, that explains it!
2015-09-21 20:56:04	mniip	Axman6, writing moronic tabwidth-dependent code is not an excuse!
2015-09-21 20:56:10	-->	gpacheco2 (~weechat@r179-25-81-64.dialup.adsl.anteldata.net.uy) has joined #haskell
2015-09-21 20:56:12	-->	plutoniix (~plutoniix@119.63.87.222) has joined #haskell
2015-09-21 20:56:22	Welkin	broma0: what do you mean? The connection?
2015-09-21 20:56:25	Sindriava	harwiltz: Because you said editor and not IDE :D
2015-09-21 20:56:29	Sindriava	johnw: I mean that in languages like C++ have a lot of arbitrary rules that you just have to remember
2015-09-21 20:56:44	harwiltz	Sindriava, fair enough! Thanks, I'll go try it out now
2015-09-21 20:56:46	broma0	Welkin: i get the connection just fine, but when i try to run a query it just hangs indefinitely
2015-09-21 20:56:56	broma0	the query is dead simple too
2015-09-21 20:56:57	dmwit	harwiltz: You may like http://dmwit.com/tabs, which includes advice for configuring your editor.
2015-09-21 20:57:00	dmwit	Then again, you may not.
2015-09-21 20:57:05	dmwit	mniip: I mix tabs and spaces. =)
2015-09-21 20:57:08	Sindriava	johnw: Haskell has surprisingly little of that. Parametric types behave like type-level functions. Functions are just parametrised values and use = for definition too.
2015-09-21 20:57:14	<--	Sonolin (~michael@wsip-184-178-115-131.sd.sd.cox.net) has quit (Quit: Lost terminal)
2015-09-21 20:57:25	Sindriava	johnw: Bool is properly defined in Haskell, not a language feature.
2015-09-21 20:57:28	harwiltz	dmwit, thanks, I'll check it out!
2015-09-21 20:57:28	-->	mizu_no_oto (~textual@c-73-219-2-228.hsd1.ma.comcast.net) has joined #haskell
2015-09-21 20:57:57	johnw	Sindriava: oh ho, you are so dead right about that
2015-09-21 20:58:01	emmanuel_erc	hello again.
2015-09-21 20:58:07	Welkin	broma0: I have never used postgresql-simple directly
2015-09-21 20:58:12	mniip	dmwit, I always write indented blocks entirely on their own line
2015-09-21 20:58:28	emmanuel_erc	I just posted some code to lpaste. I would like to ask for some pointers on making it run faster.
2015-09-21 20:58:29	johnw	Sindriava: I used to implement the C++ standard for a living; I'll take System FC with a bunch of sugary extensions on top any day of the week
2015-09-21 20:58:34	dmwit	mniip: That is one of the styles I mark as "acceptable" in my discussion. =)
2015-09-21 20:58:45	Welkin	broma0: can you enter the shell and execute sql queries?
2015-09-21 20:58:49	dmwit	mniip: Though that's not quite enough.
2015-09-21 20:59:00	dmwit	mniip: See, e.g., the problem of do blocks in (aligned) lists discussed on my page.
2015-09-21 20:59:00	-->	nshepperd (~nshepperd@168.1.75.55-static.reverse.softlayer.com) has joined #haskell
2015-09-21 20:59:03	<--	gpacheco1 (~weechat@r186-48-177-217.dialup.adsl.anteldata.net.uy) has quit (Ping timeout: 240 seconds)
2015-09-21 20:59:19	mniip	dmwit, it's sad that we have to suffer because of tabwidth-dependent morons
2015-09-21 20:59:26	Sindriava	johnw: When you look at a simple C++ hello world, there's actually a *lot* going on
2015-09-21 20:59:35	-->	jfischoff (~jfischoff@pool-108-41-231-87.nycmny.fios.verizon.net) has joined #haskell
2015-09-21 20:59:37	Welkin	mniip: you mean harwiltz? 
2015-09-21 20:59:52	-->	swgillespie (~textual@104.232.112.57) has joined #haskell
2015-09-21 21:00:05	mniip	Welkin, no I mean dmwit
2015-09-21 21:00:28	harwiltz	Welkin, who said I'm tabwidth dependent? I'm just used to pressing tab to indent my code
2015-09-21 21:00:32	mniip	[02:51:51] <Sindriava> johnw: Bool is properly defined in Haskell, not a language feature.
2015-09-21 21:00:34	mniip	welll actualllly
2015-09-21 21:00:42	-->	thunderrd (~thunderrd@116.58.253.31) has joined #haskell
2015-09-21 21:00:43	mniip	it's not
2015-09-21 21:00:47	-->	cjheath (~cjh@203-219-188-248.tpgi.com.au) has joined #haskell
2015-09-21 21:00:51	lpsmith	broma0, unix or Windows?
2015-09-21 21:00:51	mniip	it's a wired in datatype
2015-09-21 21:01:00	Sindriava	mniip: Oh yeah, I should have phrased that better
2015-09-21 21:01:05	mniip	things like 'if' and guards require it to work
2015-09-21 21:01:08	<--	Noldorin (~noldorin@unaffiliated/noldorin) has quit (Ping timeout: 240 seconds)
2015-09-21 21:01:19	<--	so (~so@unaffiliated/so) has quit (Remote host closed the connection)
2015-09-21 21:01:24	Sindriava	mniip: What I mean was that it *can* be properly defined, which is what matters
2015-09-21 21:01:36	mniip	well it won't be the condition type of 'if' though
2015-09-21 21:01:49	dmwit	mniip: Are you saying I am a tabwidth dependent moron?
2015-09-21 21:01:50	-->	Erlkonig (~Erlkonig@i223-216-162-195.s41.a038.ap.plala.or.jp) has joined #haskell
2015-09-21 21:01:57	mniip	no
2015-09-21 21:02:10	mniip	I'm saying that the reason tabs are taboo in haskell
2015-09-21 21:02:27	<--	erikd (~erikd@113.29.24.25) has quit (Ping timeout: 240 seconds)
2015-09-21 21:02:29	broma0	lpsmith: linux
2015-09-21 21:02:33	mniip	is because some people misuse them
2015-09-21 21:02:47	Sindriava	mniip: Fair enough, yeah. I guess the most accurate way of saying it would be that "The way Bool works in Haskell can be accurately conveyed with compact Haskell code", maybe?
2015-09-21 21:02:47	dmwit	ah, right, yes, agreed
2015-09-21 21:02:58	lpsmith	broma0, hmm, strange, what version of postgresql, libpq, and postgresql-simple are you using?
2015-09-21 21:03:16	pikajude	to be fair, you can use RebindableSyntax and define your own Bool
2015-09-21 21:03:26	lpsmith	Also, what version of GHC?
2015-09-21 21:03:33	mniip	pikajude, guards
2015-09-21 21:03:46	mniip	or do those translate to ifThenElse too
2015-09-21 21:04:28	broma0	postgres: 9.4.4, postgresql-simple 0.5.0.0
2015-09-21 21:04:33	<--	zariuq (~zar@79.138.130.144.mobile.tre.se) has quit (Ping timeout: 252 seconds)
2015-10-24 16:11:54	-->	harwiltz (~harwiltz@modemcable109.165-58-74.mc.videotron.ca) has joined #haskell
2015-10-24 16:11:54	--	Topic for #haskell is "http://www.haskell.org/ | https://wiki.haskell.org/IRC_channel | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-10-24 16:11:54	--	Topic set by quicksilver (~jules@roobarb.crazydogs.org) on Wed, 07 Oct 2015 15:39:49
2015-10-24 16:11:54	--	Channel #haskell: 1501 nicks (1 op, 0 voices, 1500 normals)
2015-10-24 16:11:54	--	URL for #haskell: http://www.haskell.org/
2015-10-24 16:11:56	--	Channel created on Sun, 26 Nov 2006 06:42:48
2015-10-24 16:12:29	Aeroblop	the otherwise clause?
2015-10-24 16:12:34	test2462	yes
2015-10-24 16:12:34	-->	twopoint718 (~chris@68-185-170-61.dhcp.mdsn.wi.charter.com) has joined #haskell
2015-10-24 16:12:34	<--	twopoint718 (~chris@68-185-170-61.dhcp.mdsn.wi.charter.com) has quit (Changing host)
2015-10-24 16:12:34	-->	twopoint718 (~chris@fsf/member/twopoint718) has joined #haskell
2015-10-24 16:12:42	Gurkenglas	EvanR, including imports
2015-10-24 16:12:53	Aeroblop	what do you mean by *use* it
2015-10-24 16:13:08	harwiltz	Hello. I'm trying to write a script for dzen2 using Haskell, which requires that I pipe information to dzen2. I figured out how to create the process that receives the data for dzen, can someone explain how to pipe that to another process?
2015-10-24 16:13:12	Aeroblop	could you ask me questions that would lead me to finding the correct solution?
2015-10-24 16:13:13	Gurkenglas	But it already built all the imports beforehand, right?
2015-10-24 16:13:19	test2462	Aeroblop: you apply trav two times, and you need to give the result of one as additional "cs" to the other
2015-10-24 16:13:34	Aeroblop	yeah
2015-10-24 16:13:45	test2462	try a 'let' clause
2015-10-24 16:13:53	Aeroblop	I've never used let before
2015-10-24 16:14:01	<--	takle (~takle@71.13.189.80.dyn.plus.net) has quit (Remote host closed the connection)
2015-10-24 16:14:03	-->	mizu_no_oto (~textual@c-73-219-2-228.hsd1.ma.comcast.net) has joined #haskell
2015-10-24 16:14:20	<--	baweaver (~baweaver@c-24-4-24-160.hsd1.ca.comcast.net) has quit (Remote host closed the connection)
2015-10-24 16:14:22	-->	armyriad2 (~armyriad@198.8.80.26) has joined #haskell
2015-10-24 16:14:22	<--	Paradox__ (6d6b8ae8@gateway/web/freenode/ip.109.107.138.232) has quit (Ping timeout: 246 seconds)
2015-10-24 16:14:22	<--	armyriad (~armyriad@98.143.158.186) has quit (Disconnected by services)
2015-10-24 16:14:27	<--	fuzzyhorns (~fuzzyhorn@73.38.57.191) has quit (Remote host closed the connection)
2015-10-24 16:14:28	<--	nineonine (~nineonine@S010690b134fbb43e.vc.shawcable.net) has quit (Quit: nineonine)
2015-10-24 16:14:32	--	armyriad2 is now known as armyriad
2015-10-24 16:14:36	test2462	or 'where'
2015-10-24 16:15:00	Aeroblop	what am I defining in where?
2015-10-24 16:15:04	Aeroblop	the cs?
2015-10-24 16:15:06	-->	nineonine (~nineonine@S010690b134fbb43e.vc.shawcable.net) has joined #haskell
2015-10-24 16:15:13	harwiltz	Does anyone know how to use createProcess to pipe data to another process?
2015-10-24 16:15:37	-->	takle (~takle@71.13.189.80.dyn.plus.net) has joined #haskell
2015-10-24 16:15:48	-->	malkomalko (~malkomalk@c-174-48-224-214.hsd1.fl.comcast.net) has joined #haskell
2015-10-24 16:16:05	hpc	what problem are you having?
2015-10-24 16:16:27	test2462	Aeroblop: first take the first application of 'trav' and give its result a name
2015-10-24 16:16:45	 *	hackagebot s-cargot 0.1.0.0 - A flexible, extensible s-expression library.  https://hackage.haskell.org/package/s-cargot-0.1.0.0 (gdritter)
2015-10-24 16:16:46	test2462	Aeroblop: in other words:  write "y … where y = f x" instead of "f x"
2015-10-24 16:16:52	Aeroblop	yup, got that
2015-10-24 16:16:53	-->	demilux (~demilux@c-76-28-194-126.hsd1.wa.comcast.net) has joined #haskell
2015-10-24 16:16:56	andromeda-galaxy	harwiltz: I think that you can set std_in = CreatePipe in the createProcess configuration
2015-10-24 16:17:18	test2462	Aeroblop: now that name stands for the characters one of the traversals has already seen
2015-10-24 16:17:29	Aeroblop	yup
2015-10-24 16:17:40	test2462	pass that as additional 'cs' to the other one
2015-10-24 16:17:42	harwiltz	andromeda-galaxy: I tried that, but I don't think it worked. How does it know what the parent process is?
2015-10-24 16:17:43	Aeroblop	so I've got where q = trav (n:cs) rs
2015-10-24 16:17:59	-->	inhortte (~polaris@26.Red-88-23-181.staticIP.rima-tde.net) has joined #haskell
2015-10-24 16:18:01	Aeroblop	how do I pass it as an additional cs?
2015-10-24 16:18:03	-->	xylen (~codywelsh@c-73-189-204-160.hsd1.ca.comcast.net) has joined #haskell
2015-10-24 16:18:04	andromeda-galaxy	harwiltz: I'm not sure... I pulled that from my own dzen driver
2015-10-24 16:18:07	<--	armyriad (~armyriad@198.8.80.26) has quit (Max SendQ exceeded)
2015-10-24 16:18:18	Aeroblop	concatenating q to cs in the second?
2015-10-24 16:18:31	-->	SenpaiSilver (~SenpaiSil@lse83-h01-31-38-248-147.dsl.sta.abo.bbox.fr) has joined #haskell
2015-10-24 16:18:33	-->	armyriad (~armyriad@198.8.80.26) has joined #haskell
2015-10-24 16:18:34	harwiltz	andromeda-galaxy: Can I show you the two createProcesses that I have to see if they make sense?
2015-10-24 16:18:40	test2462	Aeroblop: would that make sense?  the first argument of 'trav' is a list of the characters already seen
2015-10-24 16:18:50	ahihi	when you set std_in to CreatePipe, you receive a Handle as the first element of the 4-tuple that createProcess returns
2015-10-24 16:18:51	andromeda-galaxy	harwiltz: sure, I'll see if I can elp
2015-10-24 16:18:53	andromeda-galaxy	*help
2015-10-24 16:18:56	ahihi	then you just write to that
2015-10-24 16:18:59	<--	rdema_ (~busybeave@shetbeg.weirdburrito.com) has quit (Read error: Connection reset by peer)
2015-10-24 16:19:00	Aeroblop	No, it wouldn't
2015-10-24 16:19:05	test2462	Aeroblop: it would =)
2015-10-24 16:19:13	-->	rdema (~busybeave@shetbeg.weirdburrito.com) has joined #haskell
2015-10-24 16:19:15	harwiltz	andromeda-galaxy: Thanks a lot
2015-10-24 16:19:21	andromeda-galaxy	harwiltz: my code does this:
2015-10-24 16:19:24	Aeroblop	    | otherwise     = n : q ++ trav q:cs ns
2015-10-24 16:19:24	Aeroblop	                            where q = trav (n:cs) rs
2015-10-24 16:19:35	andromeda-galaxy	(Just inp, _, _, _) <- createProcess (proc  ...) { std_in = CreatePipe }
2015-10-24 16:19:37	test2462	Aeroblop: that's not concatenation
2015-10-24 16:19:38	andromeda-galaxy	and then writes to inp
2015-10-24 16:19:51	<--	Jackneill (~Jackneill@gateway/vpn/privateinternetaccess/jackneill) has quit (Ping timeout: 264 seconds)
2015-10-24 16:20:03	test2462	Aeroblop: don't confuse consing with concatenation
2015-10-24 16:20:09	Aeroblop	okay, changing it to q++cs doesn't work either
2015-10-24 16:20:13	harwiltz	andromeda-galaxy: Mine looks just like that, but I'm not storing it in a tuple. 
2015-10-24 16:20:22	harwiltz	Here's my first process:
2015-10-24 16:20:30	test2462	Aeroblop: that's because now you're ignoring stuff the upper-level traversal has already seen
2015-10-24 16:20:30	Aeroblop	Oh, I'm a fool, didn't put it in brackets
2015-10-24 16:20:38	<--	malkomalko (~malkomalk@c-174-48-224-214.hsd1.fl.comcast.net) has quit (Ping timeout: 250 seconds)
2015-10-24 16:20:40	test2462	that, too =)
2015-10-24 16:20:51	harwiltz	(_,Just hout,_,_) <- createProcess (proc...){ std_out = CreatePipe)
2015-10-24 16:21:01	harwiltz	Then, my next line is
2015-10-24 16:21:06	Aeroblop	can I just PM you? test2462?
2015-10-24 16:21:17	harwiltz	createProcess(proc...) {std_in = CreatePipe}
2015-10-24 16:21:21	-->	fuzzyhorns (~fuzzyhorn@73.38.57.191) has joined #haskell
2015-10-24 16:21:22	<--	Jaume (~Jaume@CPEbc4dfbd1f493-CMbc4dfbd1f490.cpe.net.cable.rogers.com) has quit (Remote host closed the connection)
2015-10-24 16:21:22	<--	demilux (~demilux@c-76-28-194-126.hsd1.wa.comcast.net) has quit (Remote host closed the connection)
2015-10-24 16:21:42	test2462	Aeroblop: sure, but if it's for haskell support i'd be more comfortable talking here
2015-10-24 16:21:51	<--	fuzzyhorns (~fuzzyhorn@73.38.57.191) has quit (Remote host closed the connection)
2015-10-24 16:21:57	Aeroblop	Ok, no problem. So I've got the following:
2015-10-24 16:21:58	Aeroblop	    | n `elem` cs   = []
2015-10-24 16:21:58	Aeroblop	    | otherwise     = n : q ++ trav (q++cs) ns
2015-10-24 16:21:58	Aeroblop	                            where q = trav (n:cs) rs
2015-10-24 16:21:59	-->	Jaume (~Jaume@CPEbc4dfbd1f493-CMbc4dfbd1f490.cpe.net.cable.rogers.com) has joined #haskell
2015-10-24 16:22:17	Aeroblop	What do you mean by I'm "ignoring the upper-level traversal"
2015-10-24 16:22:18	-->	delrik (~delrik@c-73-138-158-107.hsd1.fl.comcast.net) has joined #haskell
2015-10-24 16:22:54	<--	irrequietus (~irqus@unaffiliated/irrequietus) has quit
2015-10-24 16:23:02	test2462	now you're ignoring the current node in the second traversal:  previously you had (n:cs), to which you should add q
2015-10-24 16:23:06	andromeda-galaxy	harwiltz: so, if you're using CreatePipe, you need to capture the std_in handle from the 2nd proc & write some code that reads from the 1st std_out & writes to the 2nd std_in
2015-10-24 16:23:30	harwiltz	andromeda-galaxy: That's what I thought. But how do I do that?
2015-10-24 16:23:34	<--	pantsman- (~pantsman@cpc12-haye16-2-0-cust45.haye.cable.virginm.net) has quit (Ping timeout: 260 seconds)
2015-10-24 16:23:35	-->	Voldenet (~Voldenet@89-69-0-230.dynamic.chello.pl) has joined #haskell
2015-10-24 16:23:35	<--	Voldenet (~Voldenet@89-69-0-230.dynamic.chello.pl) has quit (Changing host)
2015-10-24 16:23:35	-->	Voldenet (~Voldenet@unaffiliated/voldenet) has joined #haskell
2015-10-24 16:23:49	andromeda-galaxy	harwiltz: the code that I posted should let you get an inp handle, then you'd have to do some kind of chunked read/write
2015-10-24 16:24:05	Aeroblop	so q++n:cs?
2015-10-24 16:24:07	andromeda-galaxy	but it might be better to use { std_in = UseHandle hout) }
2015-10-24 16:24:11	-->	alcipir (~alcipir@173.227.72.121) has joined #haskell
2015-10-24 16:24:15	andromeda-galaxy	(I haven't tested that, but I think that it should work)
2015-10-24 16:24:16	<--	youngbaks (~youngbaks@105.231.198.156) has quit (Ping timeout: 255 seconds)
2015-10-24 16:24:19	darkstalker	how do you prevent data struct definitions from polluting the global namespace? like when you do: data Stuff a = Stuff { asdf :: a } -- that creates an "asdf" function
2015-10-24 16:24:41	harwiltz	Ok. So I changed my second createProcess to capture the std_in, but how do I write to it? And what exactly does writing to it mean?
2015-10-24 16:24:53	<--	fengshaun (~fengshaun@unaffiliated/fengshaun) has quit (Ping timeout: 252 seconds)
2015-10-24 16:24:54	<--	AleXoundOS (~AleXoundO@ip-95-221-217-71.bb.netbynet.ru) has quit (Quit: Leaving)
2015-10-24 16:25:03	<--	armyriad (~armyriad@198.8.80.26) has quit (Ping timeout: 265 seconds)
2015-10-24 16:25:04	harwiltz	andromeda-galaxy, thanks a lot for the help btw. Hope I'm not causing too uch trouble
2015-10-24 16:25:05	test2462	Aeroblop: try it out
2015-10-24 16:25:16	Aeroblop	I did and got "ABBAABBA"
2015-10-24 16:25:32	monochrom	darkstalker: I try to use a fairly unique name for asdf. there are also times non-export helps
2015-10-24 16:25:41	-->	armyriad (~armyriad@198.8.80.26) has joined #haskell
2015-10-24 16:25:42	andromeda-galaxy	harwiltz: System.IO has functions for reading/writing to handle
2015-10-24 16:25:43	<--	paldepind (~paldepind@94.144.63.4) has quit (Quit: Leaving)
2015-10-24 16:25:56	test2462	your program seems to love classic rock =)
2015-10-24 16:26:08	<--	ggole (~ggole@58-7-147-199.dyn.iinet.net.au) has quit
2015-10-24 16:26:09	andromeda-galaxy	harwiltz: but did you have a chance to try the UseHandle?
2015-10-24 16:26:11	Aeroblop	hahaha
2015-10-24 16:26:20	darkstalker	monochrom, there is not an alternative way? like calling it Stuff.asdf
2015-10-24 16:26:23	<--	Jaume (~Jaume@CPEbc4dfbd1f493-CMbc4dfbd1f490.cpe.net.cable.rogers.com) has quit (Ping timeout: 250 seconds)
2015-10-24 16:26:33	harwiltz	andromeda-galaxy: I saw something about the UseHandle but I don't know what it is or how to use it
2015-10-24 16:26:37	Aeroblop	with the input I gave it, it should return ABB
2015-10-24 16:26:37	monochrom	no
2015-10-24 16:26:45	andromeda-galaxy	harwiltz: not tested right now, but try:
2015-10-24 16:26:46	test2462	Aeroblop: did you implement monochrom's suggestion about the first guard?
2015-10-24 16:26:57	andromeda-galaxy	    createProcess (proc...) { std_in = UseHandle hout }
2015-10-24 16:27:03	<--	adam_hardkey_shi (~hardkey@212.52.70.86.rev.sfr.net) has quit (Quit: Leaving.)
2015-10-24 16:27:04	Aeroblop	which suggestion was that?
2015-10-24 16:27:08	-->	fengshaun (~fengshaun@unaffiliated/fengshaun) has joined #haskell
2015-10-24 16:27:13	monochrom	suggestion #39031
2015-10-24 16:27:15	-->	adam_hardkey_shi (~hardkey@212.52.70.86.rev.sfr.net) has joined #haskell
2015-10-24 16:27:18	test2462	`= []` instead of `= cs`
2015-10-24 16:27:21	Aeroblop	first guard is | n `elem` cs   = []
2015-10-24 16:27:38	harwiltz	andromeda-galaxy: So that will take the data from my first process and pipe it to the second right away? Awesome, I'll give it a try
2015-10-24 16:27:43	-->	youngbaks (~youngbaks@105.230.195.18) has joined #haskell
2015-10-24 16:27:48	-->	AleXoundOS (~AleXoundO@ip-95-221-217-71.bb.netbynet.ru) has joined #haskell
2015-10-24 16:27:53	test2462	what about the first clause?  it doesn't look right to me in the paste
2015-10-24 16:28:07	Aeroblop	trav :: [Char] -> [Node Char] -> [Char]
2015-10-24 16:28:08	Aeroblop	trav cs [] = cs
2015-10-24 16:28:08	Aeroblop	trav cs (Node n rs : ns)
2015-10-24 16:28:08	Aeroblop	    | n `elem` cs   = []
2015-10-24 16:28:08	Aeroblop	    | otherwise     = n : q ++ trav ((n:cs)++q) ns
2015-10-24 16:28:08	Aeroblop	                            where q = trav (n:cs) rs
2015-10-24 16:28:16	andromeda-galaxy	harwiltz: I think that it should make the input of the new process = the output of the old process, yes...
2015-10-24 16:28:34	test2462	Aeroblop: please use lpaste for longer pastes…  and yes, i mean the second line of that
2015-10-24 16:28:42	<--	alcipir (~alcipir@173.227.72.121) has quit (Ping timeout: 260 seconds)
2015-10-24 16:28:50	<--	tv (~tv@unaffiliated/tv) has quit (Quit: WeeChat 1.3)
2015-10-24 16:28:53	test2462	Aeroblop: note, you can edit/annotate on lpaste
2015-10-24 16:28:59	harwiltz	andromeda-galaxy: That's what I meant :). But when I try running it now I get a Pattern match failure
2015-10-24 16:29:01	Aeroblop	sorry, I didn't know that sorry
2015-10-24 16:29:16	Aeroblop	I've changed the first pattern match to trav cs [] = []
2015-10-24 16:29:25	Aeroblop	and it returns "AB" 
2015-10-24 16:29:26	-->	tv (~tv@cable-89-16-158-99.cust.telecolumbus.net) has joined #haskell
2015-10-24 16:29:26	<--	tv (~tv@cable-89-16-158-99.cust.telecolumbus.net) has quit (Changing host)
2015-10-24 16:29:26	-->	tv (~tv@unaffiliated/tv) has joined #haskell
2015-10-24 16:29:33	test2462	no worries…  is "AB" what you would expect?
2015-10-24 16:29:46	andromeda-galaxy	harwiltz: if you use UseHandle, don't match for the inp handle
2015-10-24 16:29:53	Aeroblop	yeah, it works now. Thank you very much!
2015-10-24 16:30:00	andromeda-galaxy	harwiltz: that's only created if you use CreatePipe
2015-10-24 16:30:48	test2462	you're welcome…  i hope it made sense…  you have now a more stateful 'trav'
2015-10-24 16:30:52	-->	lethjakman (~lethjakma@71.56.221.51) has joined #haskell
2015-10-24 16:30:58	-->	umib0zu (~umib0zu@146-115-43-219.c3-0.abr-ubr1.sbo-abr.ma.cable.rcn.com) has joined #haskell
2015-10-24 16:30:59	harwiltz	andromeda-galaxy: So I should remove the (Just inp,_,_,_)? I'll try that now
2015-10-24 16:31:07	andromeda-galaxy	harwiltz: see the doc for createProcess/CreateProcess/StdStream
2015-10-24 16:31:11	andromeda-galaxy	harwiltz: yes
2015-10-24 16:31:57	harwiltz	andromeda-galaxy: Thanks. I'll look into it. Now when I run my program, nothing happens...
2015-10-24 16:32:19	andromeda-galaxy	harwiltz: hmm...
2015-10-24 16:32:20	harwiltz	andromeda-galaxy: Thanks for the help though, you lead me in the right direction. 
2015-10-24 16:32:20	-->	devol (~quassel@d54C49939.access.telenet.be) has joined #haskell
2015-10-24 16:32:59	andromeda-galaxy	harwiltz: you're welcome, I'm not sure why nothing's happening...
2015-10-24 16:33:18	harwiltz	                    (_,Just hout,_,_) <- createProcess (proc "echo" ["TESTING 1 2 3"]) { std_out = CreatePipe }
2015-10-24 16:33:38	harwiltz	 createProcess(proc "dzen2" []) { std_in = UseHandle hout }
2015-10-24 16:34:08	harwiltz	Does that look right?
2015-10-24 16:34:28	andromeda-galaxy	harwiltz: seems right, is it opssible that the problem is that echo exits immediately
2015-10-24 16:34:30	andromeda-galaxy	?
2015-10-24 16:34:45	test2462	Aeroblop: challenge: write 'trav' without the 'cs' argument:  trav :: [Node Char] -> [Char]
2015-10-24 16:34:57	<--	nyazdani (~nyazdani@205.175.97.158) has quit (Remote host closed the connection)
2015-10-24 16:34:58	andromeda-galaxy	harwiltz: for me, this also produces no output: echo "abc" | dzen2
2015-10-24 16:35:01	harwiltz	andromeda-galaxy: hmmm... I hadn't thought of that. 
2015-10-24 16:35:05	-->	favetelinguis (~favetelin@78-72-40-166-no186.tbcn.telia.com) has joined #haskell
2015-10-24 16:35:08	<--	cyborg-one (~cyborg-on@37.203.25.196) has quit (Read error: Connection reset by peer)
2015-10-24 16:35:17	harwiltz	andromeda-galaxy: Really? I'll give it a try right now
2015-10-24 16:35:25	andromeda-galaxy	harwiltz: indeed,
2015-10-24 16:35:39	Aeroblop	test2462, will do. But before that I want to make them polymorphic. I've got trav :: (Eq a) => [a] -> [Node a] -> [a]
2015-10-24 16:35:39	Aeroblop	and it all works nicely
2015-10-24 16:35:41	Aeroblop	However
2015-10-24 16:35:46	andromeda-galaxy	try (proc "dzen2" ["-p" "5"])
2015-10-24 16:35:47	<--	lethjakman (~lethjakma@71.56.221.51) has quit (Ping timeout: 268 seconds)
2015-10-24 16:35:53	andromeda-galaxy	then dzen2 will continue running for 5 seconds
2015-10-24 16:36:00	harwiltz	andromeda-galaxy: You're right. I'll try that right now
2015-10-24 16:37:00	Aeroblop	I want to simply call trav nodeA, instead of trav [] [nodeA]. Is there any way of changing it so that it works like that, or do I have to create a separate initialising function that takes Node a and calls trav [] [nodeA] ?
2015-10-24 16:37:03	andromeda-galaxy	harwiltz: I think that that should work, glad to be of help
2015-10-24 16:37:03	-->	cyborg-one (~cyborg-on@37.203.25.196) has joined #haskell
2015-10-24 16:37:07	harwiltz	andromeda-galaxy:YES! It worked
2015-10-24 16:37:20	test2462	Aeroblop: that's exactly the challenge i'm posing =)
2015-10-24 16:37:24	harwiltz	andromeda-galaxy: Can I ask you one more quick question? 
2015-10-24 16:37:52	Aeroblop	You said [Node Char] -> [Char] not Node Char -> [Char] :P
2015-10-24 16:37:53	andromeda-galaxy	harwiltz: sure
2015-10-24 16:38:04	<--	Kellard_ (~Kellard@cli01.ovpn.se) has quit (Quit: WeeChat 1.3)
2015-10-24 16:38:10	-->	baweaver (~baweaver@c-24-4-24-160.hsd1.ca.comcast.net) has joined #haskell
2015-10-24 16:38:29	test2462	Aeroblop: oh…  you can do both in once step
2015-10-24 16:38:38	harwiltz	I have my code inside a "loop", basically a function that just calls itself at the end. However, now I'm spawning infinite dzen's on top of each other, which makes sense now that I think of it.
2015-10-24 16:38:42	Aeroblop	I've got no idea where to start
2015-10-24 16:38:52	Aeroblop	I've only been doing Haskell for 2 weeks
2015-10-24 16:39:00	test2462	Aeroblop: the easy way out would be to rename 'trav' and write it as a wrapper function, but really the first argument is not necessary *algorithmically*
2015-10-24 16:39:07	harwiltz	andromeda-galaxy, how should I get haskell to update dzen?
2015-10-24 16:39:23	andromeda-galaxy	harwiltz: in that case, it might be better to go back to the other approach
2015-10-24 16:39:41	andromeda-galaxy	create the dzen outside the loop, with CreatePipe & store the handle
2015-10-24 16:39:43	-->	taira (~quassel@taira-comp.kvi.sgsnet.se) has joined #haskell
2015-10-24 16:39:49	test2462	Aeroblop: the wrapping idea would be pretty straightforward: trav node = travWith [] [node]
2015-10-24 16:39:59	andromeda-galaxy	then inside the loop, run the outside process, read the input, and write it to the dzen handle
2015-10-24 16:40:16	Aeroblop	and then travWith is the algo function?
2015-10-24 16:40:16	harwiltz	andromeda-galaxy: Oh I see, makes a lot of sense. Thank you very much
2015-10-24 16:40:24	test2462	Aeroblop: yeah
2015-10-24 16:40:29	andromeda-galaxy	harwiltz: you're welcome
2015-10-24 16:40:38	Aeroblop	thought as much, that's what I was planning on keeping it as
2015-10-24 16:40:42	-->	hzjd (~Adium@dhcp-18-189-49-122.dyn.mit.edu) has joined #haskell
2015-10-30 19:26:29	-->	harwiltz (~harwiltz@modemcable109.165-58-74.mc.videotron.ca) has joined #haskell
2015-10-30 19:26:29	--	Topic for #haskell is "http://www.haskell.org/ | https://wiki.haskell.org/IRC_channel | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-10-30 19:26:29	--	Topic set by quicksilver (~jules@roobarb.crazydogs.org) on Wed, 07 Oct 2015 15:39:49
2015-10-30 19:26:29	--	Channel #haskell: 1477 nicks (1 op, 0 voices, 1476 normals)
2015-10-30 19:26:29	--	Notice(sendak.freenode.net): [freenode-info] channel flooding and no channel staff around to help? Please check with freenode support: http://freenode.net/faq.shtml#gettinghelp
2015-10-30 19:26:29	--	URL for #haskell: http://www.haskell.org/
2015-10-30 19:26:31	--	Channel created on Sun, 26 Nov 2006 06:42:48
2015-10-30 19:26:51	harwiltz	can someone help me get a list of directories in haskell? I'm having a bit of an issue
2015-10-30 19:27:21	harwiltz	by list of directories I mean a function that returns a list of all the files in the current directory
2015-10-30 19:27:34	dibblego	@type getDirectoryContents
2015-10-30 19:27:35	lambdabot	Not in scope: ‘getDirectoryContents’
2015-10-30 19:27:43	<--	ldbrandy1 (~Adium@2620:10d:c090:200::a:9d7) has quit (Ping timeout: 240 seconds)
2015-10-30 19:27:52	harwiltz	but that returns a list of IO Filetype
2015-10-30 19:27:55	dibblego	@type System.Directory.getDirectoryContents
2015-10-30 19:27:56	lambdabot	FilePath -> IO [FilePath]
2015-10-30 19:28:04	dibblego	no, it returns IO [FilePath]
2015-10-30 19:28:09	-->	Romefeller (b3d77c51@gateway/web/freenode/ip.179.215.124.81) has joined #haskell
2015-10-30 19:28:21	harwiltz	Basically what I want to do is make a function that gathers the files in a directory and adds a '/' to the end of the ones that are folders
2015-10-30 19:28:55	harwiltz	But I keep getting type mismatches because of IO
2015-10-30 19:29:21	Romefeller	Hello all
2015-10-30 19:29:43	Romefeller	harwiltz: fmap
2015-10-30 19:30:09	harwiltz	Romefeller: Ok, I've never heard of that. I'll look it up. I'm quite the noob lol
2015-10-30 19:31:05	Romefeller	harwiltz: String and IO String are different. If you have a function f::String -> String, you'll need fmap f to get IO String -> IO String.
2015-10-30 19:31:15	<--	m0rphism (~m0rphism@HSI-KBW-095-208-106-119.hsi5.kabel-badenwuerttemberg.de) has quit (Quit: Leaving.)
2015-10-30 19:31:36	-->	adek (~adek@199.201.64.3) has joined #haskell
2015-10-30 19:32:15	dibblego	isDirectory will require (=<<)
2015-10-30 19:32:31	<--	SCHAAP137 (~dorian@unaffiliated/schaap137) has quit (Ping timeout: 260 seconds)
2015-10-30 19:32:34	harwiltz	dibblego: What exactly does that operator do?
2015-10-30 19:33:28	-->	lispyone_ (~lispyone@c-71-238-197-11.hsd1.ar.comcast.net) has joined #haskell
2015-10-30 19:33:30	harwiltz	dibblego: Also I've never heard of that function (isDirectory), I am using doesDirectoryExist
2015-10-30 19:35:15	<--	nate_c (~nate_c@ip24-253-25-149.lv.lv.cox.net) has quit (Ping timeout: 240 seconds)
2015-10-30 19:35:22	<--	Yuras (~Yuras@37.44.75.198) has quit (Ping timeout: 250 seconds)
2015-10-30 19:35:48	-->	rossm (~rossm@host-92-30-102-90.as13285.net) has joined #haskell
2015-10-30 19:36:54	-->	centrinia (~centrinia@2602:306:bd0d:a690:15be:43ec:dc3b:6278) has joined #haskell
2015-10-30 19:37:14	-->	mmachenry (~Adium@209-6-53-2.c3-0.smr-ubr1.sbo-smr.ma.cable.rcn.com) has joined #haskell
2015-10-30 19:37:52	<--	NightRa (uid40361@gateway/web/irccloud.com/x-oiyyowqcivvkxiur) has quit (Quit: Connection closed for inactivity)
2015-10-30 19:39:29	-->	emilypi (~emilypi@c-174-52-154-254.hsd1.ut.comcast.net) has joined #haskell
2015-10-30 19:41:50	<--	Coldblackice (~anonz@unaffiliated/coldblackice) has quit (Ping timeout: 240 seconds)
2015-10-30 19:42:35	<--	coltfred (~coltfred@71.15.193.15) has quit (Ping timeout: 255 seconds)
2015-10-30 19:46:26	<--	rossm (~rossm@host-92-30-102-90.as13285.net) has quit (Ping timeout: 244 seconds)
2015-10-30 19:46:27	-->	SCHAAP137 (~dorian@unaffiliated/schaap137) has joined #haskell
2015-10-30 19:46:27	<--	emilypi (~emilypi@c-174-52-154-254.hsd1.ut.comcast.net) has quit (Ping timeout: 256 seconds)
2015-10-30 19:46:27	-->	twopoint718 (~chris@68-185-170-61.dhcp.mdsn.wi.charter.com) has joined #haskell
2015-10-30 19:46:27	<--	twopoint718 (~chris@68-185-170-61.dhcp.mdsn.wi.charter.com) has quit (Changing host)
2015-10-30 19:46:27	-->	twopoint718 (~chris@fsf/member/twopoint718) has joined #haskell
2015-10-30 19:46:27	-->	mizu_no_oto (~textual@c-73-219-2-228.hsd1.ma.comcast.net) has joined #haskell
2015-10-30 19:46:44	-->	predator117 (~predator1@p4FDC027D.dip0.t-ipconnect.de) has joined #haskell
2015-10-30 19:46:48	-->	fizbin (~Adium@wan.eccrsd.us) has joined #haskell
2015-10-30 20:46:17	-->	harwiltz (~harwiltz@modemcable109.165-58-74.mc.videotron.ca) has joined #haskell
2015-10-30 20:46:17	--	Topic for #haskell is "http://www.haskell.org/ | https://wiki.haskell.org/IRC_channel | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-10-30 20:46:17	--	Topic set by quicksilver (~jules@roobarb.crazydogs.org) on Wed, 07 Oct 2015 15:39:49
2015-10-30 20:46:17	--	Channel #haskell: 1469 nicks (1 op, 0 voices, 1468 normals)
2015-10-30 20:46:18	--	URL for #haskell: http://www.haskell.org/
2015-10-30 20:46:19	--	Channel created on Sun, 26 Nov 2006 06:42:48
2015-10-30 20:46:39	-->	zachmay (~anonymous@cpe-74-130-28-82.kya.res.rr.com) has joined #haskell
2015-10-30 20:48:05	<--	refried_ (~textual@lawn-128-61-72-167.lawn.gatech.edu) has quit (Client Quit)
2015-10-30 20:48:49	harwiltz	I'm having trouble dealing with the IO Monad while trying to make a function that lists files in the current directory and marks which ones are folders. Can anyone help?
2015-10-30 20:49:21	-->	justace (~edawg@pool-108-15-94-85.bltmmd.fios.verizon.net) has joined #haskell
2015-10-30 20:50:10	-->	osa1 (~omer@2601:801:1:4a07:2ab2:bdff:fedf:fa66) has joined #haskell
2015-10-30 20:50:44	<--	juanpablo__ (~juanpablo@181.39.194.178) has quit (Ping timeout: 246 seconds)
2015-10-30 20:53:30	-->	logomachist (~logomachi@24.152.218.4.res-cmts.eph2.ptd.net) has joined #haskell
2015-10-30 20:54:14	Lantern_O_jack	harwiltz: If you do something like
2015-10-30 20:54:14	Lantern_O_jack	    do files <- getDirectoryContents "/tmp"
2015-10-30 20:54:14	Lantern_O_jack	       filterM doesDirectoryExist files
2015-10-30 20:54:14	Lantern_O_jack	you get the directories of /tmp
2015-10-30 20:54:23	Lantern_O_jack	getDirectoryContents and doesDirectoryExist are from System.Directory
2015-10-30 20:55:07	harwiltz	Hmm, I imported System.Directory just couldn't figure out how to get the booleans out of the IO Boolean format. I'll try it
2015-10-30 20:55:15	harwiltz	Lantern_O_jack, thanks
2015-10-30 20:57:00	<--	zedbourbaki (~zedbourba@modemcable003.23-130-66.mc.videotron.ca) has quit (Remote host closed the connection)
2015-10-30 20:57:12	harwiltz	Lantern_o_jack, but if I wanted to return a list of FilePaths where there was a '/' added after the directories, how can I do that?
2015-10-30 20:58:26	<--	Wuzzy (~Wuzzy@p549F9216.dip0.t-ipconnect.de) has quit (Remote host closed the connection)
2015-10-30 20:58:36	<--	Atrumx (~Atrumx@unaffiliated/fivedeltasix) has quit (Quit: exit)
2015-10-30 20:59:09	-->	FreeBirdLjj (~freebirdl@49.77.143.154) has joined #haskell
2015-10-30 20:59:22	pavonia	harwiltz: Do you know how the do-blocks work?
2015-10-30 20:59:35	<--	e2kp (~Unknown@unaffiliated/e2kp) has quit (Ping timeout: 265 seconds)
2015-10-30 21:00:14	harwiltz	pavonia, I believe so. I just don't know how to return the list because whenever I try mapping a function to a list I get type mismatches because of the IO Monad
2015-10-30 21:00:24	-->	tertain (~tertain@181.67.210.231) has joined #haskell
2015-10-30 21:00:51	pavonia	Maybe you want mapM
2015-10-30 21:00:53	pavonia	:t mapM
2015-10-30 21:00:55	lambdabot	(Monad m, Traversable t) => (a -> m b) -> t a -> m (t b)
2015-10-30 21:00:59	<--	faberbrain (~faberbrai@75-111-99-143.trckcmtc01.res.dyn.suddenlink.net) has quit (Remote host closed the connection)
2015-10-30 21:01:07	-->	e2kp (~Unknown@modemcable094.16-200-24.mc.videotron.ca) has joined #haskell
2015-10-30 21:01:18	harwiltz	I was just about to try that! Thanks, hopefully all goes well haha
2015-10-30 21:01:20	<--	medicijnman (~methos@5355C0B2.cm-6-6d.dynamic.ziggo.nl) has left #haskell
2015-10-30 21:01:29	Lantern_O_jack	No, they want "fmap . map" I would think
2015-10-30 21:01:49	harwiltz	why fmap . map and not map?
2015-10-30 21:02:17	Lantern_O_jack	harwiltz: because you're mapping over two things
2015-10-30 21:02:27	Lantern_O_jack	The 'fmap' maps over the IO, the 'map' maps over the list
2015-10-30 21:02:35	<--	justace (~edawg@pool-108-15-94-85.bltmmd.fios.verizon.net) has left #haskell ("Leaving")
2015-10-30 21:02:38	harwiltz	Oh, I see. I'll try that out.
2015-10-30 21:03:04	Lantern_O_jack	harwiltz: If you have "intsIO :: IO [Int]" and you want to map show over the list
2015-10-30 21:03:05	Lantern_O_jack	    do ints <- intsIO
2015-10-30 21:03:05	Lantern_O_jack	       let ints' = map show ints
2015-10-30 21:03:05	Lantern_O_jack	       return ints'
2015-10-30 21:03:29	harwiltz	But you didn't use fmap there?
2015-10-30 21:03:39	Lantern_O_jack	That's right, using fmap/map:
2015-10-30 21:03:39	Lantern_O_jack	:t fmap (map show) (undefined :: IO [Int])
2015-10-30 21:03:40	lambdabot	IO [String]
2015-10-30 21:03:54	Lantern_O_jack	harwiltz: I wanted to show a more explicit version first
2015-10-30 21:04:14	harwiltz	ok, so why can't I just use map?
2015-10-30 21:04:23	<--	tmtwd (~tmtwd@CPE0c473da71813-CM0c473da71810.cpe.net.cable.rogers.com) has quit (Ping timeout: 246 seconds)
2015-10-30 21:04:37	Lantern_O_jack	You can use 'map show' on something of type [Int]
2015-10-30 21:04:42	Lantern_O_jack	You cannot use 'map show' on something of type IO [Int]
2015-10-30 21:04:51	harwiltz	right sorry, makes ssense
2015-10-30 21:05:16	Lantern_O_jack	It's an extra onion layer you have to 'peel' off
2015-10-30 21:05:48	Lantern_O_jack	See the type of 'map' versus the type of 'fmap.map'
2015-10-30 21:05:53	Lantern_O_jack	:t map
2015-10-30 21:05:55	lambdabot	(a -> b) -> [a] -> [b]
2015-10-30 21:05:55	Lantern_O_jack	:t fmap.map :: (a -> b) -> IO [a] -> IO [b]
2015-10-30 21:05:56	lambdabot	(a -> b) -> IO [a] -> IO [b]
2015-10-30 21:05:57	<--	obb (~user@2a02:8071:b183:db00:e611:5bff:fe2b:b263) has quit (Quit: Leaving)
2015-10-30 21:05:58	<--	nek0 (~nek0@chelnok.de) has quit (Ping timeout: 268 seconds)
2015-10-30 21:06:30	-->	fuzzyhorns (~fuzzyhorn@73.38.57.191) has joined #haskell
2015-10-30 21:07:18	harwiltz	I see. So I'm trying to do fmap . map, and should I pass that a lambda function that tests if the directory exists and adds a slash at the end if it does?
2015-10-30 21:07:51	-->	nek0 (~nek0@chelnok.de) has joined #haskell
2015-10-30 21:08:08	-->	isocliff (~isocliff@h74n4-sbg-a11.ias.bredband.telia.com) has joined #haskell
2015-10-30 21:08:11	<--	derdon (~Simon@p5B31D1E0.dip0.t-ipconnect.de) has quit (Ping timeout: 260 seconds)
2015-10-30 21:08:13	harwiltz	Like this:
2015-10-30 21:08:24	harwiltz	 contents <- getDirectoryContents path
2015-10-30 21:08:24	harwiltz	 29     let list = (fmap . map) (\s -> if doesDirectoryExist s then (s ++ "/") else s) contents yY
2015-10-30 21:08:33	<--	kamatsu (~Adium@123-243-95-236.static.tpgi.com.au) has quit (Quit: Leaving.)
2015-10-30 21:08:37	harwiltz	Sorry bad formatting
2015-10-30 21:08:51	Lantern_O_jack	If you want to add a slash at the end, use 'fmap' and 'map', but you will need 'mapM' or similar functions if you want 'doesDirectoryExist'
2015-10-30 21:09:43	Lantern_O_jack	harwiltz: An important distinction that may seem frustrating, looking at the types of map and fmap we see
2015-10-30 21:09:43	Lantern_O_jack	    (a -> b) -> ...
2015-10-30 21:09:43	Lantern_O_jack	meaning that the function cannot have side-effects
2015-10-30 21:09:46	harwiltz	Ok, but shouldn't I be doing that all in one step? 
2015-10-30 21:10:13	Lantern_O_jack	You can, but I would separate the two
2015-10-30 21:10:37	Lantern_O_jack	Checking 'doesDirectoryExist': side-effects. ==> mapM
2015-10-30 21:10:37	Lantern_O_jack	Adding 
2015-10-30 21:10:46	<--	fuzzyhorns (~fuzzyhorn@73.38.57.191) has quit (Ping timeout: 255 seconds)
2015-10-30 21:10:49	<--	veltas (~quassel@static.117.33.251.148.clients.your-server.de) has quit (Remote host closed the connection)
2015-10-30 21:10:52	Lantern_O_jack	Adding '/' to paths: pure. ==> map/fmap
2015-10-30 21:10:52	Lantern_O_jack	 
2015-10-30 21:10:54	<--	fujimura (~fujimura@ngn6-ppp61.tokyo.sannet.ne.jp) has quit (Remote host closed the connection)
2015-10-30 21:11:00	harwiltz	Ok, but I don't understand the separation. Can you please explain how to split it up? I was thinking making a list of Trues/Falses by doing fmap . mapM doesDirectoryExist and then somehow mapping it to the list
2015-10-30 21:11:04	-->	veltas (~quassel@static.117.33.251.148.clients.your-server.de) has joined #haskell
2015-10-30 21:11:25	Lantern_O_jack	Quick question, do you want to remove non-directories?
2015-10-30 21:11:36	harwiltz	So what do you do with the result of checking if the directory exists? That's what I can't wrap my head around. Sorry about this
2015-10-30 21:11:44	-->	Johan_ (~Johan@192.165.46.98) has joined #haskell
2015-10-30 21:11:48	harwiltz	No, I want to keep all of them, just show which ones are directories
2015-10-30 21:12:06	Lantern_O_jack	Okay, then it's okay to fold them into one: I'll post an example in a bit if you want
2015-10-30 21:12:12	harwiltz	Thank you very much
2015-10-30 21:12:24	<--	isocliff (~isocliff@h74n4-sbg-a11.ias.bredband.telia.com) has quit (Ping timeout: 244 seconds)
2015-10-30 21:12:57	 *	hackagebot dimensional 1.0.0.0 - Statically checked physical dimensions,  using Type Families and Data Kinds.  https://hackage.haskell.org/package/dimensional-1.0.0.0 (dmcclean)
2015-10-30 21:13:06	harwiltz	If I had a list of booleans generated from mapM doesDirectoryExist and another list generated by the getDirectoryContents, is there a way to "combine" them so that Haskell knows when to add the "/"?
2015-10-30 21:13:18	Lantern_O_jack	    mapM (\path -> do isDir <- doesDirectoryExist path; pure (if isDir then path ++ "/" else path))
2015-10-30 21:13:42	Lantern_O_jack	harwiltz: Sure, if they are in the same order it's easy
2015-10-30 21:13:50	harwiltz	So how do I do that? Thanks so much.
2015-10-30 21:13:52	-->	Eiam_ (~mine@unaffiliated/eiam) has joined #haskell
2015-10-30 21:14:07	<--	rcyr (~rcyr@modemcable130.137-163-184.mc.videotron.ca) has quit (Quit: Bye!)
2015-10-30 21:14:08	Lantern_O_jack	    zipWith (\isDir path -> if isDir then path ++ "/" else path)
2015-10-30 21:14:12	Lantern_O_jack	:t zipWith (\isDir path -> if isDir then path ++ "/" else path)
2015-10-30 21:14:13	lambdabot	[Bool] -> [[Char]] -> [[Char]]
2015-10-30 21:14:23	<--	wookiehangover (~wookiehan@2601:647:0:c832:65d2:9a28:5475:69f8) has quit (Ping timeout: 240 seconds)
2015-10-30 21:14:25	Lantern_O_jack	:t zipWith (\isDir path -> if isDir then path ++ "/" else path) :: [Bool] -> [FilePath] -> [FilePath]
2015-10-30 21:14:27	lambdabot	[Bool] -> [FilePath] -> [FilePath]
2015-10-30 21:14:36	harwiltz	But what is isDir>
2015-10-30 21:14:39	harwiltz	*?
2015-10-30 21:14:42	-->	rcyr (~rcyr@modemcable130.137-163-184.mc.videotron.ca) has joined #haskell
2015-10-30 21:14:44	Lantern_O_jack	the boolean
2015-10-30 21:14:54	-->	fujimura (~fujimura@ngn6-ppp61.tokyo.sannet.ne.jp) has joined #haskell
2015-10-30 21:14:58	Lantern_O_jack	from the list of booleans generated from mapM doesDirectoryExist
2015-10-30 21:15:00	harwiltz	Oh so isDir is the list of booleans and path is the list of directory contents?
2015-10-30 21:15:09	harwiltz	Ahhh I see. Will try that right now. Thanks so much
2015-10-30 21:15:12	ackthet	discuss happstack vs yesod?
2015-10-30 21:15:14	Lantern_O_jack	Well, 'isDir' is a *single* boolean
2015-10-30 21:15:25	Lantern_O_jack	and 'path' is the corresponding *single* path
2015-10-30 21:15:32	Lantern_O_jack	You have the right idea though
2015-10-30 21:15:43	harwiltz	Right but you're calling zipWith on both the lists so it iterates through them
2015-10-30 21:15:52	<--	Jesin (~Jesin@pool-72-83-138-125.washdc.fios.verizon.net) has quit (Ping timeout: 272 seconds)
2015-10-30 21:15:56	Lantern_O_jack	Correct
2015-10-30 21:16:09	harwiltz	Thank you very much.
2015-10-30 21:16:40	Lantern_O_jack	yw
2015-10-30 21:16:51	<--	mgsloan (~mgsloan@75-165-110-36.tukw.qwest.net) has quit (Ping timeout: 264 seconds)
2015-10-30 21:17:05	-->	coltfred (~coltfred@71.15.193.15) has joined #haskell
2015-10-30 21:17:08	harwiltz	and just to be clear, I get the booleans by mapM (doesDirectoryExist) paths right?
2015-10-30 21:17:10	-->	Jesin (~Jesin@pool-72-83-138-125.washdc.fios.verizon.net) has joined #haskell
2015-10-30 21:17:27	<--	Johan_ (~Johan@192.165.46.98) has quit (Ping timeout: 264 seconds)
2015-10-30 21:17:37	<--	pacak (~pacak@175.156.145.194) has quit (Ping timeout: 250 seconds)
2015-10-30 21:17:47	Lantern_O_jack	Yes
2015-10-30 21:17:47	Lantern_O_jack	    mapM doesDirectoryExist :: [FilePath] -> IO [Bool]
2015-10-30 21:17:55	harwiltz	Great. Thanks a lot.
2015-10-30 21:18:05	Lantern_O_jack	harwiltz: The first example I gave was wrong, since getDirectoryContents only returns filenames and not absolute paths
2015-10-30 21:18:32	harwiltz	Lantern_O_jack, no problem, believe me I came up with a bunch of wrong examples trying to figure this out too haha
2015-10-30 21:18:46	<--	wanderleyguima (~textual@199.201.64.131) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-10-30 21:19:21	<--	e2kp (~Unknown@modemcable094.16-200-24.mc.videotron.ca) has quit (Changing host)
2015-10-30 21:19:21	-->	e2kp (~Unknown@unaffiliated/e2kp) has joined #haskell
2015-10-30 21:19:37	-->	nolrai66 (~HWSoD@c-73-190-72-21.hsd1.or.comcast.net) has joined #haskell
2015-10-30 21:19:41	harwiltz	Lantern_O_jack, one more thing, the function should return a IO [FilePath] right?
2015-10-30 21:19:47	Lantern_O_jack	Yes
2015-10-30 21:19:57	harwiltz	Ok, nice
2015-10-30 21:19:59	Lantern_O_jack	It cannot simply return a [FilePath]
2015-10-30 21:20:16	harwiltz	Right. This Monad stuff confuses the hell out of me
2015-10-30 21:20:35	-->	Goplat (~goplat@reactos/developer/Goplat) has joined #haskell
2015-10-30 21:20:42	Lantern_O_jack	Start a little smaller until you get used to it, in a way it's a better way of thinking even though it doesn't seem so at first
2015-10-30 21:20:56	-->	lifter (~stolaruk@2602:306:3499:69f0:fddd:3769:c17b:c95d) has joined #haskell
2015-10-30 21:21:11	-->	wookiehangover (~wookiehan@2601:647:0:c832:31eb:3368:db0f:a752) has joined #haskell
2015-10-30 21:21:27	harwiltz	I see. I'm starting to get a small understanding of the concept, I think I just need to see it in use a little more.
2015-10-30 21:21:51	lifter	How can I write a literal Double? "10.0" (as opposed to "10")?
2015-10-30 21:22:14	-->	favonia (~favonia@pdpc/supporter/student/favonia) has joined #haskell
2015-10-30 21:22:17	Lantern_O_jack	> 10.0
2015-10-30 21:22:18	lambdabot	 10.0
2015-10-30 21:22:59	-->	wanderleyguima (~textual@199.201.64.131) has joined #haskell
2015-10-30 21:23:08	-->	jay6981 (~Adium@2601:646:8d01:7f7d:24bd:6e17:5e2a:5b3d) has joined #haskell
2015-10-30 21:23:16	Lantern_O_jack	harwiltz: In C (simplified) the following function call returns 6, for the number of characters it prints
2015-10-30 21:23:16	Lantern_O_jack	    printf("Hello\n")
2015-10-30 21:23:16	Lantern_O_jack	    
2015-10-30 21:23:20	lifter	Well 10.0 is a Fractional while 10 is a Num
2015-10-30 21:23:50	Lantern_O_jack	harwiltz: Yet you would never say replace printf("Hello\n") by 6, right?
2015-10-30 21:24:00	Lantern_O_jack	lifter: Then I'm not sure I understand your question
2015-10-30 21:24:00	-->	faberbrain (~faberbrai@75-111-99-143.trckcmtc01.res.dyn.suddenlink.net) has joined #haskell
2015-10-30 21:24:01	harwiltz	Lantern_O_jack, right
2015-10-30 21:24:23	Lantern_O_jack	harwiltz: In this sense,
2015-10-30 21:24:23	Lantern_O_jack	    printf("Hello\n") :: IO Int
2015-10-30 21:24:23	Lantern_O_jack	while
2015-10-30 21:24:23	Lantern_O_jack	    6                 ::    Int
2015-10-30 21:24:43	-->	TheOnionKnight_ (~yaaic@47.080.dsl.brs.iprimus.net.au) has joined #haskell
2015-10-30 21:24:43	<--	TheOnionKnight (~yaaic@pa49-197-157-192.pa.qld.optusnet.com.au) has quit (Read error: Connection reset by peer)
2015-10-30 21:24:47	harwiltz	Ok, I kind of see where you're going with this
2015-10-30 21:24:55	Lantern_O_jack	There is a *huge* difference between the two, Haskell makes that difference explicit
2015-10-30 21:24:59	-->	funfunctor (~edward@CPE-121-211-246-20.hhui7.cht.bigpond.net.au) has joined #haskell
2015-10-30 21:25:15	Lantern_O_jack	Whether you care to make that distinction or not, up to you
2015-10-30 21:25:24	-->	kamatsu (~Adium@123-243-95-236.static.tpgi.com.au) has joined #haskell
2015-10-30 21:25:30	Lantern_O_jack	harwiltz: Similar to this pithy quote
2015-10-30 21:25:30	Lantern_O_jack	@quote /bin/ls
2015-10-30 21:25:30	lambdabot	shachaf says: getLine :: IO String contains a String in the same way that /bin/ls contains a list of files
2015-10-30 21:25:47	harwiltz	I see. Seems interesting, probably just takes a lot of getting used to 
2015-10-30 21:26:03	<--	logomachist (~logomachi@24.152.218.4.res-cmts.eph2.ptd.net) has quit (Ping timeout: 240 seconds)
2015-10-30 21:26:22	Lantern_O_jack	At first it's only a PITA
2015-10-30 21:26:30	harwiltz	PITA?
2015-10-30 21:26:35	Lantern_O_jack	Pain in the ass :)
2015-10-30 21:26:39	harwiltz	Hahaha
2015-10-30 21:26:41	harwiltz	Indeed
2015-10-30 21:27:02	Lantern_O_jack	But when you realise that you can use it to your advantage, things change quickly in my experience
2015-10-30 21:27:04	harwiltz	I love Haskell though for the most part. Just this stuff is definitely a PITA :)
2015-10-30 21:27:21	<--	Stratege (~Stratege@unaffiliated/stratege) has quit (Quit: quit)
2015-10-30 21:27:24	Lantern_O_jack	harwiltz: Do you know any C?
2015-10-30 21:27:45	harwiltz	Lantern_O_jack, I'm excited for that to happen because Haskell seems really interesting. Off to watch a bunch of YouTube videos about this stuff later! And yes, I know some C
2015-10-30 21:28:11	Lantern_O_jack	If we have
2015-10-30 21:28:12	Lantern_O_jack	    int a = i++;
2015-10-30 21:28:12	Lantern_O_jack	    int b = i++;
2015-10-30 21:28:12	Lantern_O_jack	can we refactor it to
2015-10-30 21:28:15	Lantern_O_jack	    int z = i++;
2015-10-30 21:28:18	Lantern_O_jack	    int a = z;
2015-10-30 21:28:22	Lantern_O_jack	    int b = z;
2015-10-30 21:28:28	Lantern_O_jack	And if not, why not?
2015-10-30 21:29:19	-->	Ziltrum (~Destol@TOROON017SW-LP140-04-845543404.dsl.bell.ca) has joined #haskell
2015-10-30 21:29:26	harwiltz	Hmm, I would say not because in the second one, a and b store the same value, but in the first one b should be greater than a by 1
2015-10-30 21:29:47	Lantern_O_jack	But we can refactor
2015-10-30 21:29:47	Lantern_O_jack	    int a = 42; int b = 42;
2015-10-30 21:29:47	Lantern_O_jack	to
2015-10-30 21:29:51	Lantern_O_jack	    int z = 42; int a = z; int b = z;
2015-10-30 21:29:55	harwiltz	Yes
2015-10-30 21:29:59	Lantern_O_jack	How is i++ different from 42?
2015-10-30 21:30:05	<--	wanderleyguima (~textual@199.201.64.131) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-10-30 21:30:18	harwiltz	Because the ++ is only evaluated after, right?
2015-10-30 21:30:31	harwiltz	I don't understand ++ entirely, I just know it isn't evaluated right away
2015-10-30 21:30:31	rcyr	Lantern_O_jack: "i" won't have the same value at the end.
2015-10-30 21:30:42	<--	ikke (uid10360@gateway/web/irccloud.com/x-kdxijvrcebylcokn) has quit (Quit: Connection closed for inactivity)
2015-10-30 21:31:13	-->	tabemann (~tabemann@172-13-49-137.lightspeed.milwwi.sbcglobal.net) has joined #haskell
2015-10-30 21:31:14	<--	aranea (~aranea@wikimedia/FalconL) has quit (Quit: leaving)
2015-10-30 21:31:16	<--	kamatsu (~Adium@123-243-95-236.static.tpgi.com.au) has quit (Quit: Leaving.)
2015-10-30 21:31:35	rcyr	harwiltz: i++ will increment i by one but "return" the old value
2015-10-30 21:31:50	harwiltz	rcyr, right, that's what I meant
2015-10-30 21:32:30	harwiltz	So in his first scenario, a stores 'i', b stores 'i + 1' and then i = 'i + 2' 
2015-10-30 21:33:09	MrSkeltal	I think the idea was that "i++" is a different value in different contexts
2015-10-30 21:33:19	MrSkeltal	so you have absolutely no right to do common-subexpression-elimination
2015-10-30 21:33:26	<--	blue_deref (~blue_dere@cpe-74-77-246-241.buffalo.res.rr.com) has quit (Quit: bbn)
2015-10-30 21:33:57	Lantern_O_jack	harwiltz: In Haskell if you have a similar function "inc i" 
2015-10-30 21:33:57	Lantern_O_jack	    let a = inc i
2015-10-30 21:33:57	Lantern_O_jack	        b = inc i
2015-10-30 21:33:57	Lantern_O_jack	you *can* safely rewrite it as
2015-10-30 21:34:00	Lantern_O_jack	    let z = int i
2015-10-30 21:34:04	Lantern_O_jack	        a = z
2015-10-30 21:34:07	Lantern_O_jack	        b = z
2015-10-30 21:34:17	-->	John[Lisbeth] (~Johnlisbe@c-73-225-140-108.hsd1.wa.comcast.net) has joined #haskell
2015-10-30 21:34:26	Lantern_O_jack	*z = inc i
2015-10-30 21:34:31	John[Lisbeth]	I asked about this a year ago and now my research is coming along the same veins
2015-10-30 21:34:34	<--	Romefeller (b3d77c51@gateway/web/freenode/ip.179.215.124.81) has quit (Ping timeout: 246 seconds)
2015-10-30 21:34:44	harwiltz	Lantern_O_jack, is that because of Haskell's laziness?
2015-10-30 21:34:47	John[Lisbeth]	Basically I am curious about the C primitives which make up haskell code today
2015-10-30 21:34:50	John[Lisbeth]	such as <-
2015-10-30 21:34:56	<--	Jaume_ (~Jaume@CPEbc4dfbd1f493-CMbc4dfbd1f490.cpe.net.cable.rogers.com) has quit (Remote host closed the connection)
2015-10-30 21:35:05	Lantern_O_jack	No, it's beacuse Haskell maintains a distinction between /evaluationf/ on the one and and /execution/ on the other
2015-10-30 21:35:21	-->	pacak (~pacak@175.156.145.194) has joined #haskell
2015-10-30 21:35:45	harwiltz	Ok, I think I understand
2015-10-30 21:35:54	Lantern_O_jack	harwiltz: When you do
2015-10-30 21:35:54	Lantern_O_jack	    main = do
2015-10-30 21:35:54	Lantern_O_jack	      let foo = putStrLn "ARRGGGH I'M A PIRRATEE"
2015-10-30 21:35:54	Lantern_O_jack	      putStrLn "main"
2015-10-30 21:35:58	Lantern_O_jack	it never prints anything about being a pirate
2015-10-30 21:36:10	harwiltz	what would that print?
2015-10-30 21:36:13	Lantern_O_jack	Just "main"
2015-10-30 21:36:18	Lantern_O_jack	"main\n" to be precise
2015-10-30 21:36:25	Lantern_O_jack	Actions (like 'putStrLn "...") are first class
2015-10-30 21:36:29	-->	nshepperd (~asdfg@ppp118-209-51-222.lns20.mel4.internode.on.net) has joined #haskell
2015-10-30 21:36:44	John[Lisbeth]	In actuality I am curious about the point at which the code stopped being written and compiled in C and started being written and compiled in haskell
2015-10-30 21:36:48	harwiltz	So why wouldn't the pirate thing be printed?
2015-10-30 21:36:49	<--	jedws (~jedws@c58-109-75-176.randw4.nsw.optusnet.com.au) has quit (Quit: Computer has gone to sleep.)
2015-10-30 21:36:49	-->	rodlogic (~rodlogic@2601:18a:c100:3d74:61b4:6c5e:cc3f:b223) has joined #haskell
2015-10-30 21:37:05	John[Lisbeth]	So that I can see the actual logical primitives in haskell
2015-10-30 21:37:11	-->	tlaxkit (~yo@95.63.152.106) has joined #haskell
2015-10-30 21:37:39	-->	jedws (~jedws@c58-109-75-176.randw4.nsw.optusnet.com.au) has joined #haskell
2015-10-30 21:38:02	nolrai66	Harwiltz: because its never ran.
2015-10-30 21:38:06	-->	tripped (~trip@71-35-96-121.tukw.qwest.net) has joined #haskell
2015-10-30 21:38:09	<--	goodacre-liam (~goodacre-@host-92-29-243-41.as13285.net) has quit (Quit: Leaving)
2015-10-30 21:38:20	harwiltz	why doesn't it run?
2015-10-30 21:38:39	-->	Kristler (~KW@S0106602ad0826462.ok.shawcable.net) has joined #haskell
2015-10-30 21:38:50	John[Lisbeth]	The reason is that I am trying to make my own toy language for running in asp.net
2015-10-30 21:38:54	nolrai66	"let foo = ..." is a definition.
2015-10-30 21:39:03	John[Lisbeth]	which compiles to a language called CIL which is like assembly
2015-10-30 21:39:07	harwiltz	Oh I see.
2015-10-30 21:39:20	John[Lisbeth]	Everything in .net compiles to CIL
2015-10-30 21:39:22	<--	yvm (~y@176.212.190.12) has left #haskell ("Leaving")
2015-10-30 21:39:56	John[Lisbeth]	So if I can trace some of the logical primitives back to C and then back to assembly, then I can ascertain the logical constructs which make up haskell and reproduce "a haskell" for .net
2015-10-30 21:40:27	<--	mizu_no_oto (~textual@c-73-219-2-228.hsd1.ma.comcast.net) has quit (Quit: Computer has gone to sleep.)
2015-10-30 21:40:48	-->	Nikotiini (~user@cable-roi-50ddff-93.dhcp.inet.fi) has joined #haskell
2015-10-30 21:40:56	<--	neoncontrails (~neoncontr@76-196-233-65.lightspeed.sndgca.sbcglobal.net) has quit (Remote host closed the connection)
2015-10-30 21:41:04	<--	twopoint718 (~chris@fsf/member/twopoint718) has quit (Quit: leaving)
2015-10-30 21:42:11	<--	rodlogic (~rodlogic@2601:18a:c100:3d74:61b4:6c5e:cc3f:b223) has quit (Ping timeout: 246 seconds)
2015-10-30 21:42:54	-->	Romefeller (b3d77c51@gateway/web/freenode/ip.179.215.124.81) has joined #haskell
2015-10-30 21:42:58	<--	Sinestro (~jwilliams@c-24-10-56-60.hsd1.ca.comcast.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-10-30 21:43:07	-->	logomachist (~logomachi@24.152.218.4.res-cmts.eph2.ptd.net) has joined #haskell
2015-10-30 21:44:00	John[Lisbeth]	It would basically be the "c haskell compiler" and would not longer be in development
2015-10-30 21:44:07	-->	fkurkows1 (~fkurkowsk@179.180.173.216) has joined #haskell
2015-10-30 21:45:02	<--	fkurkowski (~fkurkowsk@177.18.98.89) has quit (Ping timeout: 265 seconds)
2015-10-30 21:46:30	-->	juanpablo__ (~juanpablo@181.39.194.178) has joined #haskell
2015-10-30 21:47:21	harwiltz	Lantern_O_jack, Everything works almost perfectly for the directory listing, so thanks a lot! Just one more quick thing, all the directories print in quotation marks. 
2015-10-30 21:47:24	-->	Jaume_ (~Jaume@CPEbc4dfbd1f493-CMbc4dfbd1f490.cpe.net.cable.rogers.com) has joined #haskell
2015-10-30 21:47:52	harwiltz	I am getting a list returned by the function that called zipWith, then doing mapM_ print list
2015-10-30 21:47:58	-->	takle (~takle@81-174-213-228.pth-as6.dial.plus.net) has joined #haskell
2015-10-30 21:48:08	harwiltz	Do you know why it displays them in quotes?
2015-10-30 21:48:17	<--	jedws (~jedws@c58-109-75-176.randw4.nsw.optusnet.com.au) has quit (Quit: Computer has gone to sleep.)
2015-10-30 21:49:08	<--	s00pcan (~chris@108-208-65-111.lightspeed.livnmi.sbcglobal.net) has quit (Ping timeout: 250 seconds)
2015-10-30 21:49:14	-->	Sinestro (~jwilliams@c-24-10-56-60.hsd1.ca.comcast.net) has joined #haskell
2015-10-30 21:49:21	shachaf	Because that is what print does.
2015-10-30 21:49:29	-->	__009__kk (~zzzz@S010624a2e1e735cf.cg.shawcable.net) has joined #haskell
2015-10-30 21:49:31	shachaf	(With Strings.)
2015-10-30 21:49:56	-->	gfixler (~gfixler@cpe-108-185-238-241.socal.res.rr.com) has joined #haskell
2015-10-30 21:50:25	-->	tibbe (~tibbe@31.10.158.160) has joined #haskell
2015-10-30 21:50:53	harwiltz	shachaf, I'm printing FilePaths. Do you know how to remove the quotes?
2015-10-30 21:51:06	shachaf	FilePath = String
2015-10-30 21:51:35	<--	favonia (~favonia@pdpc/supporter/student/favonia) has quit (Ping timeout: 260 seconds)
2015-10-30 21:51:36	<--	juanpablo__ (~juanpablo@181.39.194.178) has quit (Ping timeout: 268 seconds)
2015-10-30 21:51:46	harwiltz	shachaf, Ok, switched to putStrLn and it works :)
2015-10-30 21:52:34	-->	favonia (~favonia@pdpc/supporter/student/favonia) has joined #haskell
2015-10-30 21:52:39	<--	snyrk (~snyrk@adsl-84-227-251-154.adslplus.ch) has quit (Ping timeout: 260 seconds)
2015-10-30 21:52:45	<--	takle (~takle@81-174-213-228.pth-as6.dial.plus.net) has quit (Ping timeout: 265 seconds)
2015-10-30 21:53:08	-->	danharaj (620e885f@gateway/web/cgi-irc/kiwiirc.com/ip.98.14.136.95) has joined #haskell
2015-10-30 21:54:04	<--	danharaj (620e885f@gateway/web/cgi-irc/kiwiirc.com/ip.98.14.136.95) has quit (Client Quit)
2015-10-30 21:54:32	Lantern_O_jack	harwiltz: Went away to read the Little Prince :) glad it's working
2015-10-30 21:54:57	harwiltz	Lantern_O_jack, no problem. Thanks for all the assistance tonight, you were very helpful.
2015-10-30 21:55:19	Lantern_O_jack	harwiltz: Note of interest, since actions (IO a) are first class, we can make a function that repeats an action twice
2015-10-30 21:55:19	Lantern_O_jack	    twice x = do
2015-10-30 21:55:20	Lantern_O_jack	      x
2015-10-30 21:55:20	Lantern_O_jack	      x
2015-10-30 21:55:39	Lantern_O_jack	or a function that repeats action forever
2015-10-30 21:55:39	Lantern_O_jack	    forever x = do
2015-10-30 21:55:39	Lantern_O_jack	      x
2015-10-30 21:55:39	Lantern_O_jack	      forever x
2015-10-30 21:55:50	-->	kadoban (~mud@unaffiliated/kadoban) has joined #haskell
2015-10-30 21:55:55	harwiltz	I was actually just reading about that this morning!
2015-10-30 21:56:10	<--	xylen_ (~codywelsh@c-73-189-204-160.hsd1.ca.comcast.net) has quit (Ping timeout: 240 seconds)
2015-10-30 21:56:21	harwiltz	Is that the preferred way to do an infinite loop? (Like for a game or a command shell)
2015-10-30 21:56:48	<--	zachmay (~anonymous@cpe-74-130-28-82.kya.res.rr.com) has quit (Quit: zachmay)
2015-10-30 21:56:59	Lantern_O_jack	Generally yes, it's very useful in simple threads to spin a thread that executes some action forever
2015-10-30 21:57:38	Lantern_O_jack	harwiltz: Since they are first class we can also store actions in lists, or trees, or ...
2015-10-30 21:57:39	harwiltz	That sounds pretty complicated. I'm not very well-versed in threads either
2015-10-30 21:57:54	Lantern_O_jack	Not really complicated!
2015-10-30 21:58:18	-->	zachmay (~anonymous@cpe-74-130-28-82.kya.res.rr.com) has joined #haskell
2015-10-30 21:58:19	Lantern_O_jack	    forkIO (forever (print 1))
2015-10-30 21:58:19	Lantern_O_jack	will print 1 forever in a separate thread
2015-10-30 21:58:36	harwiltz	Really? That's actually pretty simple
2015-10-30 21:58:41	Lantern_O_jack	:-)
2015-10-30 21:58:43	harwiltz	Is that done in the IO Monad?
2015-10-30 21:58:47	Lantern_O_jack	Yes
2015-10-30 21:58:51	Lantern_O_jack	    forkIO :: IO () -> IO ThreadId
2015-10-30 21:58:55	harwiltz	Interesting. Will keep that in mind
2015-10-30 21:59:00	nitrix	I'd argue that no.
2015-10-30 21:59:04	nitrix	I hate when people say IO Monad.
2015-10-30 21:59:19	harwiltz	Sorry but whats the correct way to say it?
2015-10-30 21:59:30	-->	erochester (~Adium@va-76-4-95-1.dhcp.embarqhsd.net) has joined #haskell
2015-10-30 21:59:40	nolrai66	Thats how people say it.
2015-10-30 21:59:40	Lantern_O_jack	harwiltz: It's not wrong, but it's fine to just say "IO"
2015-10-30 21:59:42	nitrix	It's an IO action.
2015-10-30 21:59:47	harwiltz	Oh ok
2015-10-30 21:59:55	nitrix	Monad IO is just one way to use the action. It's just a type.
2015-10-30 21:59:59	Lantern_O_jack	Since IO is many things, and there is really no reason to mention "Monad"
2015-10-30 22:00:12	<--	nolrai66 (~HWSoD@c-73-190-72-21.hsd1.or.comcast.net) has left #haskell ("Leaving")
2015-10-30 22:00:18	-->	oikels (~oikels@2601:586:0:10:f814:e6b:2d54:8e48) has joined #haskell
2015-10-30 22:00:20	harwiltz	Honestly I still don't really know what a Monad is. I have lots of research to do haha
2015-10-30 22:00:23	<--	Herogx (~Herogx@109.77.206.245) has quit (Ping timeout: 246 seconds)
2015-10-30 22:00:36	Lantern_O_jack	Don't worry about it 
2015-10-30 22:00:45	-->	PianoQuark (~PianoQuar@ool-2f122061.dyn.optonline.net) has joined #haskell
2015-10-30 22:01:11	Lantern_O_jack	    forkIO (forever (putChar 'a'))
2015-10-30 22:01:11	Lantern_O_jack	    forkIO (forever (putChar 'b'))
2015-10-30 22:01:11	Lantern_O_jack	forks two threads that print 'a' and 'b' forever
2015-10-30 22:01:41	-->	xylen_ (~codywelsh@c-73-189-204-160.hsd1.ca.comcast.net) has joined #haskell
2015-10-30 22:01:45	harwiltz	So the a's and b's would likely intertwine when printed right? (because they're being printed simultaneously)
2015-10-30 22:01:48	<--	erochester (~Adium@va-76-4-95-1.dhcp.embarqhsd.net) has quit (Client Quit)
2015-10-30 22:02:11	nitrix	harwiltz: There are many tutorials online and they are almost all terrible. My recommendation if you were on #haskell-beginners would be to understand the type system first, then everything else will magically fall into place.
2015-10-30 22:02:19	-->	isocliff (~isocliff@h74n4-sbg-a11.ias.bredband.telia.com) has joined #haskell
2015-10-30 22:02:23	nitrix	harwiltz: Most importantly, monads aren't burritos.
2015-10-30 22:02:35	<--	faberbrain (~faberbrai@75-111-99-143.trckcmtc01.res.dyn.suddenlink.net) has quit (Remote host closed the connection)
2015-10-30 22:02:58	MrSkeltal	yep, can't bind burritos
2015-10-30 22:03:10	harwiltz	nitrix, I didn't think they were, hahaha. I'm reading Learn you a Haskell right now and so far I'm finding it helpful
2015-10-30 22:03:43	lpaste	emmanuel_erc pasted “I want to boost the speed of this piece of code: Finding  all  necessary pairs of distances from point set (Here are two attempts)” at http://lpaste.net/144303
2015-10-30 22:03:49	nitrix	harwiltz: LYAH is a great book to introduce you to the language; unfortunatly, from the middle and onwards, the content isn't very adequate or approached properly for a beginner.
2015-10-30 22:04:04	emmanuel_erc	some more crappy code from me
2015-10-30 22:04:05	harwiltz	nitrix, ok. So you suggest I learn on irc?
2015-10-30 22:04:42	nitrix	harwiltz: Read the book, develop your curiosity, maybe do toy projects or exercises and see what problems comes up. We'll be glad to help and point you in the right directions after that.
2015-10-30 22:04:44	-->	hucksy_ (~hucksy@p4FF5A84D.dip0.t-ipconnect.de) has joined #haskell
2015-10-30 22:05:19	harwiltz	nitrix, that's actually exactly what I'm doing! Right now I'm trying to build a simple file manager. Hopefully not too big of a leap
2015-10-30 22:05:20	-->	tristanp (~tristanp@c-50-159-71-64.hsd1.wa.comcast.net) has joined #haskell
2015-10-30 22:05:23	<--	lambdadoodle (~rohan@116.75.145.2) has quit (Ping timeout: 240 seconds)
2015-10-30 22:05:40	-->	lambdadoodle (~rohan@116.75.145.2) has joined #haskell
2015-10-30 22:05:42	<--	hucksy (~hucksy@p4FF5B138.dip0.t-ipconnect.de) has quit (Ping timeout: 260 seconds)
2015-10-30 22:06:30	<--	ddellacosta (~ddellacos@ool-4578fb26.dyn.optonline.net) has quit (Remote host closed the connection)
2015-10-30 22:06:55	<--	isocliff (~isocliff@h74n4-sbg-a11.ias.bredband.telia.com) has quit (Ping timeout: 256 seconds)
2015-10-30 22:07:10	-->	fuzzyhorns (~fuzzyhorn@73.38.57.191) has joined #haskell
2015-10-30 22:07:32	lispy	emmanuel_erc: if you change the type signature of dists to use Double instead of (Fractional b, Storable b) do you get any improvement?
2015-10-30 22:07:43	lispy	emmanuel_erc: I'm guessing no, because GHC likely inlines it already
2015-10-30 22:07:49	<--	PianoQuark (~PianoQuar@ool-2f122061.dyn.optonline.net) has quit (Quit: Gone)
2015-10-30 22:08:39	<--	doomlord (~textual@host81-155-67-16.range81-155.btcentralplus.com) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-10-30 22:08:47	<--	tlaxkit (~yo@95.63.152.106) has quit (Remote host closed the connection)
2015-10-30 22:08:47	<--	bollullera (~anuxi@95.63.152.106) has quit (Remote host closed the connection)
2015-10-30 22:09:07	<--	oikels (~oikels@2601:586:0:10:f814:e6b:2d54:8e48) has left #haskell
2015-10-30 22:09:19	-->	ddellacosta (~ddellacos@ool-4578fb26.dyn.optonline.net) has joined #haskell
2015-10-30 22:09:23	glguy	> let pairs xs = [ (y,z) | y:ys <- tails xs, z <- ys ] in pairs [1..4]
2015-10-30 22:09:25	lambdabot	 [(1,2),(1,3),(1,4),(2,3),(2,4),(3,4)]
2015-10-30 22:09:27	lispy	emmanuel_erc: Personally, I would replace the lambda inside the unfoldr with a locally defined function. Then you can use pattern matching instead of head/tail
2015-10-30 22:09:41	glguy	emmanuel_erc: If you want to speed your code up, you should profile it and see where it's slow
2015-10-30 22:10:08	<--	slacko1256 (~slack@190-21-58-164.baf.movistar.cl) has quit (Remote host closed the connection)
2015-10-30 22:10:14	emmanuel_erc	sorry, you are right I should do that.
2015-10-30 22:10:54	-->	glguy_ (~glguy@haskell/developer/glguy) has joined #haskell
2015-10-30 22:11:15	nitrix	harwiltz: Join me on #haskell-beginners, I'm curious to see where you're at with your learning :)
2015-10-30 22:11:39	glguy_	Beginner questions are fine in #haskell
2015-10-30 22:11:40	<--	fuzzyhorns (~fuzzyhorn@73.38.57.191) has quit (Ping timeout: 252 seconds)
2015-10-30 22:11:56	emmanuel_erc	lispy, are lambdas generally slow when they are used like I have?
2015-10-30 22:11:58	Lantern_O_jack	Yearh harwiltz, also check your PM
2015-10-30 22:11:59	harwiltz	nitrix, this is going to sound very stupid but this is one of my first times on irc. What do you mean by "join me"?
2015-10-30 22:12:06	<--	Coldblackice (~anonz@unaffiliated/coldblackice) has quit (Ping timeout: 250 seconds)
2015-10-30 22:12:11	lispy	emmanuel_erc: I'm suggesting it for readability
2015-10-30 22:12:13	harwiltz	And how do I check my pm? 
2015-10-30 22:12:33	harwiltz	I'm using WeeChat btw
2015-10-30 22:12:37	emmanuel_erc	Ah I see. Yeah, I have a bad habit of using lambdas to get down my thoughts as quickly as possible.
2015-10-30 22:12:53	emmanuel_erc	Or I might lose them...
2015-10-30 22:13:00	 *	hackagebot lol 0.0.1.0 - A general-purpose library for lattice cryptography.  https://hackage.haskell.org/package/lol-0.0.1.0 (crockeea)
2015-10-30 22:13:02	nitrix	harwiltz: You're not joining me specifically; it's a separate channels where we try to help beginners which often spawns long discussions where we break down subjects. /j #haskell-begineers
2015-10-30 22:13:08	lispy	emmanuel_erc: actually, in this case it's the if/then/else with head/tail that I don't like. using lambdas can be fine
2015-10-30 22:13:11	-->	cjlarose (~textual@99-10-121-120.lightspeed.sndgca.sbcglobal.net) has joined #haskell
2015-10-30 22:13:59	-->	Azel (~kvirc@ppp-58-8-73-55.revip2.asianet.co.th) has joined #haskell
2015-10-30 22:14:05	nitrix	hackagebot: /j #haskell-beginners 
2015-10-30 22:14:06	harwiltz	nitrix, oh ok I see. I'm actually just about to go to sleep, it's almost midnight where I am. Are you on often? Because that sounds pretty cool
2015-10-30 22:14:07	Lantern_O_jack	harwiltz: You should be able to use "Alt + Left key" and "Alt + Right key" to change between tabs
2015-10-30 22:14:09	nitrix	Gah.
2015-10-30 22:14:21	nitrix	harwiltz: Oh okay. No problem.
2015-10-30 22:14:40	harwiltz	Lantern_O_jack, I just saw your pm. Thanks so much! Now how do I send a PM?
2015-10-30 22:14:54	<--	favonia (~favonia@pdpc/supporter/student/favonia) has quit (Ping timeout: 240 seconds)
2015-10-30 22:15:27	harwiltz	Lantern_O_jack I think I got it
2015-10-30 22:15:29	shachaf	Note that that channel is unaffiliated with #haskell. There's no problem with beginners in #haskell.
2015-10-30 22:15:50	<--	oish (~charlie@5.79.73.232) has quit (Ping timeout: 240 seconds)
2015-10-30 22:15:51	Lantern_O_jack	You can write
2015-10-30 22:15:51	Lantern_O_jack	    /query Lantern_O_jack hello
2015-10-30 22:15:51	Lantern_O_jack	to send a message to me, my nick is normally Iceland_jack outside of Halloween :)
2015-10-30 22:16:03	harwiltz	Hahaha sounds good!
2015-10-30 22:16:13	harwiltz	I used /msg though
2015-10-30 22:16:19	Romefeller	Lantern_O_jack: are you from Iceland?
2015-10-30 22:16:27	Lantern_O_jack	Yes
2015-10-30 22:16:37	<--	trism (~jconti@unaffiliated/trism) has quit (Remote host closed the connection)
2015-10-30 22:17:03	Lantern_O_jack	I am currently in the US though, when in Rome carve pumpkins and change your nick to something scary
2015-10-30 22:17:09	-->	JulienC (~Julien@107-179-254-232.cpe.teksavvy.com) has joined #haskell
2015-10-30 22:17:17	Romefeller	Lantern_O_jack: You know a lot about winter lol. Im from Brazil
2015-10-30 22:17:23	<--	_cyril_ (~cyril@24.85.99.12) has quit (Ping timeout: 240 seconds)
2015-10-30 22:17:52	<--	__009__kk (~zzzz@S010624a2e1e735cf.cg.shawcable.net) has left #haskell
2015-10-30 22:17:56	lispy	emmanuel_erc: As an example, I find this version slightly easier to read (even with a silly name for the lambda): http://lpaste.net/144303
2015-10-30 22:18:09	-->	TBads (~PamExx@2604:2000:81e8:ed00:f13e:6f4c:49ac:58b0) has joined #haskell
2015-10-30 22:18:30	<--	burdges (~burdges@78.250.24.169) has quit (Ping timeout: 240 seconds)
2015-10-30 22:18:30	harwiltz	Alright, goodnight all, I shall be off to bed. Thanks so much for all the help!
2015-10-30 22:19:11	glguy_	In this case unfoldr isn't necessary
2015-10-30 22:19:15	<--	harwiltz (~harwiltz@modemcable109.165-58-74.mc.videotron.ca) has left #haskell ("WeeChat 1.3")
2015-11-04 18:00:29	-->	harwiltz (~harwiltz@modemcable109.165-58-74.mc.videotron.ca) has joined #haskell
2015-11-04 18:00:29	--	Topic for #haskell is "http://www.haskell.org/ | https://wiki.haskell.org/IRC_channel | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-11-04 18:00:29	--	Topic set by quicksilver (~jules@roobarb.crazydogs.org) on Wed, 07 Oct 2015 15:39:49
2015-11-04 18:00:29	--	Channel #haskell: 1531 nicks (1 op, 0 voices, 1530 normals)
2015-11-04 18:00:29	--	URL for #haskell: http://www.haskell.org/
2015-11-04 18:00:31	--	Channel created on Sun, 26 Nov 2006 06:42:48
2015-11-04 18:00:36	sleblanc	danza, thanks for the link, beautiful music
2015-11-04 18:00:42	-->	baweaver (~baweaver@2601:644:8280:b3c:6055:77b0:bd28:dfc5) has joined #haskell
2015-11-04 18:01:01	<--	amigojapan (~amigojapa@unaffiliated/amigojapan) has quit (Quit: amigojapan)
2015-11-04 18:01:20	Guest21550	Builder is monoid, and PutM is essentially a Writer Builder, right? so PutT would be WriterT Builder
2015-11-04 18:01:33	<--	Zekka (~zekka@uawifi-nat-210-64.arizona.edu) has quit (Ping timeout: 246 seconds)
2015-11-04 18:01:37	varaindemian	also, that Puppy thing sounds great
2015-11-04 18:01:43	<--	arzig (~ryan@pool-173-57-89-227.dllstx.fios.verizon.net) has quit (Client Quit)
2015-11-04 18:01:45	-->	ril (~ril@199-230-11-50.PUBLIC.monkeybrains.net) has joined #haskell
2015-11-04 18:01:46	harwiltz	Hello all. Is there a way to tell with Haskell, or with Linux, if a certain executable has a CLI or GUI?
2015-11-04 18:01:52	<--	ansible1 (~kvirc@c-98-245-112-82.hsd1.co.comcast.net) has quit (Ping timeout: 260 seconds)
2015-11-04 18:01:53	<--	simukis_ (~nagisa@78-60-58-6.static.zebra.lt) has quit (Ping timeout: 264 seconds)
2015-11-04 18:02:15	Cale	run it?
2015-11-04 18:02:17	MarcelineVQ	without passing something to it?
2015-11-04 18:02:23	MarcelineVQ	most stuff on linux you can pass --help to
2015-11-04 18:02:24	sleblanc	harwiltz, in general, you can't
2015-11-04 18:02:32	-->	TheOnionKnight (~yaaic@47.080.dsl.brs.iprimus.net.au) has joined #haskell
2015-11-04 18:02:46	-->	mcveat (~mcveat@p5797A79C.dip0.t-ipconnect.de) has joined #haskell
2015-11-04 18:02:59	sleblanc	harwiltz, you may guess it by checking the list of libraries it links to and spot out obvious stuff like X or GTK, but many apps are able to run in command-line without spawning a GUI (e.g. VLC)
2015-11-04 18:03:17	-->	arzig (~ryan@pool-173-57-89-227.dllstx.fios.verizon.net) has joined #haskell
2015-11-04 18:03:23	harwiltz	Ok... Because I'm making a file manager and I want the opened files to be decoupled from the terminal, but if the file opens in a CLI program like vim for example, I can't run nohup
2015-11-04 18:03:28	<--	plucas (~plucas@8.18.218.175) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-11-04 18:03:32	-->	XorSwap (~XorSwap@wnpgmb016qw-ds01-214-177.dynamic.mtsallstream.net) has joined #haskell
2015-11-04 18:03:35	shiona	was it objdump or what that did list libraries that will dynamically load? Wouldn't that be a good bet
2015-11-04 18:03:39	-->	nyazdani (~nyazdani@D-173-250-162-109.dhcp4.washington.edu) has joined #haskell
2015-11-04 18:03:42	-->	faberbrain (~faberbrai@75-111-99-143.trckcmtc01.res.dyn.suddenlink.net) has joined #haskell
2015-11-04 18:03:53	danza	sleblanc, you are welcome, in the list of my recently liked videos you can find a lot of long albums of relaxing electronic music https://www.youtube.com/channel/UCSi2rTt8Wuaikjfqejpv7NQ ... along with some Haskell videos :D
2015-11-04 18:04:02	<--	umib0zu (~umib0zu@c-50-177-152-117.hsd1.ma.comcast.net) has left #haskell
2015-11-04 18:04:30	<--	arzig (~ryan@pool-173-57-89-227.dllstx.fios.verizon.net) has quit (Client Quit)
2015-11-04 18:04:32	<--	lispyone (~lispyone@c-71-238-197-11.hsd1.ar.comcast.net) has quit (Ping timeout: 260 seconds)
2015-11-04 18:04:44	<--	baweaver (~baweaver@2601:644:8280:b3c:6055:77b0:bd28:dfc5) has quit (Ping timeout: 240 seconds)
2015-11-04 18:04:47	-->	nrk- (~b@ppp121-45-220-107.lns20.cbr1.internode.on.net) has joined #haskell
2015-11-04 18:04:48	sleblanc	harwiltz, IMO this is not a concern you should address. the freedesktop standard allows the user to specify "favoriteTerminal -e /usr/bin/vim filename..." as their favorite editor
2015-11-04 18:05:15	-->	arzig (~ryan@pool-173-57-89-227.dllstx.fios.verizon.net) has joined #haskell
2015-11-04 18:05:31	-->	plucas (~plucas@8.18.218.175) has joined #haskell
2015-11-04 18:05:35	sleblanc	harwiltz, otherwise, anything you might attempt to do could frustrate a user. What if my favorite editor is "to spawn a new tab in my currently running Vim editor on workspace 2 of Xmonad"? Not something you can account for
2015-11-04 18:05:36	harwiltz	sleblanc, yes, but I would need to know in advance if I need to open the program in a terminal or not unfortunately...
2015-11-04 18:05:55	<--	dfeuer (~dfeuer@wikimedia/Dfeuer) has quit (Ping timeout: 244 seconds)
2015-11-04 18:05:56	sleblanc	harwiltz, just use xdg-open, it takes care of that, while considering the users' preferences
2015-11-04 18:06:10	harwiltz	sleblanc, xdg-open? Never heard of that. Sounds promising though
2015-11-04 18:06:25	<--	arzig (~ryan@pool-173-57-89-227.dllstx.fios.verizon.net) has quit (Client Quit)
2015-11-04 18:06:40	sleblanc	harwiltz, it's a freedesktop standard (the folks behind many things, including systemd and X)
2015-11-04 18:07:00	varaindemian	why does this thing ---[x | x <- [1, 2, 3], y <- [1..x]]--- work?
2015-11-04 18:07:11	-->	arzig (~ryan@pool-173-57-89-227.dllstx.fios.verizon.net) has joined #haskell
2015-11-04 18:07:26	sleblanc	varaindemian, because List is a monad!
2015-11-04 18:07:33	harwiltz	sleblanc, so I would do (in haskell) something like createProcess (proc "xdg-open" [fileName])
2015-11-04 18:07:35	sleblanc	(I think that's the reason)
2015-11-04 18:08:00	Cale	sleblanc: It doesn't need to be a monad for list comprehensions to do their thing
2015-11-04 18:08:00	varaindemian	sleblanc: I do not understand why there is a list
2015-11-04 18:08:02	sleblanc	harwiltz, I believe so
2015-11-04 18:08:07	<--	takle (~takle@31.185.130.97) has quit (Remote host closed the connection)
2015-11-04 18:08:11	-->	rgrinberg (~rgrinberg@c-50-140-205-240.hsd1.fl.comcast.net) has joined #haskell
2015-11-04 18:08:11	danza	> [x | x <- [1, 2, 3], y <- [1..x]]
2015-11-04 18:08:13	lambdabot	 [1,2,2,3,3,3]
2015-11-04 18:08:20	varaindemian	I mean the y***
2015-11-04 18:08:21	<--	arzig (~ryan@pool-173-57-89-227.dllstx.fios.verizon.net) has quit (Client Quit)
2015-11-04 18:08:21	Cale	varaindemian: well, that's a list comprehension
2015-11-04 18:08:31	<--	Sixmsj (~Sixmsj@c-50-131-110-35.hsd1.ca.comcast.net) has quit (Quit: Sixmsj)
2015-11-04 18:08:32	-->	m0e (~m0e@80.77.191.91) has joined #haskell
2015-11-04 18:08:34	harwiltz	sleblanc, thanks a lot, I will try that out. Too bad I just wrote an entire list for matching different filetypes to various programs hahaha
2015-11-04 18:08:39	Cale	varaindemian: try replacing the x before the | with (x,y) instead, so you can see the values of y
2015-11-04 18:08:43	-->	takle (~takle@31.185.130.97) has joined #haskell
2015-11-04 18:08:59	danza	> [x,y | x <- [1, 2, 3], y <- [1..x]]
2015-11-04 18:09:01	lambdabot	 <hint>:1:6: parse error on input ‘|’
2015-11-04 18:09:03	-->	arzig (~ryan@pool-173-57-89-227.dllstx.fios.verizon.net) has joined #haskell
2015-11-04 18:09:09	Cale	varaindemian: they're still being selected even if they don't become part of the result, and they influence the number of times each x will occur
2015-11-04 18:09:10	danza	> [(x,y) | x <- [1, 2, 3], y <- [1..x]]
2015-11-04 18:09:12	lambdabot	 [(1,1),(2,1),(2,2),(3,1),(3,2),(3,3)]
2015-11-04 18:09:19	<--	xpika_ (~pi@1.152.96.96) has quit (Ping timeout: 268 seconds)
2015-11-04 18:09:24	sleblanc	harwiltz, don't scrap that list, it could be your base for user preferences in their config file (override system-defined .desktop file associations)
2015-11-04 18:09:30	Walther	in 41
2015-11-04 18:09:48	Walther	/win 41, disregard
2015-11-04 18:10:12	varaindemian	Cale: but how excatly do they influence the result?
2015-11-04 18:10:16	<--	arzig (~ryan@pool-173-57-89-227.dllstx.fios.verizon.net) has quit (Client Quit)
2015-11-04 18:10:31	Cale	> map fst [(x,y) | x <- [1, 2, 3], y <- [1..x]]
2015-11-04 18:10:33	lambdabot	 [1,2,2,3,3,3]
2015-11-04 18:10:37	Cale	> map fst [x | x <- [1, 2, 3], y <- [1..x]]
2015-11-04 18:10:39	lambdabot	     Could not deduce (Enum (b, b0))
2015-11-04 18:10:39	lambdabot	     from the context (Enum (b, b1), Num (b, b1))
2015-11-04 18:10:39	lambdabot	       bound by the inferred type for ‘e_11231’:
2015-11-04 18:10:41	Cale	oops
2015-11-04 18:10:43	Cale	> [x | x <- [1, 2, 3], y <- [1..x]]
2015-11-04 18:10:45	lambdabot	 [1,2,2,3,3,3]
2015-11-04 18:10:58	harwiltz	sleblanc, Yeah I was actually thinking that. Thanks a lot for the help. I just tested a few xdg-opens in my terminal and so far it looks pretty good. Going to try coding it soon
2015-11-04 18:10:59	-->	arzig (~ryan@pool-173-57-89-227.dllstx.fios.verizon.net) has joined #haskell
2015-11-04 18:11:19	Cale	i.e. x is selected from the list [1,2,3], then y is selected from the list [1..x], and then for each pair of x and y, the result x goes into the list
2015-11-04 18:11:29	<--	croyd (~croyd@syrah.ccs.neu.edu) has quit (Remote host closed the connection)
2015-11-04 18:11:32	-->	fujimura (~fujimura@ngn6-ppp1356.tokyo.sannet.ne.jp) has joined #haskell
2015-11-04 18:11:40	<--	Involuntary (~Jeanne-Ka@215.Red-83-60-243.dynamicIP.rima-tde.net) has quit (Read error: Connection reset by peer)
2015-11-04 18:11:42	shiona	harwiltz: it's not perfect, heck it's not even good, but you can start with 'objdump -T binary | grep -E "X11|wx|gtk|qt|GL"'
2015-11-04 18:11:44	danza	interesting, i had expected `y` to be just ignored
2015-11-04 18:11:54	<--	mcveat (~mcveat@p5797A79C.dip0.t-ipconnect.de) has quit (Quit: mcveat)
2015-11-04 18:11:58	Cale	Well, it might matter
2015-11-04 18:12:06	Cale	What if there's no way to select such a y?
2015-11-04 18:12:12	<--	arzig (~ryan@pool-173-57-89-227.dllstx.fios.verizon.net) has quit (Client Quit)
2015-11-04 18:12:20	-->	mcveat (~mcveat@p5797A79C.dip0.t-ipconnect.de) has joined #haskell
2015-11-04 18:12:21	harwiltz	shiona, thats for checking if its CLI?
2015-11-04 18:12:28	Cale	(i.e. the list y is being selected from might be empty if the expression were a little different
2015-11-04 18:12:29	Cale	)
2015-11-04 18:12:41	harwiltz	sleblanc, do you know why xdg-open tries opening source files in firefox? And do you know how I can change that?
2015-11-04 18:12:44	<--	rgrinberg (~rgrinberg@c-50-140-205-240.hsd1.fl.comcast.net) has quit (Ping timeout: 240 seconds)
2015-11-04 18:12:50	<--	mcveat (~mcveat@p5797A79C.dip0.t-ipconnect.de) has quit (Client Quit)
2015-11-04 18:12:57	-->	arzig (~ryan@pool-173-57-89-227.dllstx.fios.verizon.net) has joined #haskell
2015-11-04 18:13:07	Cale	> [x | x <- [1..10], y <- if even x then [] else [()]]
2015-11-04 18:13:09	lambdabot	 [1,3,5,7,9]
2015-11-04 18:13:17	shiona	harwiltz: if that prints something then the program most likely at least has some gui it can run
2015-11-04 18:13:42	varaindemian	Cale: very well explained
2015-11-04 18:13:47	varaindemian	thank you
2015-11-04 18:13:47	Cale	> [x | x <- [1..10], y <- if even x then [] else [1..x]]
2015-11-04 18:13:49	lambdabot	 [1,3,3,3,5,5,5,5,5,7,7,7,7,7,7,7,9,9,9,9,9,9,9,9,9]
2015-11-04 18:13:53	harwiltz	shiona, thats cool. I think for now I'm going to try xdg-open but if that doesn't work I'll try out your method
2015-11-04 18:14:07	<--	arzig (~ryan@pool-173-57-89-227.dllstx.fios.verizon.net) has quit (Client Quit)
2015-11-04 18:14:12	-->	pacak (~pacak@175.156.145.194) has joined #haskell
2015-11-04 18:14:14	Cale	> [y | x <- [1..10], y <- if even x then [] else [1..x]]
2015-11-04 18:14:16	lambdabot	 [1,1,2,3,1,2,3,4,5,1,2,3,4,5,6,7,1,2,3,4,5,6,7,8,9]
2015-11-04 18:14:20	shiona	ok
2015-11-04 18:14:22	<--	Eiam_ (~mine@unaffiliated/eiam) has quit (Quit: ╯°□°）╯︵ǝpouǝǝɹɟ)
2015-11-04 18:14:23	-->	treaki (~treaki@p5B11CF9E.dip0.t-ipconnect.de) has joined #haskell
2015-11-04 18:14:26	<--	mmachenry (~Adium@208.78.140.193) has quit (Quit: Leaving.)
2015-11-04 18:14:35	sleblanc	harwiltz, associations are defined in /usr/share/applications and can be overridden in $HOME/.local/share/applications
2015-11-04 18:14:47	harwiltz	sleblanc, thanks
2015-11-04 18:14:49	-->	arzig (~ryan@pool-173-57-89-227.dllstx.fios.verizon.net) has joined #haskell
2015-11-04 18:15:20	<--	frerich (~frerich@kde/raabe) has quit (Remote host closed the connection)
2015-11-04 18:15:34	orion	Are there any functions which can help reduce code duplication here?: http://lpaste.net/7404084036991188992
2015-11-04 18:15:35	<--	tristanp (~tristanp@c-50-159-71-64.hsd1.wa.comcast.net) has quit (Remote host closed the connection)
2015-11-04 18:16:05	<--	arzig (~ryan@pool-173-57-89-227.dllstx.fios.verizon.net) has quit (Client Quit)
2015-11-04 18:16:17	<--	fujimura (~fujimura@ngn6-ppp1356.tokyo.sannet.ne.jp) has quit (Ping timeout: 264 seconds)
2015-11-04 18:16:20	<--	juanpablo__ (~juanpablo@181.39.194.178) has quit (Quit: (null))
2015-11-04 18:16:32	sleblanc	harwiltz, for instance, firefox says it will handle 'text/html', 'application/xhtml+xml' and a bunch others. If no other app says it can handle text/html, then firefox will open it. Not sure about precedence if two apps claim they can handle the same mimetype
2015-11-04 18:16:33	orion	(Without writing one of course)
2015-11-04 18:16:45	Denommus	how do you guys create lexers in Haskell? Alex itself?
2015-11-04 18:16:48	<--	magneticduck (~magneticd@a95-95-113-8.cpe.netcabo.pt) has quit (Ping timeout: 260 seconds)
2015-11-04 18:16:49	-->	juanpablo__ (~juanpablo@181.39.194.178) has joined #haskell
2015-11-04 18:16:49	-->	arzig (~ryan@pool-173-57-89-227.dllstx.fios.verizon.net) has joined #haskell
2015-11-04 18:16:55	<--	m0e (~m0e@80.77.191.91) has quit (Quit: m0e)
2015-11-04 18:16:58	harwiltz	sleblanc, thanks a lot. I'm trying to fix it now
2015-11-04 18:17:02	Denommus	if so, how do I match a multiline comment?
2015-11-04 18:18:00	<--	arzig (~ryan@pool-173-57-89-227.dllstx.fios.verizon.net) has quit (Client Quit)
2015-11-04 18:18:03	<--	XorSwap (~XorSwap@wnpgmb016qw-ds01-214-177.dynamic.mtsallstream.net) has quit (Quit: Leaving)
2015-11-04 18:18:25	sleblanc	harwiltz, "xdg-mime" can give you info on file associations: "xdg-mime query default 'text/html'" → userapp-Firefox….desktop
2015-11-04 18:18:31	<--	raichoo (~raichoo@176.0.30.176) has quit (Ping timeout: 250 seconds)
2015-11-04 18:18:42	-->	arzig (~ryan@pool-173-57-89-227.dllstx.fios.verizon.net) has joined #haskell
2015-11-04 18:18:43	<--	danthemyth (~danthemyt@c-73-135-109-146.hsd1.wv.comcast.net) has quit (Remote host closed the connection)
2015-11-04 18:18:58	<--	mikayla (~textual@65.209.60.146) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-11-04 18:19:05	-->	dan_f (~dan@24-148-32-207.c3-0.grn-ubr1.chi-grn.il.cable.rcn.com) has joined #haskell
2015-11-04 18:19:56	<--	arzig (~ryan@pool-173-57-89-227.dllstx.fios.verizon.net) has quit (Client Quit)
2015-11-04 18:20:14	varaindemian	Does this equation The equation xs = 1 : [x + 1 | x <- xs] define anything?
2015-11-04 18:20:23	harwiltz	sleblanc, cool, thanks a lot! Gonna go eat dinner now and hopefully get this worked out immediately after that. Thanks for the help. Goodnight everyone
2015-11-04 18:20:23	<--	dsh (~me@2604:2000:e0f1:2500:343f:1e85:b8e7:18a1) has quit (Remote host closed the connection)
2015-11-04 18:20:30	-->	mikayla (~textual@65.209.60.146) has joined #haskell
2015-11-04 18:20:37	-->	arzig (~ryan@pool-173-57-89-227.dllstx.fios.verizon.net) has joined #haskell
2015-11-04 19:34:16	-->	harwiltz (~harwiltz@modemcable109.165-58-74.mc.videotron.ca) has joined #haskell
2015-11-04 19:34:16	--	Topic for #haskell is "http://www.haskell.org/ | https://wiki.haskell.org/IRC_channel | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-11-04 19:34:16	--	Topic set by quicksilver (~jules@roobarb.crazydogs.org) on Wed, 07 Oct 2015 15:39:49
2015-11-04 19:34:16	--	Channel #haskell: 1504 nicks (1 op, 0 voices, 1503 normals)
2015-11-04 19:34:16	--	URL for #haskell: http://www.haskell.org/
2015-11-04 19:34:16	--	Channel created on Sun, 26 Nov 2006 06:42:48
2015-11-04 19:34:48	<--	jsmall (~quassel@va-76-4-74-79.dhcp.embarqhsd.net) has quit (Read error: No route to host)
2015-11-04 19:35:04	harwiltz	sleblanc, Do you know how to set the default application for xdg-open to vim? It has no .desktop file.
2015-11-04 19:35:20	<--	arzig (~ryan@pool-173-57-89-227.dllstx.fios.verizon.net) has quit (Client Quit)
2015-11-04 19:35:26	c_wraith	arkeet: if I'm thinking about it properly, the only thing you can do with that type variable is use it for haddocks? 
2015-11-04 19:35:39	-->	tristanp (~tristanp@2600:100f:b00f:1a54:319b:36eb:8369:d1b9) has joined #haskell
2015-11-04 19:36:00	<--	dinomode_x (~dinomode_@c-71-228-203-101.hsd1.tn.comcast.net) has left #haskell ("Leaving")
2015-11-04 19:36:05	<--	treaki (~treaki@p5B11CF9E.dip0.t-ipconnect.de) has quit (Ping timeout: 250 seconds)
2015-11-04 19:36:05	-->	arzig (~ryan@pool-173-57-89-227.dllstx.fios.verizon.net) has joined #haskell
2015-11-04 19:36:17	-->	Romefeller (b3d77c51@gateway/web/freenode/ip.179.215.124.81) has joined #haskell
2015-11-04 19:36:28	<--	jgt1 (~jgt@176.221.124.229) has quit (Ping timeout: 260 seconds)
2015-11-04 19:36:43	<--	harwiltz (~harwiltz@modemcable109.165-58-74.mc.videotron.ca) has left #haskell
2015-11-06 23:08:34	-->	harwiltz (~harwiltz@modemcable109.165-58-74.mc.videotron.ca) has joined #haskell
2015-11-06 23:08:34	--	Topic for #haskell is "http://www.haskell.org/ | https://wiki.haskell.org/IRC_channel | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-11-06 23:08:34	--	Topic set by quicksilver (~jules@roobarb.crazydogs.org) on Wed, 07 Oct 2015 15:39:49
2015-11-06 23:08:35	--	Channel #haskell: 1466 nicks (1 op, 0 voices, 1465 normals)
2015-11-06 23:08:35	--	URL for #haskell: http://www.haskell.org/
2015-11-06 23:08:36	--	Channel created on Sun, 26 Nov 2006 06:42:48
2015-11-06 23:08:49	-->	baweaver (~baweaver@2601:644:8280:b3c:6055:77b0:bd28:dfc5) has joined #haskell
2015-11-06 23:10:18	harwiltz	Hello all. I am making a file manager, and I want the files that I open with it to be decoupled from the terminal (which runs my file manager) meaning I can close my file manager terminal without closing the file that I opened. The only issue is that this breaks when opening a file that uses the terminal, such as a source file in vim. In that case, I would have to wait for the process to terminate. Is there
2015-11-06 23:10:18	harwiltz	a way to deal with this?
2015-11-06 23:11:13	-->	FreeBirdLjj (~freebirdl@112.3.236.77) has joined #haskell
2015-11-06 23:11:15	<--	L8D (~L8D@cpe-70-123-155-208.austin.res.rr.com) has quit (Ping timeout: 250 seconds)
2015-11-06 23:11:46	<--	abucha (~abucha@58.35.187.187) has quit (Remote host closed the connection)
2015-11-06 23:12:06	ski	harwiltz : maybe use GNU Screen or something .. but i'm not sure how this has to do with Haskell
2015-11-06 23:12:22	harwiltz	´ski, alright, I'll look into it. Thanks.
2015-11-06 23:12:23	-->	vervain (~vervain@c-98-212-148-124.hsd1.il.comcast.net) has joined #haskell
2015-11-06 23:13:04	<--	baweaver (~baweaver@2601:644:8280:b3c:6055:77b0:bd28:dfc5) has quit (Ping timeout: 240 seconds)
2015-11-06 23:13:06	-->	pavonia (~user@dslb-178-012-131-203.178.012.pools.vodafone-ip.de) has joined #haskell
2015-11-06 23:13:11	<--	s00pcan (~chris@108-208-65-111.lightspeed.livnmi.sbcglobal.net) has quit (Ping timeout: 255 seconds)
2015-11-06 23:13:48	<--	eklavya (~eklavya@59.91.130.32) has quit
2015-11-06 23:13:49	harwiltz	ski, I think this just might be the solution! Now to figure out how to use it ;)
2015-11-06 23:14:49	-->	path[l]_ (~vsi@199.201.64.129) has joined #haskell
2015-11-06 23:14:56	-->	s00pcan (~chris@209.197.20.197) has joined #haskell
2015-11-06 23:14:59	<--	path[l] (~vsi@199.201.64.139) has quit (Ping timeout: 255 seconds)
2015-11-06 23:15:00	--	path[l]_ is now known as path[l]
2015-11-06 23:15:29	-->	nkaretnikov (~nikita@unaffiliated/nkar) has joined #haskell
2015-11-06 23:16:38	-->	abucha (~abucha@58.35.187.187) has joined #haskell
2015-11-06 23:17:45	<--	vervain (~vervain@c-98-212-148-124.hsd1.il.comcast.net) has quit (Ping timeout: 240 seconds)
2015-11-06 23:18:35	<--	coltfred (~coltfred@71.15.193.15) has quit (Ping timeout: 255 seconds)
2015-11-06 23:18:42	harwiltz	ski, I don't think it can actually work unfortunately :( Thanks anyway
2015-11-06 23:20:13	-->	baweaver (~baweaver@2601:644:8280:b3c:6055:77b0:bd28:dfc5) has joined #haskell
2015-11-06 23:20:33	-->	glguy_ (~glguy@haskell/developer/glguy) has joined #haskell
2015-11-06 23:20:52	sleblanc	harwiltz, you could make your file manager "re-entrant", i.e. give a special option that makes your file manager run after a certain program is executed, and when you want to open a new file you execve your own file manager + the program that should open the file
2015-11-06 23:21:27	sleblanc	harwiltz, to me it is similar to how XMonad can restart
2015-11-06 23:21:32	-->	fujimura (~fujimura@101.110.31.251) has joined #haskell
2015-11-06 23:21:47	<--	saulzar_ (~oliver@60-234-110-191.static.orcon.net.nz) has quit (Quit: Leaving)
2015-11-06 23:22:01	-->	saulzar_ (~oliver@60-234-110-191.static.orcon.net.nz) has joined #haskell
2015-11-06 23:22:16	harwiltz	sleblanc, sounds cool, but how can that actually be done?
2015-11-06 23:24:03	<--	latro`a (~latro`a@2601:14a:4002:86bb:5d5:d6a3:e0fb:9f5c) has quit (Ping timeout: 246 seconds)
2015-11-06 23:25:06	<--	fengshaun (~fengshaun@unaffiliated/fengshaun) has quit (Ping timeout: 246 seconds)
2015-11-06 23:26:42	-->	fengshaun (~fengshaun@unaffiliated/fengshaun) has joined #haskell
2015-11-06 23:27:04	sleblanc	in POSIX there is "execve", a call that replaces the current process with a new process + arguments
2015-11-06 23:27:28	-->	crobbins (~crobbins@2602:30a:c08e:19e0:48bb:3c9a:691f:d8c7) has joined #haskell
2015-11-06 23:27:41	<--	rossm (~rossm@host-92-30-102-90.as13285.net) has quit (Ping timeout: 264 seconds)
2015-11-06 23:27:44	sleblanc	to run the file manager you fork+execve and wait on the thread in the original process
2015-11-06 23:28:41	<--	jay6981 (~Adium@2601:646:8d01:7f7d:14a8:9333:4d09:f90c) has quit (Quit: Leaving.)
2015-11-06 23:28:48	harwiltz	sleblanc, so I'm using the System.Posix.Process library. I'm going to be calling the executeFile function (which looks like execve), but how does fork come into play?
2015-11-06 23:29:07	-->	fuzzyhorns (~fuzzyhorn@73.38.57.191) has joined #haskell
2015-11-06 23:29:36	<--	hamishmack (~hamishmac@121-73-30-206.cable.telstraclear.net) has quit (Quit: hamishmack)
2015-11-06 23:29:44	-->	Vulfe (~vulfe@104-187-157-61.lightspeed.mdsnwi.sbcglobal.net) has joined #haskell
2015-11-06 23:30:06	-->	hamishmack (~hamishmac@121-73-30-206.cable.telstraclear.net) has joined #haskell
2015-11-06 23:30:57	sleblanc	say, your file manager wants to open a file in VIM, you executeFile it, but you want to return to the file manager when it's done, but still want to be able to handle the file manager; you can run execve in a new thread (i.e. fork before) and simply wait on the thread to resume after the new process ends
2015-11-06 23:32:20	-->	ThatOtherPerson (~ThatOther@unaffiliated/thatotherpersony) has joined #haskell
2015-11-06 23:32:24	<--	yfeldblum (~yfeldblum@2620:10d:c090:200::1:f14d) has quit (Ping timeout: 240 seconds)
2015-11-06 23:32:28	harwiltz	sleblanc, I see. I just got executeFile to open the file in vim, and then of course the file manager closed after I quit vim. So do I use the forkProcess function from System.Posix.Process?
2015-11-06 23:33:09	sleblanc	harwiltz, I'm not exactly sure of the mechanics, but it could work
2015-11-06 23:33:35	<--	nyazdani (~nyazdani@205.175.97.128) has quit (Remote host closed the connection)
2015-11-06 23:34:17	harwiltz	sleblanc, Thanks. The only thing is, the forkProcess function takes an IO action as a parameter. Do you know where I would get that IO action from?
2015-11-06 23:34:25	<--	Vulfe (~vulfe@104-187-157-61.lightspeed.mdsnwi.sbcglobal.net) has quit (Ping timeout: 244 seconds)
2015-11-06 23:34:57	<--	atlan_ (~shurik@46.246.93.220) has quit (Ping timeout: 252 seconds)
2015-11-06 23:34:57	-->	Gurkenglas (Gurkenglas@dslb-178-012-149-211.178.012.pools.vodafone-ip.de) has joined #haskell
2015-11-06 23:35:07	sleblanc	harwiltz, my intuition is that the IO action you give is what the forked process will run
2015-11-06 23:35:43	<--	umib0zu (~umib0zu@146-115-43-219.c3-0.abr-ubr1.sbo-abr.ma.cable.rcn.com) has quit (Quit: umib0zu)
2015-11-06 23:35:57	harwiltz	sleblanc, I see, so it would be the executeFile call?
2015-11-06 23:35:58	sleblanc	you could probably just pass it $ do { executeFile … }
2015-11-06 23:36:10	harwiltz	sleblanc, thank you very much.
2015-11-06 23:36:41	-->	zv (~zv@c-73-222-15-23.hsd1.ca.comcast.net) has joined #haskell
2015-11-06 23:36:43	-->	atlan_ (~shurik@46.246.93.220) has joined #haskell
2015-11-06 23:38:05	sleblanc	you are welcome; if you hit anything, I can help you
2015-11-06 23:39:27	-->	teeteewhy (~teeteewhy@2001:41d0:8:67d2::1337) has joined #haskell
2015-11-06 23:39:27	harwiltz	sleblanc, Thanks a lot. I'm actually gonna get to sleep now, but unfortunately it's not working, vim and my file manager just become 'intertwined' and it gets real messy. I appreciate the help though. By any chance, do you know if there's a way to tell if a program is run in the terminal?
2015-11-06 23:39:46	harwiltz	A way to tell using haskell, I mean
2015-11-06 23:39:51	-->	felixsch (~felixsch@p548A435D.dip0.t-ipconnect.de) has joined #haskell
2015-11-06 23:39:52	<--	felixsch (~felixsch@p548A435D.dip0.t-ipconnect.de) has quit (Changing host)
2015-11-06 23:39:52	-->	felixsch (~felixsch@unaffiliated/felixsch) has joined #haskell
2015-11-06 23:40:36	<--	croyd (~croyd@146-115-81-34.c3-0.sbo-ubr1.sbo.ma.cable.rcn.com) has quit (Remote host closed the connection)
2015-11-06 23:40:39	sleblanc	harwiltz, no, you cannot really tell. There are some obvious clues, like with LDD you can see if an app links to X/gtk/etc. but dynamically-loaded library won't show up and an app could be both too (e.g. VLC)
2015-11-06 23:40:49	sleblanc	harwiltz, what are you trying to achieve?
2015-11-06 23:40:52	<--	benl23 (~benl23@203-206-234-75.perm.iinet.net.au) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-11-06 23:41:12	<--	zv (~zv@c-73-222-15-23.hsd1.ca.comcast.net) has quit (Ping timeout: 246 seconds)
2015-11-06 23:42:16	-->	jsmall (~quassel@va-76-4-74-79.dhcp.embarqhsd.net) has joined #haskell
2015-11-06 23:42:26	-->	zv (~zv@c-73-222-15-23.hsd1.ca.comcast.net) has joined #haskell
2015-11-06 23:42:31	sleblanc	harwiltz, same as in Windows, where there is no way to tell if an app will spawn a window or if it will instead just appear in the system tray
2015-11-06 23:42:33	harwiltz	sleblanc, well if there was a way to tell, I can call the function callProcess on terminal applications. callProcess waits for a process to terminate, do it doesn't interfere with my file manager when vim is running. And if it isn't a terminal application, I can call spawnProcess, which doesn't wait for the application to finish, so that way I can use the file manager (or close it) without affecting the
2015-11-06 23:42:33	harwiltz	external file
2015-11-06 23:42:39	<--	zv (~zv@c-73-222-15-23.hsd1.ca.comcast.net) has quit (Client Quit)
2015-11-06 23:43:03	-->	zv (~zv@c-73-222-15-23.hsd1.ca.comcast.net) has joined #haskell
2015-11-06 23:43:08	<--	s00pcan (~chris@209.197.20.197) has quit (Ping timeout: 260 seconds)
2015-11-06 23:43:08	<--	felixsch__ (~felixsch@p548A433B.dip0.t-ipconnect.de) has quit (Ping timeout: 260 seconds)
2015-11-06 23:43:30	zzing	Does anyone know why lines from Data.Conduit.Text would limit line length to 2048?
2015-11-06 23:43:43	sleblanc	harwiltz, if I used your file manager, I would expect that if a file opens in gedit, its terminal output would go in the same terminal as the file manager, so I'd prefer it to wait until gedit quits
2015-11-06 23:43:45	-->	darkf (~darkf___@unaffiliated/darkf) has joined #haskell
2015-11-06 23:43:45	harwiltz	Because the problem is that the terminal applications run 'on top' of my file manager, so I can't decouple those. But I particularly want to decouple the ones that don't open in terminal
2015-11-06 23:44:07	<--	rrbm238 (~rrbm823@97-106-138-233.res.bhn.net) has quit (Ping timeout: 252 seconds)
2015-11-06 23:44:32	harwiltz	sleblanc, Really? I find it very frustrating when using midnight commander, for example, that I have to keep it open and can't open multiple files in one go
2015-11-06 23:44:34	sleblanc	harwiltz, why would you? IMO this would give inconsistent behavior to your FM
2015-11-06 23:44:47	-->	otto_s_ (~user@xd9ba98c1.dyn.telefonica.de) has joined #haskell
2015-11-06 23:44:48	-->	s00pcan (~chris@108-208-65-111.lightspeed.livnmi.sbcglobal.net) has joined #haskell
2015-11-06 23:44:49	sleblanc	harwiltz, now, that's something else
2015-11-06 23:44:58	harwiltz	sleblanc, what do you mean?
2015-11-06 23:45:03	-->	rrbm823 (~rrbm823@97-106-138-233.res.bhn.net) has joined #haskell
2015-11-06 23:45:14	-->	j2j1 (~Thunderbi@ool-435051f2.dyn.optonline.net) has joined #haskell
2015-11-06 23:45:14	<--	j2j (~Thunderbi@ool-435051f2.dyn.optonline.net) has quit (Read error: Connection reset by peer)
2015-11-06 23:45:14	sleblanc	harwiltz, you could provide two different "open" features: one that opens it in a child fork, the other that disowns the process
2015-11-06 23:45:32	sleblanc	what you are describing is "disowning" a process, that is the parent process is allowed to quit without the child dying
2015-11-06 23:45:42	-->	adek (~adek@199.201.64.3) has joined #haskell
2015-11-06 23:45:47	harwiltz	sleblanc, that's what I was just thinking. But ranger, another file manager, can do it automatically
2015-11-06 23:45:57	<--	Gurkenglas (Gurkenglas@dslb-178-012-149-211.178.012.pools.vodafone-ip.de) has quit (Ping timeout: 252 seconds)
2015-11-06 23:46:03	sleblanc	harwiltz, I suspect it has hard-coded lists of programs
2015-11-06 23:46:59	harwiltz	sleblanc, that's the conclusion I was just coming to. Well, I guess I'll give the user a choice of the two open options. Thank you so much for the help.
2015-11-06 23:47:02	<--	FreeBirdLjj (~freebirdl@112.3.236.77) has quit (Remote host closed the connection)
2015-11-06 23:47:34	-->	FreeBirdLjj (~freebirdl@v133-130-89-34.a01e.g.tyo1.static.cnode.io) has joined #haskell
2015-11-06 23:48:00	-->	mauke_ (~mauke@p3m/member/mauke) has joined #haskell
2015-11-06 23:48:05	<--	otto_s (~user@xd9ba013d.dyn.telefonica.de) has quit (Ping timeout: 250 seconds)
2015-11-06 23:49:27	-->	nyazdani (~nyazdani@205.175.97.128) has joined #haskell
2015-11-06 23:49:56	<--	xnil (~xnil@fsf/member/xnil) has quit (Ping timeout: 250 seconds)
2015-11-06 23:50:14	harwiltz	Goodnight all. Thank you sbleblanc, you've been very helpful.
2015-11-06 23:50:20	<--	tgeeky (~tgeeky@c-73-237-5-66.hsd1.ga.comcast.net) has quit (Quit: Lost terminal)
2015-11-06 23:50:32	sleblanc	harwiltz, welcome, good night
2015-11-06 23:50:56	<--	mauke (~mauke@p3m/member/mauke) has quit (Ping timeout: 240 seconds)
2015-11-06 23:51:08	--	mauke_ is now known as mauke
2015-11-20 22:33:23	-->	harwiltz (~harwiltz@modemcable109.165-58-74.mc.videotron.ca) has joined #haskell
2015-11-20 22:33:23	--	Topic for #haskell is "http://www.haskell.org/ | https://wiki.haskell.org/IRC_channel | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-11-20 22:33:23	--	Topic set by quicksilver (~jules@roobarb.crazydogs.org) on Wed, 07 Oct 2015 15:39:49
2015-11-20 22:33:23	--	Channel #haskell: 1493 nicks (1 op, 0 voices, 1492 normals)
2015-11-20 22:33:23	--	URL for #haskell: http://www.haskell.org/
2015-11-20 22:33:26	--	Channel created on Sun, 26 Nov 2006 06:42:48
2015-11-20 22:33:31	-->	junmin (~junmin@201.158.221.5) has joined #haskell
2015-11-20 22:33:31	<--	blue_deref (~blue_dere@cpe-74-77-246-241.buffalo.res.rr.com) has quit (Quit: bbn)
2015-11-20 22:33:35	<--	Noldorin (~noldorin@unaffiliated/noldorin) has quit (Remote host closed the connection)
2015-11-20 22:33:41	-->	Catalectic (~Circe@66.87.138.27) has joined #haskell
2015-11-20 22:34:03	<--	ThatOtherPerson_ (~ThatOther@unaffiliated/thatotherpersony) has quit (Ping timeout: 240 seconds)
2015-11-20 22:34:17	<--	mizu_no_oto (~textual@c-73-219-2-228.hsd1.ma.comcast.net) has quit (Quit: Computer has gone to sleep.)
2015-11-20 22:34:24	<--	L8D (~L8D@cpe-70-123-155-208.austin.res.rr.com) has quit (Ping timeout: 276 seconds)
2015-11-20 22:34:36	<--	jektrix (~jektrix@202.161.22.190) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-11-20 22:34:55	harwiltz	hello, I am trying to make a function that takes a FilePath and 'formats' it, for example, it would replace every space character by '\ '. But if I add '\\' to the FilePath, it adds both slashes, rather than one.
2015-11-20 22:35:06	<--	goodboytyler (~goodboy@198-84-161-237.cpe.teksavvy.com) has quit (Ping timeout: 265 seconds)
2015-11-20 22:35:27	geekosaur	I'm betting you're using show (directly or indirectly) to test
2015-11-20 22:35:34	geekosaur	use putStrLn
2015-11-20 22:35:42	harwiltz	I'll show you my code
2015-11-20 22:35:52	geekosaur	(or, perhaps your formatting function should just be show :)
2015-11-20 22:36:08	Xandaros	That's how I interpreted it
2015-11-20 22:36:15	harwiltz	geekosaur, I was actually thinking that, but then it wouldn't add the slashes
2015-11-20 22:36:30	-->	ttt_fff (~ttt_fff@airbears2-136-152-142-56.airbears2.berkeley.edu) has joined #haskell
2015-11-20 22:36:59	jasonx2	> "hi \\ "
2015-11-20 22:37:01	lambdabot	 "hi \\ "
2015-11-20 22:37:03	<--	baweaver (~baweaver@2601:644:8280:b3c:786f:67a5:840c:660a) has quit (Ping timeout: 240 seconds)
2015-11-20 22:37:03	jasonx2	> show "hi \\ "
2015-11-20 22:37:05	lambdabot	 "\"hi \\\\ \""
2015-11-20 22:37:13	jasonx2	> show it
2015-11-20 22:37:15	lambdabot	     Not in scope: ‘it’
2015-11-20 22:37:15	lambdabot	     Perhaps you meant one of these:
2015-11-20 22:37:15	lambdabot	       ‘id’ (imported from Data.Function),
2015-11-20 22:37:22	lpaste_	geekosaur pasted “show vs. raw” at http://lpaste.net/145699
2015-11-20 22:37:29	harwiltz	makeProperDirectory :: FilePath -> FilePath
2015-11-20 22:37:29	harwiltz	makeProperDirectory [] = []
2015-11-20 22:37:29	harwiltz	makeProperDirectory (x:xs) =
2015-11-20 22:37:29	harwiltz	    if x == ' ' then ['\\'] ++ [' ']  ++ (makeProperDirectory xs)
2015-11-20 22:37:29	harwiltz	    else if x == '\'' then "\\'" ++ (makeProperDirectory xs)
2015-11-20 22:37:29	harwiltz	    else if x == '[' then "\\[" ++ (makeProperDirectory xs)
2015-11-20 22:37:29	harwiltz	    else if x == ']' then "\\]" ++ (makeProperDirectory xs)
2015-11-20 22:37:29	harwiltz	    else [x] ++ (makeProperDirectory xs)y
2015-11-20 22:37:31	<--	hegemoOn1 (~hegemoOn@209.95.50.103) has quit (Remote host closed the connection)
2015-11-20 22:37:34	-->	feth1 (~feth@104.238.169.78) has joined #haskell
2015-11-20 22:37:39	harwiltz	why doesn't that work?
2015-11-20 22:37:41	geekosaur	don't paste into the channel
2015-11-20 22:37:44	geekosaur	use lpaste.net
2015-11-20 22:37:56	harwiltz	geekosaur, sorry, never heard of that. I'll check it out.
2015-11-20 22:38:18	geekosaur	alos see my paste above to see what happens when you look at the reuslt with show instead of directly
2015-11-20 22:38:26	Xandaros	lpaste, bpaste, hpaste, pastebin, hastebin, ... :P
2015-11-20 22:38:31	<--	junmin (~junmin@201.158.221.5) has quit (Ping timeout: 264 seconds)
2015-11-20 22:38:32	geekosaur	(note that ghci will use show unless you use putStrLn or similar)
2015-11-20 22:38:39	-->	ThatOtherPerson_ (~ThatOther@unaffiliated/thatotherpersony) has joined #haskell
2015-11-20 22:38:41	geekosaur	(making it look like all your backslashes are doubled)
2015-11-20 22:38:53	emmanuel_erc	hello there everyone!
2015-11-20 22:38:59	harwiltz	But I don't call putStrLn on it
2015-11-20 22:39:04	-->	joshua-degagne (17e95762@gateway/web/cgi-irc/kiwiirc.com/ip.23.233.87.98) has joined #haskell
2015-11-20 22:39:06	geekosaur	sigh.
2015-11-20 22:39:20	geekosaur	no, you're calling show (directly or indirectly) and seeing extra backslashes
2015-11-20 22:39:28	geekosaur	putStrLn is not stripping backslashes. show *adds* them
2015-11-20 22:39:43	-->	thunderrd_ (~thunderrd@110.77.173.211) has joined #haskell
2015-11-20 22:39:47	geekosaur	and again, ghci uses show by default
2015-11-20 22:39:49	harwiltz	I get that, but still my function isn't working. I am testing it in my file manager
2015-11-20 22:39:54	-->	gfixler (~gfixler@cpe-108-185-238-241.socal.res.rr.com) has joined #haskell
2015-11-20 22:40:09	harwiltz	And the file names aren't being formatted properly because my file manipulations don't work
2015-11-20 22:40:17	<--	Catalectic (~Circe@66.87.138.27) has quit (Read error: Connection reset by peer)
2015-11-20 22:40:18	harwiltz	And that only occurs in directories that have spaces
2015-11-20 22:40:42	<--	rwiggins (~rwiggins@unaffiliated/rwiggins) has quit (Quit: Quitting)
2015-11-20 22:41:27	<--	doomlord (~textual@host81-155-67-16.range81-155.btcentralplus.com) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-11-20 22:41:41	<--	eazar001 (~ebrahim@99-151-0-118.lightspeed.snrmca.sbcglobal.net) has quit (Quit: WeeChat 1.3)
2015-11-20 22:42:03	<--	joshua-degagne (17e95762@gateway/web/cgi-irc/kiwiirc.com/ip.23.233.87.98) has quit (Client Quit)
2015-11-20 22:42:04	harwiltz	For example, if I try to rename a file in my file manager, it works perfectly unless that file is in a directory that has spaces or commas in its path
2015-11-20 22:42:16	-->	L8D (~L8D@cpe-70-123-155-208.austin.res.rr.com) has joined #haskell
2015-11-20 22:42:23	geekosaur	actually, I disbelieve that is your function
2015-11-20 22:42:28	geekosaur	because it will always error out
2015-11-20 22:42:48	harwiltz	What do you mean?
2015-11-20 22:42:48	geekosaur	oh, nemmind, since I had to grab it from noisy irc I missed a line
2015-11-20 22:43:07	-->	eazar001 (~ebrahim@99-151-0-118.lightspeed.snrmca.sbcglobal.net) has joined #haskell
2015-11-20 22:43:07	geekosaur	this is another reason why you should use a pastebin, nobody can use your code without a lot of work editing it dowen
2015-11-20 22:43:07	<--	thunderrd (~thunderrd@159.192.252.202) has quit (Ping timeout: 244 seconds)
2015-11-20 22:43:23	-->	jektrix (~jektrix@202.161.22.190) has joined #haskell
2015-11-20 22:44:00	harwiltz	geekosaur, from now on that's what I'll do. 
2015-11-20 22:44:09	lpaste_	geekosaur pasted “makeProperDirectory looks fine here” at http://lpaste.net/145700
2015-11-20 22:44:09	<--	imalsogreg_ (~greghale@18.4.14.65) has quit (Ping timeout: 244 seconds)
2015-11-20 22:44:26	geekosaur	also, I think if your file manager can't handle spaces, it needs to be shot
2015-11-20 22:44:46	harwiltz	I am making the file manager. That's why I'm trying to get it to handle the spaces.
2015-11-20 22:45:51	-->	doomlord (~textual@host81-155-67-16.range81-155.btcentralplus.com) has joined #haskell
2015-11-20 22:46:09	<--	Nylidian (~Nylidian@CPE00010332e31e-CM00122502385c.cpe.net.cable.rogers.com) has quit (Read error: Connection reset by peer)
2015-11-20 22:46:41	-->	waern (~david@217.109.94.79.rev.sfr.net) has joined #haskell
2015-11-20 22:46:46	<--	doomlord (~textual@host81-155-67-16.range81-155.btcentralplus.com) has quit (Client Quit)
2015-11-21 11:34:17	-->	harwiltz (~harwiltz@modemcable109.165-58-74.mc.videotron.ca) has joined #haskell
2015-11-21 11:34:17	--	Topic for #haskell is "http://www.haskell.org/ | https://wiki.haskell.org/IRC_channel | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-11-21 11:34:17	--	Topic set by quicksilver (~jules@roobarb.crazydogs.org) on Wed, 07 Oct 2015 15:39:49
2015-11-21 11:34:18	--	Channel #haskell: 1499 nicks (1 op, 0 voices, 1498 normals)
2015-11-21 11:34:18	--	URL for #haskell: http://www.haskell.org/
2015-11-21 11:34:19	--	Channel created on Sun, 26 Nov 2006 06:42:48
2015-11-21 11:34:25	-->	latro`a_ (~latro`a@2601:14a:4002:86bb:31e4:896c:b570:a66d) has joined #haskell
2015-11-21 11:34:30	<--	ricky_clarkson (rjclarkson@nat/google/x-pdjwsregilyhpifj) has quit (Ping timeout: 272 seconds)
2015-11-21 11:34:35	harwiltz	Hello, does anyone have any experience with hscurses?
2015-11-21 11:35:12	<--	jlang0 (uid99021@gateway/web/irccloud.com/x-gtucuyruicfvhivu) has quit (Quit: Connection closed for inactivity)
2015-11-21 11:35:50	-->	doodlehaus (~doodlehau@97-83-255-237.dhcp.stpt.wi.charter.com) has joined #haskell
2015-11-21 11:36:30	rmrfroot	hpc: alright, well i'm looking at the types in orgmode-parse. i see they derive `Show` and `Eq`, so i thought maybe something exists that can print two document trees and show what makes them different. 
2015-11-21 11:36:41	-->	Argue_ (~Argue___@112.209.105.36) has joined #haskell
2015-11-21 11:36:45	<--	anks (~user@linux-majulah1.xn--cdaan2d.be) has left #haskell ("ERC (IRC client for Emacs 24.5.1)")
2015-11-21 11:37:12	hpc	rmrfroot: i mean like
2015-11-21 11:37:16	-->	umib0zu (~umib0zu@146-115-43-219.c3-0.abr-ubr1.sbo-abr.ma.cable.rcn.com) has joined #haskell
2015-11-21 11:37:18	hpc	the difference between an Int and an Int is an Int
2015-11-21 11:37:26	-->	sedeki (~textual@unaffiliated/sedeki) has joined #haskell
2015-11-21 11:37:29	hpc	but what's the difference between True and False?
2015-11-21 11:37:45	hpc	that kind of thing
2015-11-21 11:37:51	hpc	what's the difference between two trees?
2015-11-21 11:38:06	cocreature	there is specific stuff, like https://hackage.haskell.org/package/patches-vector but as hpc explained, you can’t really generalize that
2015-11-21 11:38:12	-->	takle (~takle@190.112.39.217.dyn.plus.net) has joined #haskell
2015-11-21 11:38:13	-->	divyanshu (~divyanshu@106.221.134.20) has joined #haskell
2015-11-21 11:38:55	-->	oisdk_ (~oisdk_@95.45.70.201) has joined #haskell
2015-11-21 11:39:43	<--	Argue (~Argue___@112.209.105.36) has quit (Ping timeout: 264 seconds)
2015-11-21 11:40:13	cocreature	searching for “diff” on hackage gives a long list of packages that might help
2015-11-21 11:40:30	-->	Eiam_ (~mine@unaffiliated/eiam) has joined #haskell
2015-11-21 11:40:48	-->	urodna (~urodna@unaffiliated/urodna) has joined #haskell
2015-11-21 11:41:36	-->	hcore (~hcore@2604:2000:e0f1:2500:35bd:87e8:890f:fad1) has joined #haskell
2015-11-21 11:41:39	-->	nour (~nour@tmo-102-141.customers.d1-online.com) has joined #haskell
2015-11-21 11:42:38	harwiltz	Hello, does anyone here have any experience with hscurses?
2015-11-21 11:42:51	<--	tlevine (~tlevine@tlevine.the-nsa.org) has quit (Ping timeout: 276 seconds)
2015-11-21 11:44:09	-->	DLrbkgse (~jfseI@31.154.146.82) has joined #haskell
2015-11-21 11:44:29	<--	harwiltz (~harwiltz@modemcable109.165-58-74.mc.videotron.ca) has left #haskell ("WeeChat 1.3")
2015-11-22 13:04:15	-->	harwiltz (~harwiltz@modemcable109.165-58-74.mc.videotron.ca) has joined #haskell
2015-11-22 13:04:15	--	Topic for #haskell is "http://www.haskell.org/ | https://wiki.haskell.org/IRC_channel | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-11-22 13:04:15	--	Topic set by quicksilver (~jules@roobarb.crazydogs.org) on Wed, 07 Oct 2015 15:39:49
2015-11-22 13:04:16	--	Channel #haskell: 1521 nicks (1 op, 0 voices, 1520 normals)
2015-11-22 13:04:17	--	URL for #haskell: http://www.haskell.org/
2015-11-22 13:04:18	--	Channel created on Sun, 26 Nov 2006 06:42:48
2015-11-22 13:04:32	-->	teclo- (42@77.109.103.136) has joined #haskell
2015-11-22 13:04:38	harwiltz	Hello, does anyone have any experience with hscurses? 
2015-11-22 13:04:38	<--	caumeslasal (~Thunderbi@mar92-10-82-239-65-141.fbx.proxad.net) has quit (Ping timeout: 250 seconds)
2015-11-22 13:04:42	<--	teclo- (42@77.109.103.136) has quit (Changing host)
2015-11-22 13:04:42	-->	teclo- (42@unaffiliated/teclo) has joined #haskell
2015-11-22 13:04:49	-->	athan (32fa8179@gateway/web/cgi-irc/kiwiirc.com/ip.50.250.129.121) has joined #haskell
2015-11-22 13:05:25	<--	pt1 (~pt1@c-94-255-185-57.cust.bredband2.com) has quit (Remote host closed the connection)
2015-11-22 13:05:30	-->	doodlehaus (~doodlehau@97-83-255-237.dhcp.stpt.wi.charter.com) has joined #haskell
2015-11-22 13:05:31	-->	banacorn (~banacorn@140-113-128-90.Dorm-GD2.NCTU.edu.tw) has joined #haskell
2015-11-22 13:05:33	-->	reuben364 (~reuben364@169-1-127-83.ip.afrihost.co.za) has joined #haskell
2015-11-22 13:05:36	<--	ttuegel (~quassel@2601:240:8000:699f::e90) has quit (Read error: No route to host)
2015-11-22 13:05:58	<--	reuben364 (~reuben364@169-1-127-83.ip.afrihost.co.za) has quit (Remote host closed the connection)
2015-11-22 13:06:35	-->	reuben364 (a9017f53@gateway/web/freenode/ip.169.1.127.83) has joined #haskell
2015-11-22 13:06:40	<--	Jesin (~Jesin@pool-72-83-138-125.washdc.fios.verizon.net) has quit (Quit: Leaving)
2015-11-22 13:08:03	<--	hiroakip (~hiroaki@p200300562C072D313EA9F4FFFE659BC4.dip0.t-ipconnect.de) has quit (Ping timeout: 240 seconds)
2015-11-22 13:08:54	-->	ttuegel (~quassel@2601:240:8000:699f::e90) has joined #haskell
2015-11-22 20:18:38	-->	harwiltz (~harwiltz@modemcable109.165-58-74.mc.videotron.ca) has joined #haskell
2015-11-22 20:18:38	--	Topic for #haskell is "http://www.haskell.org/ | https://wiki.haskell.org/IRC_channel | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-11-22 20:18:38	--	Topic set by quicksilver (~jules@roobarb.crazydogs.org) on Wed, 07 Oct 2015 15:39:49
2015-11-22 20:18:38	--	Channel #haskell: 1498 nicks (1 op, 0 voices, 1497 normals)
2015-11-22 20:18:38	--	URL for #haskell: http://www.haskell.org/
2015-11-22 20:18:40	--	Channel created on Sun, 26 Nov 2006 06:42:48
2015-11-22 20:18:53	<--	baweaver (~baweaver@c-24-4-24-160.hsd1.ca.comcast.net) has quit (Remote host closed the connection)
2015-11-22 20:19:20	harwiltz	Hello, does anyone have any experience with hscurses?
2015-11-22 20:20:05	-->	Noldorin (~noldorin@unaffiliated/noldorin) has joined #haskell
2015-11-22 20:21:02	<--	LeoTal (~LeoTal@95.170.86.79.rev.sfr.net) has quit (Ping timeout: 260 seconds)
2015-11-22 20:21:53	<--	newbie1 (~yqt@81.88.230.28) has quit (Ping timeout: 265 seconds)
2015-11-22 20:21:54	-->	nrk-_ (~b@ppp121-45-193-77.lns20.cbr1.internode.on.net) has joined #haskell
2015-11-22 20:22:09	-->	robogoat (~robogoat@c-24-126-240-124.hsd1.ga.comcast.net) has joined #haskell
2015-11-22 20:22:21	rvxi	not me
2015-11-22 20:23:05	-->	yqt (~yqt@81.88.230.28) has joined #haskell
2015-11-22 20:23:33	-->	albertus1 (~albertus1@f051224155.adsl.alicedsl.de) has joined #haskell
2015-11-22 20:23:33	Gurkenglas	How did joph deduce the term "undecidable" from the terms "overlapping" and "incoherent"? Is there some mathematical theory that's being applied here?
2015-11-22 20:23:34	-->	tristanp (~tristanp@c-98-203-232-39.hsd1.wa.comcast.net) has joined #haskell
2015-11-22 20:23:37	<--	heliospan (~steve@205.250.196.139) has quit (Quit: Leaving)
2015-11-22 20:23:53	<--	athan (a6945ec2@gateway/web/cgi-irc/kiwiirc.com/ip.166.148.94.194) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2015-11-22 20:24:07	<--	nrk- (~b@ppp121-45-198-15.lns20.cbr1.internode.on.net) has quit (Ping timeout: 264 seconds)
2015-11-22 20:24:08	--	nrk-_ is now known as nrk-
2015-11-22 20:24:22	-->	doomlord (~textual@host81-155-67-16.range81-155.btcentralplus.com) has joined #haskell
2015-11-22 20:25:01	<--	fijimunkii (~fijimunki@172.56.36.133) has quit (Ping timeout: 246 seconds)
2015-11-25 16:35:39	-->	harwiltz (~harwiltz@modemcable109.165-58-74.mc.videotron.ca) has joined #haskell
2015-11-25 16:35:39	--	Topic for #haskell is "http://www.haskell.org/ | https://wiki.haskell.org/IRC_channel | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-11-25 16:35:39	--	Topic set by quicksilver (~jules@roobarb.crazydogs.org) on Wed, 07 Oct 2015 15:39:49
2015-11-25 16:35:40	--	Channel #haskell: 1556 nicks (1 op, 0 voices, 1555 normals)
2015-11-25 16:35:40	--	URL for #haskell: http://www.haskell.org/
2015-11-25 16:35:42	--	Channel created on Sun, 26 Nov 2006 06:42:48
2015-11-25 16:36:42	-->	cchalmers (~textual@host86-176-190-162.range86-176.btcentralplus.com) has joined #haskell
2015-11-25 16:37:34	<--	Excureo (~c@68-113-0-218.static.knwc.wa.charter.com) has quit (Ping timeout: 240 seconds)
2015-11-25 16:37:37	<--	kurushii (~kurushii@host86-184-204-40.range86-184.btcentralplus.com) has quit (Remote host closed the connection)
2015-11-25 16:37:49	harwiltz	Hello, does anyone have any experience with hscurses?
2015-11-25 16:38:05	<--	suppi (~suppi@unaffiliated/suppi) has quit (Quit: Leaving)
2015-11-25 16:38:10	clahey	jophish, I see. The translation does have them as explicit dictionaries. I would hope those are compiled out, but I don't know for sure.
2015-11-25 16:38:37	-->	colinwahl (~colinwahl@2601:cb:8180:11f7:b456:5d0f:12db:9b7) has joined #haskell
2015-11-25 16:39:26	coventry`	OK, I'd run out of  space, and clearing space allowed me to run cabal update as a regular user.  So it could be that.
2015-11-25 16:40:21	<--	malkomalko (~malkomalk@ool-457a2213.dyn.optonline.net) has quit (Quit: Lost terminal)
2015-11-25 16:40:24	<--	tel (~tel@204.148.29.50) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-11-25 16:40:27	<--	cchalmers (~textual@host86-176-190-162.range86-176.btcentralplus.com) has quit (Read error: Connection reset by peer)
2015-11-25 16:40:30	-->	caumeslasal (~Thunderbi@mar92-10-82-239-65-141.fbx.proxad.net) has joined #haskell
2015-11-25 16:40:50	<--	bjz (~bjz@45.56.158.22) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-11-25 16:41:03	-->	cchalmers (~textual@host86-176-190-162.range86-176.btcentralplus.com) has joined #haskell
2015-11-25 16:41:05	<--	cchalmers (~textual@host86-176-190-162.range86-176.btcentralplus.com) has quit (Client Quit)
2015-11-25 16:41:09	-->	talkinjitsu (~talkinjit@70.42.240.30) has joined #haskell
2015-11-25 16:41:21	<--	talkinjitsu (~talkinjit@70.42.240.30) has quit (Max SendQ exceeded)
2015-11-25 16:41:24	<--	skiold (~skiold@host-89-243-14-144.as13285.net) has quit (Ping timeout: 240 seconds)
2015-11-25 16:41:31	-->	rrika (~rrika@meta23.net) has joined #haskell
2015-11-25 16:41:31	<--	keiopa (~keiopa@46.50.36.161) has quit (Ping timeout: 276 seconds)
2015-11-25 16:41:47	-->	talkinjitsu (~talkinjit@70.42.240.30) has joined #haskell
2015-11-25 16:41:54	-->	latk (~textual@cpc14-cmbg15-2-0-cust523.5-4.cable.virginm.net) has joined #haskell
2015-11-25 16:41:55	-->	keiopa (~keiopa@46.50.55.225) has joined #haskell
2015-11-25 16:41:59	<--	takle (~takle@226.94.99.195.dyn.plus.net) has quit (Remote host closed the connection)
2015-11-25 16:42:27	-->	takle (~takle@226.94.99.195.dyn.plus.net) has joined #haskell
2015-11-25 16:42:44	rrika	Hello, I'd like to get into proving program equivalence, and similar stuff, but I have no idea what IRC channels to lurk in. Anyone have hints?
2015-11-25 16:43:13	-->	tel (~tel@204.148.29.50) has joined #haskell
2015-11-25 16:43:23	rrika	(LEAN for example doesn't seem to have its own channel)
2015-11-25 16:44:03	-->	derdon_ (~Simon@p5B31C95A.dip0.t-ipconnect.de) has joined #haskell
2015-11-25 16:44:41	-->	_cyril_ (~cyril@S0106bcd165672f56.vc.shawcable.net) has joined #haskell
2015-11-25 16:45:33	-->	oisdk_ (~oisdk_@95.45.70.201) has joined #haskell
2015-11-25 16:46:24	<--	amyers (~icarus127@2601:145:4001:2d07:4488:5e9d:dec1:79a9) has quit (Ping timeout: 240 seconds)
2015-11-25 16:47:24	-->	anders^^ (~anders@c83-248-91-61.bredband.comhem.se) has joined #haskell
2015-11-25 16:47:47	johnw	rrika: you could use Coq to build a model of the programming environment you want to prove equivalence in, but it might get tricky depending on the target language
2015-11-25 16:48:27	defanor	also agda and idris. and they all have channels here
2015-11-25 16:48:40	-->	malkomalko (~malkomalk@ool-457a2213.dyn.optonline.net) has joined #haskell
2015-11-25 16:48:58	<--	Black-Wolf (~Black-Wol@114.139.61.94.rev.vodafone.pt) has quit (Ping timeout: 244 seconds)
2015-11-25 16:49:20	<--	_cyril_ (~cyril@S0106bcd165672f56.vc.shawcable.net) has quit (Ping timeout: 264 seconds)
2015-11-25 16:49:22	<--	takle (~takle@226.94.99.195.dyn.plus.net) has quit (Remote host closed the connection)
2015-11-25 16:51:37	-->	Guest67602 (~lucas@c-73-25-88-12.hsd1.or.comcast.net) has joined #haskell
2015-11-25 16:52:04	rrika	johnw, defanor, I know that these languages are roughly what I need but I barely understand their concepts and much less how I'd apply them to specifically show how a C program does the same as some machine code.
2015-11-25 16:52:23	rrika	(I can convert both to some intermediate representation if needed)
2015-11-25 16:53:04	defanor	rrika: "software foundations" may be a nice starting point, it's a free coq book that outlines similar things
2015-11-25 16:53:11	-->	luismila_ (~luismilan@189.14.244.10) has joined #haskell
2015-11-25 16:53:15	<--	Literphor (~alfred@209.237.92.139) has quit (Quit: Literphor)
2015-11-25 16:53:21	rrika	defanor, will check out
2015-11-25 16:54:47	-->	emilypi (~emilypi@user-0cdfe11.cable.mindspring.com) has joined #haskell
2015-11-25 16:55:09	coventry`	Is it OK to ask questions here about haskell errors while building elm from source?  Compilation is failing on this line, with the complaint that it wants type "FilePath -> IO()" and is getting "FP.FilePath -> IO()".  https://github.com/elm-lang/elm-reactor/blob/master/backend/Socket.hs#L20
2015-11-25 16:55:49	-->	baweaver (~baweaver@2601:644:8280:b3c:3d9b:f6fb:caaf:f7ef) has joined #haskell
2015-11-25 16:55:55	coventry`	This looks like some silly package mismatch.  How can I figure out what's causing it and fix it?
2015-11-25 16:55:57	<--	luismilanoolivei (~luismilan@189.14.244.10) has quit (Ping timeout: 250 seconds)
2015-11-25 16:56:04	-->	gaustin (~gaustin@ip98-167-151-155.ph.ph.cox.net) has joined #haskell
2015-11-25 16:56:27	defanor	rrika: also, things like http://sel4.org/ may be worth checking
2015-11-25 16:56:35	rrika	defanor, this is what inspired me ;)
2015-11-25 16:56:50	<--	gaustin (~gaustin@ip98-167-151-155.ph.ph.cox.net) has quit (Client Quit)
2015-11-25 16:57:03	<--	MrDetonia (~zac@unaffiliated/mrdetonia) has quit (Quit: leaving)
2015-11-25 16:57:07	<--	harwiltz (~harwiltz@modemcable109.165-58-74.mc.videotron.ca) has left #haskell ("WeeChat 1.3")
2015-12-05 22:45:40	-->	harwiltz (~harwiltz@modemcable109.165-58-74.mc.videotron.ca) has joined #haskell
2015-12-05 22:45:40	--	Topic for #haskell is "http://www.haskell.org/ | https://wiki.haskell.org/IRC_channel | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-12-05 22:45:40	--	Topic set by quicksilver on Wed, 07 Oct 2015 15:39:51
2015-12-05 22:45:41	--	Channel #haskell: 1476 nicks (1 op, 0 voices, 1475 normals)
2015-12-05 22:45:41	--	URL for #haskell: http://www.haskell.org/
2015-12-05 22:45:42	--	Channel created on Sun, 26 Nov 2006 06:42:48
2015-12-05 22:46:13	harwiltz	Hello, does anyone know how to handle window resizing with hscurses?
2015-12-05 22:46:30	ski	  "Nevertheless one can pretend that the following three kinds of instances exist. First, as a trivial base-case:"
2015-12-05 22:46:40	ski	  "  instance a a"
2015-12-05 22:46:49	<--	Big_G (~Big_G@24.56.212.199) has quit (Read error: Connection reset by peer)
2015-12-05 22:47:02	ski	  "Furthermore, for every type constructor there is an instance that allows to coerce under the type constructor. For example, let `D' be a prototypical type constructor (data or newtype) with three type arguments, which have roles nominal, representational resp. phantom. Then there is an instance of the form"
2015-12-05 22:47:16	ski	  "  instance Coercible b b' => Coercible (D a b c) (D a b' c')"
2015-12-05 22:47:32	ski	  &c. -- <http://hackage.haskell.org/package/base-4.8.1.0/docs/Data-Coerce.html#t:Coercible>
2015-12-05 22:47:37	-->	Oliphaunte (~oliphaunt@ool-4573dbb0.dyn.optonline.net) has joined #haskell
2015-12-05 22:47:41	-->	Big_G (~Big_G@c-24-56-212-199.customer.broadstripe.net) has joined #haskell
2015-12-05 22:48:16	<--	fujimura (~fujimura@ngn7-ppp696.tokyo.sannet.ne.jp) has quit (Ping timeout: 260 seconds)
2015-12-05 22:48:43	<--	hzjd (~Adium@dhcp-18-189-15-46.dyn.MIT.EDU) has quit (Quit: Leaving.)
2015-12-05 22:48:44	ski	so i guess the question then is whether there's any `Coercible' instances for type families
2015-12-05 22:48:44	<--	zcourts (~zcourts@cpc5-croy18-2-0-cust555.croy.cable.virginm.net) has quit (Ping timeout: 260 seconds)
2015-12-05 22:49:44	dfeuer	Hrrmmm.
2015-12-05 22:50:09	<--	zachk (~foo@pool-108-26-39-98.syrcny.east.verizon.net) has quit (Quit: Night all :D)
2015-12-05 22:50:54	-->	fujimura (~fujimura@ngn6-ppp1648.tokyo.sannet.ne.jp) has joined #haskell
2015-12-05 22:51:46	dfeuer	ski, the "instances" don't exist until demanded; that much seems clear.
2015-12-05 22:52:04	dfeuer	I can demand the reflexive one for any old type variable.
2015-12-05 22:52:25	dfeuer	I guess probably none of this matters too much, outside of weird code.
2015-12-05 22:54:21	-->	jabbaThutt (~jabba@104.200.154.33) has joined #haskell
2015-12-05 22:56:15	<--	harwiltz (~harwiltz@modemcable109.165-58-74.mc.videotron.ca) has left #haskell ("WeeChat 1.3")
2015-12-05 23:00:05	-->	harwiltz (~harwiltz@modemcable109.165-58-74.mc.videotron.ca) has joined #haskell
2015-12-05 23:00:05	--	Topic for #haskell is "http://www.haskell.org/ | https://wiki.haskell.org/IRC_channel | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-12-05 23:00:05	--	Topic set by quicksilver on Wed, 07 Oct 2015 15:39:51
2015-12-05 23:00:05	--	Channel #haskell: 1474 nicks (1 op, 0 voices, 1473 normals)
2015-12-05 23:00:05	--	URL for #haskell: http://www.haskell.org/
2015-12-05 23:00:07	--	Channel created on Sun, 26 Nov 2006 06:42:48
2015-12-05 23:00:14	dfeuer	Which is basically what I did with the other thing.
2015-12-05 23:00:18	ski	anyway i think the `instance Coercible a a' case (note typo) would allow later instantiating `a' with `X', while otoh `Coercible X X' isn't allowed
2015-12-05 23:00:22	<--	imgone (~imgone@cpe-74-137-97-6.kya.res.rr.com) has quit (Remote host closed the connection)
2015-12-05 23:00:38	dfeuer	Hrm.
2015-12-05 23:00:38	ski	anyway, it seems like a strange case, even assuming what i said is true
2015-12-05 23:00:53	dfeuer	No doubt.
2015-12-05 23:00:54	ski	you could perhaps mention it in #ghc or on a mailing list
2015-12-05 23:01:33	dfeuer	I sent a message to haskell-cafe; I just figured I might get something quicker here. Thanks for explaining the parts you could explain.
2015-12-05 23:01:45	-->	tristanp (~tristanp@2601:600:9000:a452:20c1:fc12:39e5:b52f) has joined #haskell
2015-12-05 23:02:20	ski	np
2015-12-05 23:02:43	<--	Swizec (~swizec@c-67-164-98-169.hsd1.ca.comcast.net) has quit (Quit: Computer has gone to sleep.)
2015-12-05 23:03:41	-->	imgone (~imgone@cpe-74-137-97-6.kya.res.rr.com) has joined #haskell
2015-12-05 23:04:31	-->	yfeldblum (~yfeldblum@2620:10d:c090:180::1:2505) has joined #haskell
2015-12-05 23:06:28	<--	oisdk_ (~oisdk_@95.45.70.201) has quit (Ping timeout: 260 seconds)
2015-12-05 23:06:56	<--	tristanp (~tristanp@2601:600:9000:a452:20c1:fc12:39e5:b52f) has quit (Ping timeout: 260 seconds)
2015-12-05 23:07:22	-->	castlelore (~brian@cpe-66-8-186-100.hawaii.res.rr.com) has joined #haskell
2015-12-05 23:07:22	<--	castlelore (~brian@cpe-66-8-186-100.hawaii.res.rr.com) has quit (Changing host)
2015-12-05 23:07:22	-->	castlelore (~brian@unaffiliated/castlelore) has joined #haskell
2015-12-05 23:07:28	-->	MotoNyan (Rob@95-44-32-149-dynamic.agg2.pal.cld-dbn.eircom.net) has joined #haskell
2015-12-05 23:07:59	-->	vili (~nick@2605:a000:ffc0:44:1da3:8295:212f:ece1) has joined #haskell
2015-12-05 23:08:30	-->	danedaworld__ (danedaworl@2607:f470:26:4:3905:5d34:c914:2391) has joined #haskell
2015-12-05 23:08:40	<--	splondike (~splondike@103.13.101.139) has quit (Quit: see you)
2015-12-05 23:08:44	-->	martin-t_ (~martin-t@199.201.64.2) has joined #haskell
2015-12-05 23:08:56	-->	oisdk_ (~oisdk_@95.45.70.201) has joined #haskell
2015-12-05 23:09:50	<--	SrPx (~SrPx@179.210.80.129) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-12-05 23:10:40	<--	Moto-chan (Rob@95-44-32-149-dynamic.agg2.pal.cld-dbn.eircom.net) has quit (Ping timeout: 260 seconds)
2015-12-05 23:12:04	<--	martin-t (~martin-t@c-71-198-25-196.hsd1.ca.comcast.net) has quit (Ping timeout: 260 seconds)
2015-12-05 23:12:32	<--	danedaworld (danedaworl@2607:f470:26:4:9966:aab:33d7:ce42) has quit (Ping timeout: 260 seconds)
2015-12-05 23:13:49	<--	Goplat (~goplat@reactos/developer/Goplat) has quit (Ping timeout: 245 seconds)
2015-12-05 23:14:02	<--	jabbaThutt (~jabba@104.200.154.33) has left #haskell ("Leaving")
2015-12-05 23:14:20	-->	jpsantos (~juanpablo@190.130.208.199) has joined #haskell
2015-12-05 23:14:53	-->	jpsantos_ (~juanpablo@190.130.208.199) has joined #haskell
2015-12-05 23:17:10	-->	tristanp (~tristanp@c-73-181-152-38.hsd1.wa.comcast.net) has joined #haskell
2015-12-05 23:17:22	<--	imgone (~imgone@cpe-74-137-97-6.kya.res.rr.com) has quit (Remote host closed the connection)
2015-12-05 23:19:04	<--	jpsantos (~juanpablo@190.130.208.199) has quit (Ping timeout: 260 seconds)
2015-12-05 23:22:28	-->	Goplat (~goplat@reactos/developer/Goplat) has joined #haskell
2015-12-05 23:22:34	<--	oisdk_ (~oisdk_@95.45.70.201) has quit (Ping timeout: 245 seconds)
2015-12-05 23:24:51	-->	oisdk_ (~oisdk_@95.45.70.201) has joined #haskell
2015-12-05 23:25:22	<--	raymondtay (~raymondta@180.255.248.189) has quit (Quit: raymondtay)
2015-12-05 23:26:29	<--	tristanp (~tristanp@c-73-181-152-38.hsd1.wa.comcast.net) has quit (Remote host closed the connection)
2015-12-05 23:29:48	<--	lolisa (~marisa@D-173-250-135-59.dhcp4.washington.edu) has quit (Ping timeout: 260 seconds)
2015-12-05 23:31:50	-->	xelxebar (~xelxebar@wcache02.waseda.ac.jp) has joined #haskell
2015-12-05 23:32:17	<--	Javran (~javran@c-73-200-214-152.hsd1.md.comcast.net) has quit (Quit: Leaving.)
2015-12-05 23:33:04	<--	conal (~textual@104.255.240.10) has quit (Ping timeout: 260 seconds)
2015-12-05 23:33:34	<--	baweaver (~baweaver@2601:644:8280:b3c:70e9:b53d:c0f6:f00f) has quit (Remote host closed the connection)
2015-12-05 23:34:33	<--	arzig (~ryan@pool-173-57-89-227.dllstx.fios.verizon.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-12-05 23:35:06	-->	__uu__ (~uuplusu@180.172.93.138) has joined #haskell
2015-12-05 23:35:16	-->	traf (~thomor@2601:600:8c00:c0d0:a59f:41a8:6dff:abfa) has joined #haskell
2015-12-05 23:35:26	<--	harwiltz (~harwiltz@modemcable109.165-58-74.mc.videotron.ca) has left #haskell ("WeeChat 1.3")
2015-12-31 20:36:16	-->	harwiltz (~harwiltz@modemcable109.165-58-74.mc.videotron.ca) has joined #haskell
2015-12-31 20:36:16	--	Topic for #haskell is "http://www.haskell.org/ | https://wiki.haskell.org/IRC_channel | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-12-31 20:36:16	--	Topic set by quicksilver on Wed, 07 Oct 2015 15:39:51
2015-12-31 20:36:16	--	Channel #haskell: 1426 nicks (2 ops, 0 voices, 1424 normals)
2015-12-31 20:36:16	--	URL for #haskell: http://www.haskell.org/
2015-12-31 20:36:16	--	Channel created on Sun, 26 Nov 2006 06:42:48
2016-03-01 13:07:18	-->	harwiltz (~harwiltz@modemcable109.165-58-74.mc.videotron.ca) has joined #haskell
2016-03-01 13:07:18	--	Topic for #haskell is "http://www.haskell.org/ | https://wiki.haskell.org/IRC_channel | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2016-03-01 13:07:18	--	Topic set by quicksilver on Wed, 07 Oct 2015 15:39:51
2016-03-01 13:07:18	--	Channel #haskell: 1514 nicks (1 op, 0 voices, 1513 normals)
2016-03-01 13:07:18	--	URL for #haskell: http://www.haskell.org/
2016-03-01 13:07:18	--	Channel created on Sun, 26 Nov 2006 06:42:48
2016-03-01 13:07:19	-->	augur (~augur@50-1-126-214.dsl.static.fusionbroadband.com) has joined #haskell
2016-03-01 13:07:52	<--	fractalsea (~textual@host31-52-138-134.range31-52.btcentralplus.com) has quit (Quit: Textual IRC Client: www.textualapp.com)
2016-03-01 13:08:03	<--	mtncoder (~chris@198.0.178.110) has quit (Ping timeout: 252 seconds)
2016-03-01 13:08:04	-->	theorbtwo (~theorb@cpc81866-swin19-2-0-cust48.3-1.cable.virginm.net) has joined #haskell
2016-03-01 13:08:08	<--	dedgrant (~dedgrant@192-40-237-82.dedicated.allstream.net) has quit (Read error: Connection reset by peer)
2016-03-01 13:09:03	<--	takle (~takle@host81-149-50-20.in-addr.btopenworld.com) has quit (Remote host closed the connection)
2016-03-01 13:09:27	<--	drewbert (~drewbert@bellevue.maana.io) has quit (Remote host closed the connection)
2016-03-01 13:09:38	harwiltz	Hello. I'm making a program that uses hscurses and I want Control-C to clean up hscurses before just shutting off. So I used installHandler to handle the keyboardSignal, which is working. Inside my handler, I'm calling endWin (which closes hscurses and restores the terminal) and then exitWith ExitSuccess. But when I press Control-C, the program outputs ExitSuccess but it doesn't stop running
2016-03-01 13:09:59	<--	daniel-s (~daniel-s@bla31-1-82-241-231-138.fbx.proxad.net) has quit (Ping timeout: 246 seconds)
2016-03-01 13:10:36	-->	crobbins (~crobbins@50.246.41.51) has joined #haskell
2016-03-01 13:10:40	hpc	perhaps you need to end curses inside the right thread?
2016-03-01 13:10:43	-->	felixsch2 (~felixschl@219-88-101-158.adsl.xtra.co.nz) has joined #haskell
2016-03-01 13:11:05	monochrom	what does "outputs ExitSuccess" mean?
2016-03-01 13:11:05	harwiltz	hpc, Maybe, but I'm not managing threads at all
2016-03-01 13:11:16	harwiltz	monochrom, in my terminal, it says ExitSuccess
2016-03-01 13:11:28	monochrom	does it say anything else?
2016-03-01 13:11:33	-->	leadingthenet (~leadingth@62.102.148.185) has joined #haskell
2016-03-01 13:11:44	daedalus__	Alright, I'll look into making the depth of the nesting part of the type, since that sounds like the most ideomatic solution.
2016-03-01 13:11:47	harwiltz	It says ProgramName: ExitSuccess
2016-03-01 13:11:49	daedalus__	But just out of curiosity. There is nothing already out there in haskell that would take sum and [[1,2,3],[4,5]] to [6,9]?
2016-03-01 13:11:58	harwiltz	reset
2016-03-01 13:12:12	harwiltz	^sorry I mean to type that in my terminal
2016-03-01 13:12:46	<--	puregreen (~puregreen@nat4-minsk-pool-46-53-176-141.telecom.by) has quit (Remote host closed the connection)
2016-03-01 13:13:01	-->	puregreen (~puregreen@nat4-minsk-pool-46-53-176-141.telecom.by) has joined #haskell
2016-03-01 13:13:19	harwiltz	Actually, more precisely, the curses display shuts off and the terminal is restored, which says ExitSuccess, and then the program starts back up
2016-03-01 13:13:20	MarcelineVQ	daedalus__: map/fmap does that
2016-03-01 13:13:50	daedalus__	Hm, yes.
2016-03-01 13:14:29	monochrom	where did you obtain "installHandler" from?
2016-03-01 13:14:33	<--	afcondon (~afcondon@146.66.246.148) has quit (Remote host closed the connection)
2016-03-01 13:14:45	daedalus__	But also [[[1,2],[3]],[[4,5]]] to [[3,3],[9]] for example.
2016-03-01 13:14:49	harwiltz	System.Posix.Signals
2016-03-01 13:15:00	-->	afcondon (~afcondon@146.66.246.148) has joined #haskell
2016-03-01 13:15:14	daedalus__	Maybe fmap does that, too, though. I need to think about that.
2016-03-01 13:15:20	MarcelineVQ	just crank up the fmap :>
2016-03-01 13:15:23	MarcelineVQ	> (fmap . fmap) sum [[[1,2],[3]],[[4,5]]]
2016-03-01 13:15:24	lambdabot	 [[3,3],[9]]
2016-03-01 13:15:29	daedalus__	:D
2016-03-01 13:15:30	-->	osa1 (~omer@156-56-64-184.dhcp-bl.indiana.edu) has joined #haskell
2016-03-01 13:15:30	<--	osa1 (~omer@156-56-64-184.dhcp-bl.indiana.edu) has quit (Changing host)
2016-03-01 13:15:30	-->	osa1 (~omer@haskell/developer/osa1) has joined #haskell
2016-03-01 13:15:38	monochrom	did you see its doc contains the phrase "new thread"?
2016-03-01 13:15:55	<--	leadingthenet (~leadingth@62.102.148.185) has quit (Ping timeout: 250 seconds)
2016-03-01 13:16:00	daedalus__	Cool, that puts me on the right, path I think.
2016-03-01 13:16:02	harwiltz	monochrom, nope. I should read that carefully
2016-03-01 13:16:32	-->	Teijawe (~t@bzq-109-66-13-98.red.bezeqint.net) has joined #haskell
2016-03-01 13:16:38	harwiltz	monochrom, ok, so how else should I handle the signal?
2016-03-01 13:17:05	monochrom	main thread does nothing other than waiting for other threads to tell it "please exit"
2016-03-01 13:17:14	-->	dedgrant (~dedgrant@192-40-237-82.dedicated.allstream.net) has joined #haskell
2016-03-01 13:17:18	Teijawe	Question about stack. How do I make it not download the 120mb of ghc every time I start a new project?
2016-03-01 13:17:19	-->	isocliff (~isocliff@c-5eeaaa25-74736162.cust.telenor.se) has joined #haskell
2016-03-01 13:17:25	monochrom	and a signal handler tells the main thread "please exit"
2016-03-01 13:17:27	mnoonan	daedalus__: you might want to check out the "shape" parameter for the arrays used by Accelerate
2016-03-01 13:17:30	<--	t7 (~chatzilla@5-179-100-38.glidedsl.com) has quit (Remote host closed the connection)
2016-03-01 13:17:30	harwiltz	I see. I guess thats why it keeps resuming
2016-03-01 13:17:36	Teijawe	(slowly download from a slow site)
2016-03-01 13:17:47	<--	DmitryBochkarev (~dima@213.87.241.135) has quit (Quit: This computer has gone to sleep)
2016-03-01 13:17:59	<--	ecthiender (~ecthiende@unaffiliated/ecthiender) has quit (Quit: gotta go)
2016-03-01 13:18:05	harwiltz	But how else can I safely close the program then?
2016-03-01 13:18:21	geekosaur	it's worth noting that hscurses does not handle threads sanely (because curses itself doesn't)
2016-03-01 13:18:31	daedalus__	Yes, if the shape/depth was available in the type, it would tell me the number of repetitions of fmap I need to get to the lowest level.
2016-03-01 13:18:40	harwiltz	geekosaur, I know, but I'm not using hscurses to handle the signals
2016-03-01 13:18:40	-->	t7 (~chatzilla@5-179-100-38.glidedsl.com) has joined #haskell
2016-03-01 13:18:43	daedalus__	So that is the way to go, I suppose.
2016-03-01 13:19:05	monochrom	I would not use ncurses to begin with. it's self-inconsistent, second to PHP only. I would completely circumvent it and use vty.
2016-03-01 13:19:18	<--	oish (~charlie@host81-130-206-144.in-addr.btopenworld.com) has quit (Remote host closed the connection)
2016-03-01 13:19:28	harwiltz	monochrom, I guess I'll look into that. But I'm already done writing my program
2016-03-01 13:19:30	-->	ozgura (~ozgura@80-42-7-16.dynamic.dsl.as9105.com) has joined #haskell
2016-03-01 13:19:32	<--	afcondon (~afcondon@146.66.246.148) has quit (Ping timeout: 248 seconds)
2016-03-01 13:19:54	-->	eskimo (~quassel@193-80-27-243.adsl.highway.telekom.at) has joined #haskell
2016-03-01 13:20:20	daedalus__	Many thanks mnoonon and MarcelineVQ, I should be able to take it from here.
2016-03-01 13:20:24	harwiltz	Is there a way to stop the main thread? 
2016-03-01 13:20:35	geekosaur	harwiltz, that;s less relevant than that hscurses can misbehave badly (a) when used with multiple threads (b) less commonly, when it is not being used in the main thread
2016-03-01 13:20:36	<--	strburst_ (~allen@lawn-128-61-16-65.lawn.gatech.edu) has quit (Ping timeout: 248 seconds)
2016-03-01 13:21:34	harwiltz	Ok. I never knew ncurses was to be avoided
2016-03-01 13:21:53	-->	ldbrandy (~Adium@199.201.65.3) has joined #haskell
2016-03-01 13:21:53	harwiltz	But for my program, should I manually create a thread to run my hscurses in and the close it somehow?
2016-03-01 13:21:54	<--	Lowl3v3l (~Lowl3v3l@ipservice-092-208-086-160.092.208.pools.vodafone-ip.de) has quit (Remote host closed the connection)
2016-03-01 13:22:10	<--	isocliff (~isocliff@c-5eeaaa25-74736162.cust.telenor.se) has quit (Remote host closed the connection)
2016-03-01 13:22:11	<--	ldbrandy (~Adium@199.201.65.3) has quit (Read error: Connection reset by peer)
2016-03-01 13:22:41	geekosaur	and I should not have said hscurses there because the problem is with the curses library itself (and not even specific implementations, much less specific bindings)
2016-03-01 13:22:53	-->	afcondon (~afcondon@146.66.246.148) has joined #haskell
2016-03-01 13:23:24	-->	path[l] (~vsi@199.201.64.135) has joined #haskell
2016-03-01 13:23:28	-->	mtncoder (~chris@198.0.178.110) has joined #haskell
2016-03-01 13:23:38	<--	puregreen (~puregreen@nat4-minsk-pool-46-53-176-141.telecom.by) has quit (Ping timeout: 260 seconds)
2016-03-01 13:24:09	harwiltz	I fixed it (I think)! I just used exitImmediately from System.Posix.Process rather than exitWith
2016-03-01 13:24:09	-->	isocliff (~isocliff@c-5eeaaa25-74736162.cust.telenor.se) has joined #haskell
2016-03-01 13:24:18	-->	codafi (~textual@128.237.164.2) has joined #haskell
2016-03-01 13:24:23	-->	xivix (~mike@net-216-37-73-222.in-addr.worldspice.net) has joined #haskell
2016-03-01 13:24:31	<--	daedalus__ (83b59e17@gateway/web/freenode/ip.131.181.158.23) has quit (Quit: Page closed)
2016-03-01 13:24:41	-->	ldbrandy (~Adium@12.16.51.253) has joined #haskell
2016-03-01 13:25:07	quchen	There was a nice trick to add type annotations for Quickcheck. For example, if I want to test that `sort xs == sort xs`, I'll have to specify with Ord instance xs should satisfy.
2016-03-01 13:25:19	quchen	It was some clever 'let' binding I think.
2016-03-01 13:25:30	<--	mdtusz (~mdtusz@modemcable254.211-59-74.mc.videotron.ca) has quit (Remote host closed the connection)
2016-03-01 13:25:36	harwiltz	Thanks for the help/info everyone
2016-03-01 13:25:42	quchen	Does anyone know what I mean?
2016-03-30 20:23:55	-->	harwiltz (~harwiltz@modemcable109.165-58-74.mc.videotron.ca) has joined #haskell
2016-03-30 20:23:55	--	Topic for #haskell is "http://www.haskell.org/ | https://wiki.haskell.org/IRC_channel | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2016-03-30 20:23:55	--	Topic set by quicksilver on Wed, 07 Oct 2015 15:39:51
2016-03-30 20:23:55	--	Channel #haskell: 1512 nicks (1 op, 0 voices, 1511 normals)
2016-03-30 20:23:55	--	URL for #haskell: http://www.haskell.org/
2016-03-30 20:23:56	<--	hubertus_quack (~hubertus_@dslb-088-078-093-249.088.078.pools.vodafone-ip.de) has quit (Quit: hubertus_quack)
2016-03-30 20:23:57	--	Channel created on Sun, 26 Nov 2006 06:42:48
2016-03-30 20:24:06	Zemyla	Can an overlapping instance define a type or data family?
2016-03-30 20:24:49	<--	cmsmcq (~cmsmcq@static-65-19-36-46.cybermesa.com) has quit (Read error: Connection reset by peer)
2016-03-30 20:25:27	-->	hubertus_quack (~hubertus_@dslb-088-078-093-249.088.078.pools.vodafone-ip.de) has joined #haskell
2016-03-30 20:25:32	harwiltz	Hey guys. I'm making a puzzle game in haskell and I'm getting a really weird issue. I have a function that returns IO(Int,Int,Int), and my issue arises when I retrieve the first Int in that tuple. If I print its value immediately after I retrieve it, I get the correct value. However, when I pass it directly to another function (that doesn't change the value) the value somehow is different.
2016-03-30 20:25:37	harwiltz	Any idea how that's possible?
2016-03-30 20:25:46	harwiltz	I have pastebin'd the code if you want
2016-03-30 20:26:02	-->	nineonine (~nineonine@S010650395559bc1f.vc.shawcable.net) has joined #haskell
2016-03-30 20:26:06	-->	kvda (~kvda@unaffiliated/kvda) has joined #haskell
2016-03-30 20:26:09	caconym	harwiltz: getting a look at the code is probably the first step
2016-03-30 20:26:26	harwiltz	caconym: http://ideone.com/Awju8l
2016-03-30 20:27:03	-->	takle (~takle@cpc73668-dals20-2-0-cust505.20-2.cable.virginm.net) has joined #haskell
2016-03-30 20:27:10	-->	AndroidVaan (~AndroidVa@p549A647D.dip0.t-ipconnect.de) has joined #haskell
2016-03-30 20:27:12	harwiltz	You don't have to look at the entire if/else chain. I retrieve the value right around where you see mvWAddStr in the if/else, and then pass it to the same function recursively
2016-03-30 20:27:17	-->	jonaias_ (~jonaias@177.180.100.175) has joined #haskell
2016-03-30 20:27:27	harwiltz	For example, check lines 21-23
2016-03-30 20:28:06	-->	lethjakman (~lethjakma@162.216.46.95) has joined #haskell
2016-03-30 20:28:11	<--	skeet70 (~skeet70@host-174-45-94-21.bzm-mt.client.bresnan.net) has quit (Quit: My computer has gone to sleep. ZZZzzz…)
2016-03-30 20:28:16	-->	Zenghui_ (~Zenghui@45.32.92.225) has joined #haskell
2016-03-30 20:28:35	harwiltz	I'm really confused at how this happens since haskell has no 'side effects', so not sure how my value is changing when I'm not explicitly changing it
2016-03-30 20:28:47	<--	supatha (~sathish_h@75.143.16.8) has quit (Remote host closed the connection)
2016-03-30 20:28:58	<--	nineonine (~nineonine@S010650395559bc1f.vc.shawcable.net) has quit (Client Quit)
2016-03-30 20:29:06	-->	acowley (~user@pool-72-82-164-33.cmdnnj.east.verizon.net) has joined #haskell
2016-03-30 20:29:16	-->	skeet70 (~skeet70@host-174-45-94-21.bzm-mt.client.bresnan.net) has joined #haskell
2016-03-30 20:29:25	-->	cyphase (~cyphase@unaffiliated/cyphase) has joined #haskell
2016-03-30 20:29:34	caconym	well
2016-03-30 20:29:49	caconym	`IO a` might have side effects
2016-03-30 20:30:06	caconym	since it's in IO
2016-03-30 20:30:16	harwiltz	caconym: Ok, fair enough, but in my code there is nothing happening to the said variable in between prints
2016-03-30 20:30:51	-->	DTZUZU (~dexter@S0106bcd1656573c8.vs.shawcable.net) has joined #haskell
2016-03-30 20:30:51	<--	hzjd (~Adium@dhcp-18-189-99-128.dyn.MIT.EDU) has quit (Quit: Leaving.)
2016-03-30 20:31:09	harwiltz	I basically print it, pass it to a function, and print it again. Nothing should be happening to it in between
2016-03-30 20:31:11	<--	LiamGoodacre (~LiamGooda@host-92-29-243-41.as13285.net) has quit (Ping timeout: 276 seconds)
2016-03-30 20:31:21	caconym	i'm not an expert on these aspects of Haskell but it is possible to have a "lazy value" come out of an IO action that has not actually been evaluated yet
2016-03-30 20:31:25	<--	schlueter (~schlueter@pool-96-232-169-141.nycmny.fios.verizon.net) has quit (Ping timeout: 244 seconds)
2016-03-30 20:31:29	<--	igagen (~textual@204.28.126.118) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2016-03-30 20:31:39	harwiltz	caconym: But if it was printed hasn't it already been evaluated?
2016-03-30 20:31:41	<--	Sixmsj (~Sixmsj@c-73-189-102-185.hsd1.ca.comcast.net) has quit (Quit: Sixmsj)
2016-03-30 20:31:44	<--	takle (~takle@cpc73668-dals20-2-0-cust505.20-2.cable.virginm.net) has quit (Ping timeout: 260 seconds)
2016-03-30 20:31:46	caconym	ah, yes
2016-03-30 20:32:13	harwiltz	That's what I don't get. I'm basically printing it twice in a row and getting different results.
2016-03-30 20:32:14	caconym	that is correct as far as i know
2016-03-30 20:32:23	<--	Zenghui_ (~Zenghui@45.32.92.225) has quit (Ping timeout: 240 seconds)
2016-03-30 20:32:40	harwiltz	I should also add that the results are kind of predictable. In most error cases, it just appends the number 5 to the ideal value
2016-03-30 20:32:40	kadoban	harwiltz: What prints are you talking about exactly?
2016-03-30 20:33:00	harwiltz	kadoban: It's a ncurses program, so I'm printing to the ncurses window with mvWAddStr
2016-03-30 20:33:14	--	fengshaun_ is now known as fengshaun
2016-03-30 20:33:29	<--	aupiff (~aupiff@AMontsouris-653-1-248-197.w92-128.abo.wanadoo.fr) has quit (Ping timeout: 260 seconds)
2016-03-30 20:34:02	harwiltz	It doesn't add the number 5, it appends it, like as if both Ints were Strings. For example, if my value should be 8, it prints 85, and if my value should be 0, it prints 05
2016-03-30 20:34:02	<--	xelxebar (~xelxebar@2001:268:c016:7f83:48db:50b2:84fd:2) has quit (Quit: WeeChat 1.4)
2016-03-30 20:34:11	-->	ansible1 (~ansible1@c-98-245-112-82.hsd1.co.comcast.net) has joined #haskell
2016-03-30 20:34:29	harwiltz	It's not necessarily a 5 either. 
2016-03-30 20:34:55	kadoban	I don't think I'm really following you, sorry.
2016-03-30 20:35:09	caconym	same here
2016-03-30 20:35:20	-->	schlueter (~schlueter@pool-96-232-169-141.nycmny.fios.verizon.net) has joined #haskell
2016-03-30 20:35:20	harwiltz	Sorry guys, probably bad explanation, I'll try again
2016-03-30 20:35:25	-->	cmsmcq (~cmsmcq@static-65-19-36-46.cybermesa.com) has joined #haskell
2016-03-30 20:35:38	harwiltz	I get this error after I make a move in the game (I print the value twice after I make the move)
2016-03-30 20:35:46	-->	ghostman (ae8631be@gateway/web/freenode/ip.174.134.49.190) has joined #haskell
2016-03-30 20:35:54	ghostman	hi
2016-03-30 20:35:56	johnw	caconym: unsafeInterleaveIO will somewhat do what you describe
2016-03-30 20:35:56	harwiltz	If I'm moving to position 8, the first time it prints 8 and the second time it prints 85
2016-03-30 20:36:01	<--	derdon (~derdon@p5B31E97B.dip0.t-ipconnect.de) has quit (Ping timeout: 244 seconds)
2016-03-30 20:36:12	johnw	although it's usually a bad idea to use directly
2016-03-30 20:36:14	harwiltz	If I'm moving to position 0, the first time it prints 0 and the second time it prints 05
2016-03-30 20:36:18	<--	desophos (~desophos@173.241.250.232) has quit (Remote host closed the connection)
2016-03-30 20:36:19	-->	seangrove (~user@c-67-169-95-188.hsd1.ca.comcast.net) has joined #haskell
2016-03-30 20:36:28	-->	nineonine (~nineonine@24.244.23.159) has joined #haskell
2016-03-30 20:36:29	<--	osa1 (~omer@haskell/developer/osa1) has quit (Ping timeout: 248 seconds)
2016-03-30 20:36:45	<--	thc202 (~thc202@unaffiliated/thc202) has quit (Ping timeout: 252 seconds)
2016-03-30 20:36:54	-->	osa1 (~omer@haskell/developer/osa1) has joined #haskell
2016-03-30 20:37:01	<--	conal (~conal@104.255.240.10) has quit (Quit: Computer has gone to sleep.)
2016-03-30 20:37:29	-->	hzjd (~Adium@dhcp-18-189-99-128.dyn.MIT.EDU) has joined #haskell
2016-03-30 20:37:40	<--	masteraka (~masteraka@5ec215c0.skybroadband.com) has quit (Ping timeout: 276 seconds)
2016-03-30 20:38:21	harwiltz	The first time I print it is directly after I retrieve the value, the second time is right after I pass it to the function
2016-03-30 20:38:34	harwiltz	There shouldn't be any difference between both prints
2016-03-30 20:38:46	caconym	using curses muddies the water a bit
2016-03-30 20:38:53	caconym	have you tried cutting that out of the loop?
2016-03-30 20:39:32	harwiltz	caconym: I'm not sure how that would change anything. The only curses code I have here are the 'print statements', and I tried removing those but I still get buggy behavior due to the error
2016-03-30 20:40:10	<--	jordanl (~jordan@unaffiliated/jordanl) has quit (Ping timeout: 250 seconds)
2016-03-30 20:40:24	<--	ghostman (ae8631be@gateway/web/freenode/ip.174.134.49.190) has quit (Ping timeout: 250 seconds)
2016-03-30 20:41:11	<--	saulzar_ (~oliver@121-74-226-103.telstraclear.net) has quit (Ping timeout: 244 seconds)
2016-03-30 20:42:05	caconym	it's pretty easy to have curses do unexpected stuff relative to simple print statements, is all i mean; if you still see buggy behavior then that's probably not the issue
2016-03-30 20:42:21	-->	cat-o-the-thrill (~cat-o-the@ool-2f10e3fc.dyn.optonline.net) has joined #haskell
2016-03-30 20:42:53	-->	conal (~conal@104.255.240.10) has joined #haskell
2016-03-30 20:43:01	harwiltz	caconym: Fair enough. But all lines after the first print statement seem completely independent of that variable. That's why I'm so confused
2016-03-30 20:43:10	MarcelineVQ	is it always a 5 it adds? what's the value of scrSize?
2016-03-30 20:43:26	harwiltz	MarcelineVQ: It's not always 5. Sometimes it's 0 I think
2016-03-30 20:43:26	-->	lkj (32894c74@gateway/web/cgi-irc/kiwiirc.com/ip.50.137.76.116) has joined #haskell
2016-03-30 20:43:31	harwiltz	I'll check the scrSize
2016-03-30 20:43:44	lkj	hey all
2016-03-30 20:44:02	<--	conal (~conal@104.255.240.10) has quit (Client Quit)
2016-03-30 20:44:04	lkj	is there a preferred package between units and dimensional?
2016-03-30 20:44:15	lkj	for dimensional analysis?
2016-03-30 20:45:00	harwiltz	MarcelineVQ: scrSize returns (64,116). Actually, the values appended are independent of scrSize because I'm running the window half-size now and I'm getting the same errors as before
2016-03-30 20:45:20	harwiltz	And just confirmed that sometimes it appends 0
2016-03-30 20:45:26	-->	conal (~conal@104.255.240.10) has joined #haskell
2016-03-30 20:45:57	-->	Sgeo_ (~Sgeo@ool-18e43ef5.dyn.optonline.net) has joined #haskell
2016-03-30 20:46:02	-->	jmcarthur (~jmcarthur@pool-173-56-14-167.nycmny.fios.verizon.net) has joined #haskell
2016-03-30 20:46:57	<--	hzjd (~Adium@dhcp-18-189-99-128.dyn.MIT.EDU) has quit (Quit: Leaving.)
2016-03-30 20:47:02	-->	radvendi1 (~qolen@c-50-187-216-57.hsd1.ma.comcast.net) has joined #haskell
2016-03-30 20:47:23	<--	Sgeo (~Sgeo@ool-18e43ef5.dyn.optonline.net) has quit (Ping timeout: 240 seconds)
2016-03-30 20:48:05	<--	pi-victor (~ipalade@dynamic-194-228-20-184.ipv4.broadband.iol.cz) has quit (Ping timeout: 276 seconds)
2016-03-30 20:48:12	-->	sauvik (~sauvik@103.252.27.18) has joined #haskell
2016-03-30 20:49:05	-->	levelonedev (~leveloned@c-50-155-148-46.hsd1.co.comcast.net) has joined #haskell
2016-03-30 20:49:23	caconym	the 'appending' behavior makes me thing you're printing two different numbers on top of each other due to curses being curses
2016-03-30 20:49:38	<--	sauvik (~sauvik@103.252.27.18) has quit (Read error: Connection reset by peer)
2016-03-30 20:49:49	harwiltz	caconym: I was thinking that, but I'm pretty sure I'm still getting bugs even when I don't print
2016-03-30 20:49:50	-->	zeta-null (~zetanull@2601:c1:2:f128:c94c:1cac:37f4:f773) has joined #haskell
2016-03-30 20:49:54	caconym	even if there is a bug, said behavior might be a red herring
2016-03-30 20:49:56	<--	levelonedev (~leveloned@c-50-155-148-46.hsd1.co.comcast.net) has quit (Client Quit)
2016-03-30 20:50:04	harwiltz	caconym: What does that mean?
2016-03-30 20:50:05	-->	Sgeo__ (~Sgeo@ool-18e43ef5.dyn.optonline.net) has joined #haskell
2016-03-30 20:50:17	-->	levelonedev (~leveloned@c-50-155-148-46.hsd1.co.comcast.net) has joined #haskell
2016-03-30 20:50:20	caconym	by which i mean something that's obscuring the problem by presenting its own bizarre behavior
2016-03-30 20:50:28	caconym	i.e. ints are behaving like strings
2016-03-30 20:50:45	caconym	and being appended with a mysterious value from who knows where
2016-03-30 20:50:47	harwiltz	Oh so the problem is something else, but I'm fixating on the wrong thing
2016-03-30 20:50:54	harwiltz	Makes sense
2016-03-30 20:50:56	caconym	yeah, just an idea i suppose
2016-03-30 20:51:05	harwiltz	Makes the most sense so far!
2016-03-30 20:51:23	<--	Sgeo_ (~Sgeo@ool-18e43ef5.dyn.optonline.net) has quit (Ping timeout: 240 seconds)
2016-03-30 20:51:34	caconym	maybe sending these print statements to a file or similar would elucidate matters?
2016-03-30 20:51:59	<--	mgibson (~mgibson@c-73-220-9-195.hsd1.ca.comcast.net) has quit (Ping timeout: 276 seconds)
2016-03-30 20:52:00	harwiltz	I'm going to try printing to stdout and checking once I end the ncurses window
2016-03-30 20:52:09	caconym	that's what i would do
2016-03-30 20:52:35	caconym	if there's a value being printed "under" the one you expect, it may be familiar once you see it in its entirety
2016-03-30 20:52:37	-->	bam365 (~blake@cpe-76-92-157-45.kc.res.rr.com) has joined #haskell
2016-03-30 20:53:05	-->	saulzar_ (~oliver@121-74-239-130.telstraclear.net) has joined #haskell
2016-03-30 20:53:07	-->	darkbolt (~darkbolt@64.187.165.143) has joined #haskell
2016-03-30 20:53:29	harwiltz	good point
2016-03-30 20:53:59	-->	Zekka (~zekka@ip24-251-69-145.ph.ph.cox.net) has joined #haskell
2016-03-30 20:54:02	<--	zeta-null (~zetanull@2601:c1:2:f128:c94c:1cac:37f4:f773) has quit (Ping timeout: 250 seconds)
2016-03-30 20:54:25	harwiltz	nope still getting the same crap. But for some reason it's printing on my ncurses window when I use putStrLn. I'll try writing to a file
2016-03-30 20:54:35	-->	rik316 (~rik@190.213.201.74) has joined #haskell
2016-03-30 20:54:39	<--	rik316 (~rik@190.213.201.74) has quit (Client Quit)
2016-03-30 20:54:48	MarcelineVQ	do you have this as a project you could share?
2016-03-30 20:54:53	caconym	ncurses messes with the "terminal settings" or whatever the technical term is, i think
2016-03-30 20:54:53	<--	cmsmcq (~cmsmcq@static-65-19-36-46.cybermesa.com) has quit (Read error: Connection reset by peer)
2016-03-30 20:54:57	<--	mva1985 (~Chris@cpe-65-186-206-189.insight.res.rr.com) has quit (Ping timeout: 268 seconds)
2016-03-30 20:55:08	<--	ninedotnine (~dan@24-246-9-119.cable.teksavvy.com) has quit (Ping timeout: 244 seconds)
2016-03-30 20:55:51	-->	Sixmsj (~Sixmsj@c-73-223-134-226.hsd1.ca.comcast.net) has joined #haskell
2016-03-30 20:56:05	<--	begriffs (~begriffs@104.156.228.147) has quit
2016-03-30 20:56:36	maerwald	ncurses sucks
2016-03-30 20:56:36	harwiltz	MarcelineVQ: you want to see the whole source?
2016-03-30 20:56:49	caconym	btw i recommend checking out the 'vty' package as a possible alternative to ncurses
2016-03-30 20:56:51	-->	Big_G (Big_G@c-24-56-238-128.customer.broadstripe.net) has joined #haskell
2016-03-30 20:56:59	harwiltz	It's not that long, but I don't see how anything other than what I posted has any affect
2016-03-30 20:57:02	geekosaur	harwiltz, terminals do not have windows
2016-03-30 20:57:20	harwiltz	caconym: I know, I've heard, but I'm just trying to write this quickly for fun and I already know a bit of hscurses
2016-03-30 20:57:24	geekosaur	if you are mixing putStrLn and curses I/O, absolutely they will get tangled together
2016-03-30 20:57:39	harwiltz	geekosaur: evidently so hahaha
2016-03-30 20:57:40	geekosaur	(same with vty or any other terminal-based package)
2016-03-30 20:58:00	-->	i-amd3 (~i_amd3@113x37x153x122.ap113.ftth.ucom.ne.jp) has joined #haskell
2016-03-30 20:58:11	geekosaur	don't mix them at all, do your other output to a file or something
2016-03-30 20:58:17	caconym	agreed
2016-03-30 20:58:19	harwiltz	geekosaur: Im going to try that
2016-03-30 20:58:24	caconym	"it's the only way to be sure"
2016-03-30 20:58:49	MarcelineVQ	"<harwiltz> MarcelineVQ: you want to see the whole source?" yus
2016-03-30 20:59:07	geekosaur	alternately you can do the output to a separate panel, but you will need to learn about now curses panels work to do that
2016-03-30 20:59:11	geekosaur	*about how
2016-03-30 20:59:17	harwiltz	MarcelineVQ: As you wish, though I should warn you my code is terrible.
2016-03-30 20:59:36	-->	tromp_ (~tromp@ool-18be0bd8.dyn.optonline.net) has joined #haskell
2016-03-30 21:00:10	-->	_sjs (~steven.sp@75-25-142-72.lightspeed.okldca.sbcglobal.net) has joined #haskell
2016-03-30 21:00:10	-->	AustinMatherne (~AustinMat@li1047-129.members.linode.com) has joined #haskell
2016-03-30 21:00:25	harwiltz	MarcelineVQ: http://ideone.com/DqTgHN
2016-03-30 21:00:26	<--	schlueter (~schlueter@pool-96-232-169-141.nycmny.fios.verizon.net) has quit (Ping timeout: 276 seconds)
2016-03-30 21:00:45	<--	averagehat (uid148348@gateway/web/irccloud.com/x-qzflrbmbnmmmnpqq) has quit (Quit: Connection closed for inactivity)
2016-03-30 21:00:49	<--	Wizek (~Wizek@catv-89-132-132-110.catv.broadband.hu) has quit (Ping timeout: 244 seconds)
2016-03-30 21:01:30	<--	sykora (~sykora@asgard.cs.jhu.edu) has quit (Ping timeout: 252 seconds)
2016-03-30 21:03:16	-->	sykora (~sykora@asgard.cs.jhu.edu) has joined #haskell
2016-03-30 21:03:49	<--	phileas (~awelter@p5B0D04D2.dip0.t-ipconnect.de) has quit (Ping timeout: 260 seconds)
2016-03-30 21:04:02	<--	tromp_ (~tromp@ool-18be0bd8.dyn.optonline.net) has quit (Ping timeout: 260 seconds)
2016-03-30 21:04:53	<--	nkaretnikov (~nikita@unaffiliated/nkar) has quit (Ping timeout: 240 seconds)
2016-03-30 21:04:56	harwiltz	Ok guys. Apparently it's getting the right values. Now I see where the error comes from I think.
2016-03-30 21:05:11	harwiltz	caconym: I think you were right, it seems to have been printing stuff on top of itself
2016-03-30 21:05:11	caconym	hooray!
2016-03-30 21:05:12	-->	rydgel (~tripnity@37.58.148.147) has joined #haskell
2016-03-30 21:05:12	<--	michaelneale (~textual@110-174-4-83.static.tpgi.com.au) has quit (Ping timeout: 260 seconds)
2016-03-30 21:05:25	harwiltz	hooray for peace of mind indeed hahaha
2016-03-30 21:05:29	harwiltz	I thought I was going nuts
2016-03-30 21:05:43	-->	cmsmcq (~cmsmcq@static-65-19-36-46.cybermesa.com) has joined #haskell
2016-03-30 21:05:49	harwiltz	now to find the real source of the problem...
2016-03-30 21:05:50	erikd	zRecursive: it looks like your ghc installation is broken. how did you install it and when?
2016-03-30 21:06:05	-->	micxjo (uid149042@gateway/web/irccloud.com/x-xsoljfnyppxbmoja) has joined #haskell
2016-03-30 21:06:22	<--	jokleinn (~jokleinn@unaffiliated/jokleinn) has quit (Quit: WeeChat 1.4)
2016-03-30 21:06:24	-->	phileas (~awelter@p5B0D1D5B.dip0.t-ipconnect.de) has joined #haskell
2016-03-30 21:06:26	<--	AndroidVaan (~AndroidVa@p549A647D.dip0.t-ipconnect.de) has quit (Remote host closed the connection)
2016-03-30 21:06:30	MarcelineVQ	Glad you narrowed it down, I can't even get it to run hehe, curses be crazy
2016-03-30 21:06:46	caconym	harwiltz: good luck!
2016-03-30 21:06:49	-->	michaelneale (~textual@1.144.96.19) has joined #haskell
2016-03-30 21:06:50	Gurkenglas	Can stack install missing C libraries for me on windows?
2016-03-30 21:06:59	-->	desophos (~desophos@71-83-197-83.dhcp.hspr.ca.charter.com) has joined #haskell
2016-03-30 21:07:17	<--	twanvl (~twanvl@dhcp-077-250-086-217.chello.nl) has quit (Read error: Connection reset by peer)
2016-03-30 21:07:32	<--	sigmundv_ (~sigmundv@92.251.172.105.threembb.ie) has quit (Ping timeout: 244 seconds)
2016-03-30 21:07:58	harwiltz	caconym: thanks
2016-03-30 21:08:03	harwiltz	Thanks for the help everyone
2016-03-30 21:08:06	<--	acowley (~user@pool-72-82-164-33.cmdnnj.east.verizon.net) has quit (Ping timeout: 252 seconds)
2016-03-30 21:08:06	geekosaur	not last I checked. it does install a mingw to provide some necessary libraries but it doesn't go beyond that
2016-03-30 21:08:11	geekosaur	(or it did install)
2016-03-30 21:08:36	-->	ninedotnine (~dan@24-246-9-119.cable.teksavvy.com) has joined #haskell
2016-03-30 21:09:28	MarcelineVQ	harwiltz: you don't need a single do in applyMove btw
2016-03-30 21:09:56	<--	Swizec (~swizec@199.21.86.210) has quit (Quit: Computer has gone to sleep.)
2016-03-30 21:10:13	MarcelineVQ	well maybe the top one, I haven't cleaned up up to see, but for the most part just about every do in this source code is redundant
2016-03-30 21:10:22	<--	rydgel (~tripnity@37.58.148.147) has quit (Ping timeout: 268 seconds)
2016-03-30 21:11:01	-->	average (~average@unaffiliated/average) has joined #haskell
2016-03-30 21:11:03	average	will we all write Haskell by 2020 ?
2016-03-30 21:11:22	<--	Guest28814 (~ross@88-108-87-76.dynamic.dsl.as9105.com) has quit (Ping timeout: 250 seconds)
2016-03-30 21:11:34	MarcelineVQ	average: yes but we'll call it Faskelltro, that's a portmanteux of future haskell restro
2016-03-30 21:11:41	MarcelineVQ	retro :>
2016-03-30 21:11:42	<--	wrmsr| (~spinlock@50.58.157.74) has quit (Ping timeout: 244 seconds)
2016-03-30 21:11:55	<--	hubertus_quack (~hubertus_@dslb-088-078-093-249.088.078.pools.vodafone-ip.de) has quit (Quit: hubertus_quack)
2016-03-30 21:12:00	caconym	by 2020 i will have been replaced in my job by a robot
2016-03-30 21:12:03	harwiltz	MarcelineVQ: Ok, thanks. I think I just put them there just in case
2016-03-30 21:12:05	-->	hjulle (~hjulle@ankadagen.vth.sgsnet.se) has joined #haskell
2016-03-30 21:12:06	caconym	maybe the robot will use haskell
2016-03-30 21:12:07	 *	hackagebot printf-safe 0.1.0.0 - Type safe interface for Text.Printf  https://hackage.haskell.org/package/printf-safe-0.1.0.0 (kcsongor)
2016-03-30 21:12:54	average	Simon Peyton Jones defens Haskell like a true badass
2016-03-30 21:12:58	average	*defends 
2016-03-30 21:12:59	average	https://www.youtube.com/watch?v=iSmkqocn0oQ
2016-03-30 21:13:05	-->	pi-victor (~ipalade@193.86.138.191) has joined #haskell
2016-03-30 21:13:11	<--	Nikotiini (~user@cable-roi-58c037-251.dhcp.inet.fi) has quit (Ping timeout: 264 seconds)
2016-03-30 21:13:53	<--	Heasummn (~Heasummn@c-73-51-87-243.hsd1.il.comcast.net) has quit (Ping timeout: 240 seconds)
2016-03-30 21:13:55	xa0	hvr: what is the status on this proposal https://ghc.haskell.org/trac/ghc/ticket/10448 ?
2016-03-30 21:14:04	average	Simon is soooooo gooood at selling things
2016-03-30 21:14:12	average	oh man, he's like.. amazing at selling stuff
2016-03-30 21:14:18	caconym	and if you bad-mouth haskell he's always listening: http://research.microsoft.com/en-us/um/people/simonpj/Pictures/spjJun06.8rot.jpg
2016-03-30 21:14:28	xa0	RyanGlScott: cc
2016-03-30 21:14:35	MarcelineVQ	caconym: amazing pic
2016-03-30 21:14:45	<--	aznashwan (~nashwan@89.46.161.178) has quit (Remote host closed the connection)
2016-03-30 21:15:00	caconym	yeah it's a real gem haha
2016-03-30 21:15:31	RyanGlScott	xa0: Probably won't happen until after GHC 8.0 is released.
2016-03-30 21:15:33	<--	cmsmcq (~cmsmcq@static-65-19-36-46.cybermesa.com) has quit (Read error: Connection reset by peer)
2016-03-30 21:15:37	-->	tinkyholloway (~tinkyholl@036.117.103.218.static.netvigator.com) has joined #haskell
2016-03-30 21:15:40	-->	danthemyth (~danthemyt@c-73-135-109-146.hsd1.wv.comcast.net) has joined #haskell
2016-03-30 21:15:56	xa0	RyanGlScott: I see, okay thanks
2016-03-30 21:16:18	-->	rodlogic (~rodlogic@179.159.96.218) has joined #haskell
2016-03-30 21:16:40	-->	Kristler (~KW@S0106bcd16583bf99.ok.shawcable.net) has joined #haskell
2016-03-30 21:16:52	<--	seangrove (~user@c-67-169-95-188.hsd1.ca.comcast.net) has quit (Ping timeout: 260 seconds)
2016-03-30 21:16:57	<--	cyphase (~cyphase@unaffiliated/cyphase) has quit (Read error: Connection reset by peer)
2016-03-30 21:17:05	maerwald	average: I think he is quite open-minded and maybe less convinced of haskell than a lot of other people... although that doesn't show in his extrodinary commitment. It's research after all.
2016-03-30 21:17:27	<--	bam365 (~blake@cpe-76-92-157-45.kc.res.rr.com) has quit (Ping timeout: 252 seconds)
2016-03-30 21:17:43	maerwald	(and yes, I understand the pun in the video)
2016-03-30 21:18:22	MarcelineVQ	harwiltz: do is typically just to make using >>= and >> cleaner. this page may help a bit to clarify what that means in practice https://en.wikibooks.org/wiki/Haskell/do_notation
2016-03-30 21:18:50	-->	Guest53358 (~cyphase@c-50-148-131-137.hsd1.ca.comcast.net) has joined #haskell
2016-03-30 21:18:52	harwiltz	MarcelineVQ: Thanks. I'll be checking into that. Never really understood monads
2016-03-30 21:19:08	-->	supatha (~sathish_h@75.143.16.8) has joined #haskell
2016-03-30 21:20:12	<--	zv (~zv@unaffiliated/zv) has quit (Ping timeout: 252 seconds)
2016-03-30 21:20:13	<--	danthemyth (~danthemyt@c-73-135-109-146.hsd1.wv.comcast.net) has quit (Ping timeout: 248 seconds)
2016-03-30 21:20:18	-->	seumas (~guest@189-74-242-107.paebv701.dsl.brasiltelecom.net.br) has joined #haskell
2016-03-30 21:20:38	average	there's this entire obsession that Haskell has with types
2016-03-30 21:20:44	<--	cpup (~cpup@32.218.119.85) has quit (Ping timeout: 246 seconds)
2016-03-30 21:20:53	average	it's as if.. all bugs were caused by types
2016-03-30 21:20:58	-->	nkaretnikov (~nikita@unaffiliated/nkar) has joined #haskell
2016-03-30 21:21:09	average	and somehow Simon Peyton Jones, and that bearded Philip Wadler guy
2016-03-30 21:21:17	average	they figured out this huge secret that nobody had ever thought about
2016-03-30 21:21:39	average	(or whoever designed Haskell)
2016-03-30 21:21:49	<--	rodlogic (~rodlogic@179.159.96.218) has quit (Ping timeout: 248 seconds)
2016-03-30 21:22:46	average	amazing
2016-03-30 21:23:23	<--	robogoat (~robogoat@ec2-54-164-147-50.compute-1.amazonaws.com) has quit (Ping timeout: 240 seconds)
2016-03-30 21:23:31	-->	cpup (~cpup@32.218.114.163) has joined #haskell
2016-03-30 21:24:18	-->	dan_f (~dan@24-148-32-207.c3-0.grn-ubr1.chi-grn.il.cable.rcn.com) has joined #haskell
2016-03-30 21:24:47	maerwald	well, it's a class of bugs, not all
2016-03-30 21:25:27	MarcelineVQ	It's a pretty old idea, it probably began in the 30's or even earlier really, ratified by curry and howard with their https://en.wikipedia.org/wiki/Curry%E2%80%93Howard_correspondence
2016-03-30 21:25:31	average	maerwald: yeah but i mean when Haskell is promoted
2016-03-30 21:25:33	maerwald	and it also depends on how people use them... there are strill stronger and weaker types
2016-03-30 21:25:41	average	every promoter hits hard on the type-bugs thing
2016-03-30 21:25:58	average	he's like "oh yeah, and all other languages suck because types and side-effects, Haskell wins yay !!"
2016-03-30 21:25:59	maerwald	You can still express data structures with strings and pass them around your program in haskell...
2016-03-30 21:26:10	-->	cmsmcq (~cmsmcq@static-65-19-36-46.cybermesa.com) has joined #haskell
2016-03-30 21:26:12	maerwald	which isn't a good idea, but still happens
2016-03-30 21:26:37	<--	jonaias_ (~jonaias@177.180.100.175) has quit (Ping timeout: 248 seconds)
2016-03-30 21:26:51	maerwald	or abuse Int/Bool/tuples etc
2016-03-30 21:27:01	average	I mean check out Simon, he's like a role-model for any aspiring technology/software seller https://www.youtube.com/watch?v=xmjvOLlCdFU
2016-03-30 21:27:05	average	he sells haaaaard
2016-03-30 21:27:11	<--	kazagistar (~Adium@205.207.149.2) has quit (Quit: Leaving.)
2016-03-30 21:27:43	<--	a6a3uh (~tlisov_a@ns2.ineum.ru) has quit (Ping timeout: 244 seconds)
2016-03-30 21:27:47	<--	Lowl3v3l (~Lowl3v3l@ipservice-092-208-086-160.092.208.pools.vodafone-ip.de) has quit (Remote host closed the connection)
2016-03-30 21:27:53	zRecursive	erikd: just come back! I installed them from ghc-7.10.3-i386-unknown-mingw32.tar.xz and cabal-1.22.0.0-i386-unknown-mingw32.exe.
2016-03-30 21:27:55	<--	michaelneale (~textual@1.144.96.19) has quit (Quit: Back later)
2016-03-30 21:28:01	-->	takle (~takle@cpc73668-dals20-2-0-cust505.20-2.cable.virginm.net) has joined #haskell
2016-04-09 23:28:04	-->	harwiltz (~harwiltz@modemcable109.165-58-74.mc.videotron.ca) has joined #haskell
2016-04-09 23:28:04	--	Topic for #haskell is "http://www.haskell.org/ | https://wiki.haskell.org/IRC_channel | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2016-04-09 23:28:04	--	Topic set by quicksilver on Wed, 07 Oct 2015 15:39:51
2016-04-09 23:28:04	--	Channel #haskell: 1469 nicks (1 op, 0 voices, 1468 normals)
2016-04-09 23:28:04	--	URL for #haskell: http://www.haskell.org/
2016-04-09 23:28:06	--	Channel created on Sun, 26 Nov 2006 06:42:48
2016-04-09 23:28:09	ertesx	> (\xs -> foldr (\x _ -> foldr (\y -> (x == y &&)) True xs) True xs) [1,1,1,1]
2016-04-09 23:28:11	lambdabot	 True
2016-04-09 23:28:14	ertesx	> (\xs -> foldr (\x _ -> foldr (\y -> (x == y &&)) True xs) True xs) [1,1,2,1,1]
2016-04-09 23:28:16	lambdabot	 False
2016-04-09 23:28:28	<--	tristanp (~tristanp@c-98-203-232-39.hsd1.wa.comcast.net) has quit (Remote host closed the connection)
2016-04-09 23:28:38	-->	splanch (~kattak@2602:306:c41c:4110:1102:9514:4170:66da) has joined #haskell
2016-04-09 23:28:57	<--	SCHAAP137 (~dorian@unaffiliated/schaap137) has quit (Quit: Leaving)
2016-04-09 23:29:20	harwiltz	Hi guys. I'm writing a program in haskell that has a recursive 'loop', which waits for user input to go onto the next loop. However, I have a signal handler that is called when the terminal is resized, and that screws up the display of my program. 
2016-04-09 23:29:23	-->	nomotif (~nomotif@c-98-207-81-55.hsd1.ca.comcast.net) has joined #haskell
2016-04-09 23:29:34	harwiltz	I'm using hscurses, so I want to pass the newly edited windows to my loop
2016-04-09 23:29:39	harwiltz	Is this possible?
2016-04-09 23:29:43	-->	baweaver (~baweaver@ruby/staff/baweaver) has joined #haskell
2016-04-09 23:30:26	ertesx	harwiltz: if you can handle the window change within the loop, it's simple…  i don't know if ncurses has event waiting
2016-04-09 23:30:35	-->	bjz_ (~bjz@45.56.158.79) has joined #haskell
2016-04-09 23:30:46	ertesx	otherwise you need to use concurrency, e.g. an MVar or STM
2016-04-09 23:30:47	harwiltz	ertesx: I'm handling the window change using a handler that I install with installHandler
2016-04-09 23:30:47	<--	oisdk_ (~oisdk_@86-45-7-3-dynamic.agg2.dyx.chf-qkr.eircom.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2016-04-09 23:31:02	harwiltz	ertesx: Mind explaining what that is? Never heard of that
2016-04-09 23:31:13	<--	jgt4 (~jgt@109.74.56.122) has quit (Ping timeout: 264 seconds)
2016-04-09 23:31:34	ertesx	harwiltz: think of the signal handler as a separate thread…  the MVar is a simple abstraction that allows threads to communicate
2016-04-09 23:31:41	ertesx	see Control.Concurrent.MVar
2016-04-09 23:31:57	harwiltz	That sounds like it might be helpful. Thanks
2016-04-09 23:32:01	<--	rydgel (~tripnity@37.58.148.147) has quit (Ping timeout: 268 seconds)
2016-04-09 23:32:15	<--	leat2 (~leat@198.199.127.213) has quit (Remote host closed the connection)
2016-04-09 23:32:18	ertesx	harwiltz: you may want to check out vty, too
2016-04-09 23:32:31	-->	leat2 (~leat@198.199.127.213) has joined #haskell
2016-04-09 23:32:34	harwiltz	ertesx: I think pretty much everyone in this channel that I've spoken to says that :)
2016-04-09 23:32:36	-->	ThatOtherPerson (~ThatOther@unaffiliated/thatotherpersony) has joined #haskell
2016-04-09 23:32:36	<--	JoshS (~jshjsh@172.58.24.153) has quit (Disconnected by services)
2016-04-09 23:32:48	harwiltz	I've been working on this for a while though, don't want to restart now
2016-04-09 23:32:54	-->	Rodya_ (~Rodya_@pool-108-52-28-121.phlapa.fios.verizon.net) has joined #haskell
2016-04-09 23:32:59	<--	bjz (~bjz@104.222.140.80) has quit (Ping timeout: 260 seconds)
2016-04-09 23:33:16	geekosaur	note that curses installs its own handler for SIGWINCH so make sure that yours is invoking its (this likely means installing it after initscr() and saving the existing handler tpo be called from yours)
2016-04-09 23:33:40	harwiltz	geekosaur: Yup, mine is definitely invoking the right function
2016-04-09 23:34:04	<--	baweaver (~baweaver@ruby/staff/baweaver) has quit (Ping timeout: 250 seconds)
2016-04-09 23:34:21	harwiltz	I tried starting another loop from my handler, and it works for one frame then gets very glitchy for some reason
2016-04-09 23:34:31	<--	bhiliyam_ (~diffvoodo@CPE00fc8d410cc3-CM00fc8d410cc0.cpe.net.cable.rogers.com) has quit (Ping timeout: 260 seconds)
2016-04-09 23:34:36	harwiltz	Probably because both loops are handling each input
2016-04-09 23:35:02	-->	igagen (~textual@c-73-223-48-80.hsd1.ca.comcast.net) has joined #haskell
2016-04-09 23:36:06	-->	takle (~takle@cpc73668-dals20-2-0-cust505.20-2.cable.virginm.net) has joined #haskell
2016-04-09 23:36:50	ertesx	is there a way to compile the executables of a cabal project with different compilers?  specifically: one with GHC, one with GHCJS
2016-04-09 23:38:06	-->	Sixmsj (~Sixmsj@c-73-223-134-226.hsd1.ca.comcast.net) has joined #haskell
2016-04-09 23:38:25	ertesx	harwiltz: you might find STM useful in this case, because you are going to use a separate thread for gathering input anyway
2016-04-09 23:38:29	<--	Rodya_ (~Rodya_@pool-108-52-28-121.phlapa.fios.verizon.net) has quit (Remote host closed the connection)
2016-04-09 23:38:51	-->	Rodya_ (~Rodya_@pool-108-52-28-121.phlapa.fios.verizon.net) has joined #haskell
2016-04-09 23:38:52	harwiltz	Do you guys know if there is a way to 'inject' some sort of key event? For example, I'm detecting keys with getCh, if I can send a key to my original loop I can stop the loop
2016-04-09 23:39:04	harwiltz	ertesx: Just about to look into that
2016-04-09 23:39:12	<--	cdidd (~cdidd@unaffiliated/cdidd) has quit
2016-04-09 23:39:12	ertesx	harwiltz: the signal handler may communicate with your loop, and the input thread does, too…  in your loop you no longer look for input, but you see whether one of the threads put something into the MVar
2016-04-09 23:39:14	geekosaur	harwiltz, not at all portably
2016-04-09 23:39:15	harwiltz	But there is no info on thr hackage page
2016-04-09 23:39:24	geekosaur	you probably want an MVar for that
2016-04-09 23:39:32	harwiltz	ertesx: Ohh I see
2016-04-09 23:40:00	geekosaur	rather than trying to write a binding for the TIOCSTI ioctl, and then generate a key sequence to inject with it from terminfo (urgh)
2016-04-09 23:40:05	harwiltz	But then isn't an MVar like a imperative language variable?
2016-04-09 23:40:06	ertesx	harwiltz: to do that properly you need an MVar (Either InputEvent WinChEvent)
2016-04-09 23:40:21	<--	boris_rh1 (~boris_rh3@64.26.175.63) has quit (Read error: Connection reset by peer)
2016-04-09 23:40:36	ertesx	harwiltz: with STM you can have two separate channels (TMVar) and see which one has a value in a transaction
2016-04-09 23:40:39	-->	boris_rh1 (~boris_rh3@64.26.175.63) has joined #haskell
2016-04-09 23:40:52	ertesx	harwiltz: yes, MVar is imperative
2016-04-09 23:40:56	geekosaur	(for one thing, you have zero control over whether your TIOCSTI is happening in the mmiddle of a terminal-generated key sequence)
2016-04-09 23:41:06	<--	takle (~takle@cpc73668-dals20-2-0-cust505.20-2.cable.virginm.net) has quit (Ping timeout: 276 seconds)
2016-04-09 23:41:22	harwiltz	ertesx: I didn't realize this was possible in Haskell... I probably should have done this in C haha
2016-04-09 23:41:50	ertesx	harwiltz: the way to write interactive applications non-imperatively is with functional reactive programming (FRP), but it has a learning curve of its own
2016-04-09 23:41:58	geekosaur	^
2016-04-09 23:42:08	geekosaur	and I don;'t think there's any FRP for curses as yet
2016-04-09 23:42:15	geekosaur	or vty for that matter
2016-04-09 23:42:18	ertesx	neither is there for vty
2016-04-09 23:42:20	harwiltz	So basically all ncurses haskell programs use this MVar for terminal resizing?
2016-04-09 23:42:30	<--	leat2 (~leat@198.199.127.213) has quit (Remote host closed the connection)
2016-04-09 23:42:39	ertesx	harwiltz: under the hood FRP is going to use it, too =)
2016-04-09 23:42:47	-->	leat2 (~leat@198.199.127.213) has joined #haskell
2016-04-09 23:42:53	-->	cdidd (~cdidd@unaffiliated/cdidd) has joined #haskell
2016-04-09 23:43:03	ertesx	MVar, even though it's high-level, is rather low-level by haskell standards =)
2016-04-09 23:43:09	harwiltz	So my function has to take a TMVar as a parameter now right?
2016-04-09 23:43:23	ertesx	first decide whether you want the MVar or the STM approach
2016-04-09 23:43:26	-->	rodlogic (~rodlogic@179.159.96.218) has joined #haskell
2016-04-09 23:43:37	-->	radoye (~radoye@c-73-223-104-108.hsd1.ca.comcast.net) has joined #haskell
2016-04-09 23:43:37	harwiltz	probably regular MVar actually
2016-04-09 23:43:43	ertesx	MVar is very easy to learn, while STM is useful generally
2016-04-09 23:44:00	harwiltz	I literally just need it for this purpose only, so I think it should be fine
2016-04-09 23:44:12	ertesx	in that case before your start anything that might put something into the MVar, you create it
2016-04-09 23:44:20	geekosaur	keep in mind that the available wrappers over (n)curses are fairly thin, plus STM is more suited to threads and threads will break curses fairly badly
2016-04-09 23:44:27	ertesx	trust me, you will "need" it for much more, once you get into haskell concurrency
2016-04-09 23:44:28	ertesx	=)
2016-04-09 23:44:53	harwiltz	I'm just using haskell for recreational purposes, hopefully it wont come to that hahaha
2016-04-09 23:45:00	-->	dfeuer (~dfeuer@pool-72-83-145-184.washdc.fios.verizon.net) has joined #haskell
2016-04-09 23:45:00	<--	dfeuer (~dfeuer@pool-72-83-145-184.washdc.fios.verizon.net) has quit (Changing host)
2016-04-09 23:45:00	-->	dfeuer (~dfeuer@wikimedia/Dfeuer) has joined #haskell
2016-04-09 23:45:01	geekosaur	so you're often better off with the simpler imperative-style stuff just because it behaves more like curses expects
2016-04-09 23:45:14	harwiltz	So I use newEmptyMVar to initialize it
2016-04-09 23:45:23	harwiltz	And then pass that to my function
2016-04-09 23:45:44	ertesx	yeah, you refer to that MVar in your loop, in your signal handler and in your input gatherer
2016-04-09 23:46:00	ertesx	if you gather input from curses, you have to create the thread using forkOS (see geekosaur's comment)
2016-04-09 23:46:06	harwiltz	Is the MVar going to be passed a Window?
2016-04-09 23:47:04	harwiltz	Maybe a bit stupid, but do you know if there's a way to just restart the program in the handler?
2016-04-09 23:47:09	harwiltz	That might be easier
2016-04-09 23:47:27	ertesx	harwiltz: very simple example:  do msgVar <- newEmptyMVar; forkIO (forever $ takeMVar msgVar >>= print); forkIO (forever $ putMVar msgVar "blah"); forkIO (forever $ putMVar msgVar "blubb"); getLine
2016-04-09 23:47:45	ertesx	harwiltz: yes, but it involves threads as well =)
2016-04-09 23:47:53	harwiltz	ertesx: Jesus
2016-04-09 23:47:56	ertesx	really, learn MVar…  it takes 10 minutes to see how it works
2016-04-09 23:48:35	<--	sdothum (~sdothum@dsl-173-206-157-50.tor.primus.ca) has quit (Quit: ZNC - 1.6.0 - http://znc.in)
2016-04-09 23:48:50	harwiltz	yea... i just kinda have finals to study for and wanted to work on this quickly, didn't expect to have to do so much research lol
2016-04-09 23:49:14	<--	rodlogic (~rodlogic@179.159.96.218) has quit (Ping timeout: 250 seconds)
2016-04-09 23:49:16	ertesx	wait…  this code is really just not well laid out
2016-04-09 23:49:19	<--	sauvik (~sauvik@103.252.26.131) has quit (Remote host closed the connection)
2016-04-09 23:50:53	harwiltz	Can I just put a forkProcess in my signal handler?
2016-04-09 23:51:26	geekosaur	what would that do? (perhaps you wanted executeFile instead?)
2016-04-09 23:51:31	-->	sauvik (~sauvik@103.252.26.131) has joined #haskell
2016-04-09 23:52:00	<--	Rodya_ (~Rodya_@pool-108-52-28-121.phlapa.fios.verizon.net) has quit (Remote host closed the connection)
2016-04-09 23:52:19	harwiltz	I thought maybe it would create a new thread so that my input only applies to the new loop
2016-04-09 23:52:43	ertesx	harwiltz: http://lpaste.net/9026488030176739328
2016-04-09 23:52:45	<--	leat2 (~leat@198.199.127.213) has quit (Remote host closed the connection)
2016-04-09 23:52:50	-->	juanpablo_ (~juanpablo@181.39.194.188) has joined #haskell
2016-04-09 23:53:02	-->	leat2 (~leat@198.199.127.213) has joined #haskell
2016-04-09 23:53:31	harwiltz	Ok reading that now, thanks
2016-04-09 23:53:34	<--	yfeldblum (~yfeldblum@2620:10d:c090:180::e1c2) has quit (Ping timeout: 250 seconds)
2016-04-09 23:53:46	ertesx	that's how MVar works…  two threads put values into the MVar, one thread takes values out (in your case, the main loop)
2016-04-09 23:53:56	harwiltz	Whats that getLine function?
2016-04-09 23:54:02	-->	Rodya_ (~Rodya_@pool-108-52-28-121.phlapa.fios.verizon.net) has joined #haskell
2016-04-09 23:54:09	ertesx	it just waits for you to press enter in this case
2016-04-09 23:54:10	geekosaur	forkProcess creates a new process, not a new thread. it solves nothing though, the problems with input are not just thread problems. they derive from the fact that a terminal has one input and one output stream and multiple threads/processes/whatever will end up fighting over them if allowed to run concurrently
2016-04-09 23:54:25	harwiltz	Oh I see
2016-04-09 23:54:33	-->	hackrilege (5ec579dc@gateway/web/cgi-irc/kiwiirc.com/ip.94.197.121.220) has joined #haskell
2016-04-09 23:54:33	ertesx	without it the program would simply exit after launching the threads, because the program ends as soon as the main thread ends
2016-04-09 23:54:39	-->	kadoban (~mud@unaffiliated/kadoban) has joined #haskell
2016-04-09 23:54:42	hackrilege	outch my paste hurts http://lpaste.net/159376
2016-04-09 23:54:43	geekosaur	which is why (a) ncurses makes no attempt whatsoever to be threadsafe (b) it also gets seriously messed up if you fork()
2016-04-09 23:54:56	harwiltz	Ok, I see
2016-04-09 23:55:07	harwiltz	I just don't understand what I'm actually supposed to put in the MVar
2016-04-09 23:55:13	ertesx	and yeah, use forkOS instead of forkIO, if you use any curses function inside the new thread
2016-04-09 23:55:15	harwiltz	Is it supposed to hold the Window objects?
2016-04-09 23:55:24	<--	st0opkid (~stoopkid@unaffiliated/stoopkid) has quit (Read error: Connection reset by peer)
2016-04-09 23:55:25	geekosaur	no, don;t use any curses functions from the new thread
2016-04-09 23:55:36	harwiltz	So what do the MVar's actually store?
2016-04-09 23:55:36	-->	lethjakman (~lethjakma@71.56.221.51) has joined #haskell
2016-04-09 23:55:37	geekosaur	at best they won;t work, at worst you'll segfault
2016-04-09 23:55:47	ertesx	hmm
2016-04-09 23:55:54	ertesx	or use the single-threaded run-time
2016-04-09 23:56:11	ertesx	curses is really awkward with haskell
2016-04-09 23:56:20	harwiltz	I'm starting to see that now
2016-04-09 23:56:20	hackrilege	my problem is that fmap must change the value of the left reference from a to b
2016-04-09 23:56:23	-->	bjz (~bjz@104.222.140.23) has joined #haskell
2016-04-09 23:56:27	hackrilege	its hellish
2016-04-09 23:56:28	harwiltz	I might have to just rewrite this in c or something
2016-04-09 23:56:55	ertesx	harwiltz: when the window size changes, you want your loop to know the new window size…  you can send the new size
2016-04-09 23:57:02	harwiltz	how?
2016-04-09 23:57:10	-->	hzjd (~Adium@dhcp-18-189-74-207.dyn.MIT.EDU) has joined #haskell
2016-04-09 23:57:15	<--	juanpablo_ (~juanpablo@181.39.194.188) has quit (Ping timeout: 246 seconds)
2016-04-09 23:57:17	ertesx	MVar (Int, Int)  -- width and height
2016-04-09 23:57:17	harwiltz	Oh the MVar holds the size.....
2016-04-09 23:57:38	harwiltz	So every iteration, the loop grabs the size from the MVar and creates new Windows
2016-04-09 23:57:41	ertesx	harwiltz: before you rewrite this in C, check out vty
2016-04-09 23:57:51	ertesx	it doesn't have any of those problems, because it's a pure haskell library
2016-04-09 23:57:55	harwiltz	ertesx: First I'll try this MVar stuff
2016-04-09 23:57:57	<--	hackrilege (5ec579dc@gateway/web/cgi-irc/kiwiirc.com/ip.94.197.121.220) has quit (Client Quit)
2016-04-09 23:58:14	ertesx	harwiltz: the MVar behaves more like a message-passing channel
2016-04-09 23:58:22	ertesx	you put something in, you take something out
2016-04-09 23:58:39	<--	bjz_ (~bjz@45.56.158.79) has quit (Ping timeout: 276 seconds)
2016-04-09 23:58:47	harwiltz	so the signal handler puts a size in the mvar, then the loop retrieves it
2016-04-09 23:58:51	ertesx	that's why it starts "empty"…  takeMVar on an empty MVar will block, until something is there to take
2016-04-09 23:58:55	ertesx	yeah
2016-04-09 23:59:01	harwiltz	I see
2016-04-09 23:59:04	harwiltz	I'm going to try that
2016-04-09 23:59:17	<--	sigmundv (~sigmundv@31.200.144.181.threembb.ie) has quit (Ping timeout: 252 seconds)
2016-04-09 23:59:24	harwiltz	So I don't need any forking/thread creation right?
2016-04-09 23:59:43	-->	hualet (~hualet@183.94.113.205) has joined #haskell
2016-04-09 23:59:55	<--	centrinia (~centrinia@107-208-218-105.lightspeed.tukrga.sbcglobal.net) has quit (Quit: Leaving)
2016-04-09 23:59:57	ertesx	you do for input gathering…  but beware of the remarks above
2016-04-10 00:00:15	ertesx	if you get input from regular haskell actions (getChar, getLine, etc.), there is nothing to worry about
2016-04-10 00:00:16	harwiltz	well I take input with getCh
2016-04-10 00:00:35	ertesx	in that case try the single-threaded run-time…  it does not use operating system threads
2016-04-10 00:00:36	-->	PaulN (~PaulN@2601:87:100:222c:da9:6ecb:a2e9:be0e) has joined #haskell
2016-04-10 00:00:37	<--	lethjakman (~lethjakma@71.56.221.51) has quit (Ping timeout: 276 seconds)
2016-04-10 00:00:44	ertesx	(just compile without -threaded)
2016-04-10 00:00:56	harwiltz	I don't compile with -threaded
2016-04-10 00:01:08	ertesx	the single-threaded run-time is the default
2016-04-10 00:01:17	harwiltz	Ok that's good
2016-04-10 00:01:28	harwiltz	So I don't need any of those forkIO things right?
2016-04-10 00:01:33	harwiltz	or forkOS
2016-04-10 00:01:34	<--	hzjd (~Adium@dhcp-18-189-74-207.dyn.MIT.EDU) has quit (Ping timeout: 260 seconds)
2016-04-10 00:01:47	-->	hzjd (~Adium@dhcp-18-189-109-31.dyn.mit.edu) has joined #haskell
2016-04-10 00:01:58	ertesx	in your case, let's say you read String input from the user, your MVar actually needs the following type:  MVar (Either (Int, Int) String)
2016-04-10 00:02:17	<--	systemfault (~rcyr@unaffiliated/rcyr) has quit (Quit: Bye!)
2016-04-10 00:02:20	harwiltz	Why do I need a string in the mvar?
2016-04-10 00:02:22	ertesx	you create one thread for input gathering that writes 'Right str' whenever a string 'str' comes in
2016-04-10 00:02:39	ertesx	and the signal handler writes 'Left (w, h)'
2016-04-10 00:02:47	harwiltz	I'm only changing the size of the window upon a sigwinch 
2016-04-10 00:02:52	<--	ryantrinkle (~ryan@cpe-98-14-142-89.nyc.res.rr.com) has left #haskell
2016-04-10 00:03:00	<--	leat2 (~leat@198.199.127.213) has quit (Remote host closed the connection)
2016-04-10 00:03:05	<--	igagen (~textual@c-73-223-48-80.hsd1.ca.comcast.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2016-04-10 00:03:17	-->	leat2 (~leat@198.199.127.213) has joined #haskell
2016-04-10 00:03:17	ertesx	in your loop:  msg <- takeMVar myMVar;  case msg of Right str -> ...; Left (w, h) -> ...
2016-04-10 00:03:32	harwiltz	But why would it ever have a string?
2016-04-10 00:03:34	<--	Cathy (~Cathy@unaffiliated/cathy) has quit (Quit: Leaving)
2016-04-10 00:03:47	ertesx	"let's say you read String input from the user"
2016-04-10 00:03:53	ertesx	i don't know what your input type is =)
2016-04-10 00:03:55	<--	hualet (~hualet@183.94.113.205) has quit (Ping timeout: 240 seconds)
2016-04-10 00:04:01	-->	PatrickRobotham (uid18270@gateway/web/irccloud.com/x-zneyswalzuuvipkk) has joined #haskell
2016-04-10 00:04:04	harwiltz	But my input is unrelated to when I change the window size
2016-04-10 00:04:15	harwiltz	My window size only changes when I get a sigwinch
2016-04-10 00:04:18	-->	tzh (~xax@c-24-7-197-146.hsd1.mn.comcast.net) has joined #haskell
2016-04-10 00:04:26	-->	python476 (~user@2a02-8420-6f5c-4200-021f-3bff-fe7d-f603.rev.sfr.net) has joined #haskell
2016-04-10 00:04:29	ertesx	the MVar is a collective information channel…  it informs the loop that "something happened"
2016-04-10 00:04:42	ertesx	and the value it carries tells it *what* happened
2016-04-10 00:05:18	harwiltz	Ok, but I'm handling key events anyway, why can't I just create new windows every frame?
2016-04-10 00:05:29	harwiltz	I guess that would be slow haha
2016-04-10 00:05:36	ertesx	likely =)
2016-04-10 00:05:50	ertesx	let me extend the example a little
2016-04-10 00:06:11	harwiltz	So I modify the MVar every time I get an input, and every time I get a sigwinch
2016-04-10 00:06:14	<--	trism (~jconti@unaffiliated/trism) has quit (Remote host closed the connection)
2016-04-10 00:06:28	nitrix	My game doesn't have a single MVar nor IORef yet :)
2016-04-10 00:06:35	nitrix	Pretty proud of that :P
2016-04-10 00:06:41	-->	hackrilege (5c28f853@gateway/web/cgi-irc/kiwiirc.com/ip.92.40.248.83) has joined #haskell
2016-04-10 00:06:53	hackrilege	sorry i dropped connection
2016-04-10 00:07:18	-->	dmj (~user@c-50-158-126-110.hsd1.il.comcast.net) has joined #haskell
2016-04-10 00:07:44	<--	araujo (~araujo@gentoo/developer/araujo) has quit (Quit: Leaving)
2016-04-10 00:08:59	-->	dinnu93 (~dinnu93@122.169.221.234) has joined #haskell
2016-04-10 00:08:59	<--	dmj (~user@c-50-158-126-110.hsd1.il.comcast.net) has quit (Read error: Connection reset by peer)
2016-04-10 00:09:20	-->	araujo (~araujo@gentoo/developer/araujo) has joined #haskell
2016-04-10 00:09:27	<--	sleblanc (~sleblanc@unaffiliated/sebleblanc) has quit (Ping timeout: 244 seconds)
2016-04-10 00:09:38	ertesx	harwiltz: you don't "modify" the MVar…  think of it as a sort of pipe
2016-04-10 00:09:44	ertesx	a FIFO pipe
2016-04-10 00:09:59	harwiltz	ertesx: ok I understand
2016-04-10 00:10:01	-->	davee_ (~davee@71-83-188-23.dhcp.lnbh.ca.charter.com) has joined #haskell
2016-04-10 00:10:14	Cale	It's a pipe that has a maximum length of 1 :)
2016-04-10 00:10:36	harwiltz	But where do I put these forkOS calls? I'm most confused now about how I will actually structure this
2016-04-10 00:10:49	Cale	Do you really need forkOS?
2016-04-10 00:10:54	Cale	and not forkIO?
2016-04-10 00:11:11	harwiltz	Cale: ertesx recommended forkOS over forkIO
2016-04-10 00:11:31	Cale	What C libraries are you using?
2016-04-10 00:11:42	harwiltz	I'm using hscurses
2016-04-10 00:11:57	ertesx	harwiltz: http://lpaste.net/6582851346142068736
2016-04-10 00:12:04	Cale	If you're using external libraries with thread-local state, then forkOS might be useful.
2016-04-10 00:12:49	Cale	But otherwise, forkIO is probably better
2016-04-10 00:12:58	harwiltz	ertesx: Thansk, this is looking pretty cool
2016-04-10 00:13:15	-->	baweaver (~baweaver@ruby/staff/baweaver) has joined #haskell
2016-04-10 00:13:15	<--	leat2 (~leat@198.199.127.213) has quit (Remote host closed the connection)
2016-04-10 00:13:19	ertesx	harwiltz: according to geekosaur's remarks, forkOS won't even help in the case of curses (not sure why though)…  using the single-threaded run-time is probably the safest option here
2016-04-10 00:13:31	ertesx	it's unfortunate, but yeah…  use vty in your next project =)
2016-04-10 00:13:31	-->	leat2 (~leat@198.199.127.213) has joined #haskell
2016-04-10 00:13:38	harwiltz	Ok, so forkIO is good?
2016-04-10 00:13:48	ertesx	use forkOS anyway
2016-04-10 00:13:48	Cale	Wait, what's going on?
2016-04-10 00:13:57	harwiltz	ertesx: hahaha ok. Thanks a lot for all thi
2016-04-10 00:13:58	harwiltz	*this
2016-04-10 00:14:05	Cale	You probably should do all the terminal IO from one thread
2016-04-10 00:14:19	Cale	(probably the main thread)
2016-04-10 00:14:25	<--	zoran119 (~zoran@ppp121-44-161-206.lns20.syd7.internode.on.net) has quit (Ping timeout: 264 seconds)
2016-04-10 00:14:44	Cale	and then just send that thread messages using MVar or something like Chan
2016-04-10 00:14:50	harwiltz	ertesx: And do I use forkIO . forever?
2016-04-10 00:15:03	-->	cat-o-the-thrill (~cat-o-the@ool-2f10e3fc.dyn.optonline.net) has joined #haskell
2016-04-10 00:15:04	harwiltz	sorry forkOS . forever?
2016-04-10 00:15:25	ertesx	harwiltz: forkOS . forever $ action = forkOS (forever action) = forkOS (do action; action; action; action; ...)
2016-04-10 00:15:28	Cale	Wait, I don't really understand why forkOS is helpful here... does curses use thread-local state?
2016-04-10 00:15:30	harwiltz	Cale: I don't know what Chan is haha. I'm having trouble resizing my curses windows upon sigwinch
2016-04-10 00:16:08	harwiltz	ertesx: Don't I only need to do it once since it's a loop?
2016-04-10 00:16:10	ertesx	Cale: harwiltz is trying to react properly to a SIGWINCH signal while also getting input
2016-04-10 00:16:43	ertesx	harwiltz: is this the first time you do threading/concurrency?
2016-04-10 00:16:49	harwiltz	ertesx: yes
2016-04-10 00:17:06	harwiltz	Also just realized your forks were outside the loop haha
2016-04-10 00:17:11	harwiltz	So I would need forever
2016-04-10 00:17:19	-->	dmj (~user@c-50-158-126-110.hsd1.il.comcast.net) has joined #haskell
2016-04-10 00:17:19	ertesx	harwiltz: if i tell you that it's extremely useful, would you mind looking into a book?  it's available online for free =)
2016-04-10 00:17:29	--	dmj is now known as dmj`
2016-04-10 00:17:53	harwiltz	ertesx: Sure. Can't guarantee that ill get into it right away because I have a bunch of assignments and finals coming up, but I'll read it
2016-04-10 00:18:06	ertesx	i call this one The Book:  http://chimera.labs.oreilly.com/books/1230000000929/
2016-04-10 00:18:16	harwiltz	hahaha thanks
2016-04-10 00:18:20	<--	dented42 (~dented42@c-67-182-230-27.hsd1.ut.comcast.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2016-04-10 00:18:33	ertesx	every haskell programmer needs to read it…  no exceptions =)
2016-04-10 00:18:52	dmj`	hah
2016-04-10 00:19:15	ertesx	you will mostly be interested in part II: concurrent haskell
2016-04-10 00:19:25	<--	cat-o-the-thrill (~cat-o-the@ool-2f10e3fc.dyn.optonline.net) has quit (Ping timeout: 240 seconds)
2016-04-10 00:19:34	ertesx	parallel haskell is for heating up all the cores to get more speed…  concurrent programming is rather an abstraction
2016-04-10 00:19:38	Adeon	that's a pretty interesting use case for forkOS
2016-04-10 00:19:40	harwiltz	ertesx: Do you know if there is any way to read it offline, or do I need to buy if for that?
2016-04-10 00:20:15	-->	Dunearhp (~Timmeh@60-242-111-133.tpgi.com.au) has joined #haskell
2016-04-10 00:20:22	ertesx	harwiltz: good question…  i don't see a download
2016-04-10 00:20:28	<--	Dunearhp (~Timmeh@60-242-111-133.tpgi.com.au) has quit (Client Quit)
2016-04-10 00:20:53	harwiltz	No big deal, I can read it online
2016-04-10 00:21:30	harwiltz	Alright all, I gotta go to sleep. Thanks a lot for the help ertesx and everyone that helped
2016-04-10 00:21:50	harwiltz	ertesx: I'll definitely read this book, I think it will actually be pretty useful for a course I'm taking next semester
2016-04-10 00:21:55	-->	sleblanc (~sleblanc@unaffiliated/sebleblanc) has joined #haskell
2016-04-10 00:22:55	ertesx	it's useful for most applications that have to communicate with this weird thing we refer to as the real world =)
2016-04-10 00:23:14	<--	OrangeShark (~OrangeSha@2602:306:c5c9:a3e0:be5f:f4ff:fe45:6041) has quit (Quit: Leaving)
2016-04-10 00:23:30	<--	leat2 (~leat@198.199.127.213) has quit (Remote host closed the connection)
2016-04-10 00:23:40	ertesx	we even have a RealWorld type…  but it's so weird and obscure that you'll probably (hopefully) never have to see it =)
2016-04-10 00:23:47	-->	leat2 (~leat@198.199.127.213) has joined #haskell
2016-04-10 00:23:51	<--	nomotif (~nomotif@c-98-207-81-55.hsd1.ca.comcast.net) has quit (Ping timeout: 246 seconds)
2016-04-10 00:24:26	Cale	It's poorly named
2016-04-10 00:25:09	harwiltz	hahahaha
2016-04-10 00:25:12	harwiltz	awesome
2016-04-10 00:25:15	<--	keer4n (~keer4n@49.244.25.239) has quit (Ping timeout: 246 seconds)
2016-04-10 00:25:18	ertesx	yeah, i would have called it Louis or something
2016-04-10 00:25:19	harwiltz	Ill check that out too.
2016-04-10 00:25:23	-->	eklavya (~eklavya@117.204.252.167) has joined #haskell
2016-04-10 00:25:26	ertesx	don't =)
2016-04-10 00:25:33	harwiltz	:D Goodnight guys
2016-04-10 00:25:40	ertesx	good night
2016-04-10 16:21:07	-->	harwiltz (~harwiltz@modemcable109.165-58-74.mc.videotron.ca) has joined #haskell
2016-04-10 16:21:07	--	Topic for #haskell is "http://www.haskell.org/ | https://wiki.haskell.org/IRC_channel | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2016-04-10 16:21:07	--	Topic set by quicksilver on Wed, 07 Oct 2015 15:39:51
2016-04-10 16:21:08	--	Channel #haskell: 1510 nicks (1 op, 0 voices, 1509 normals)
2016-04-10 16:21:08	--	URL for #haskell: http://www.haskell.org/
2016-04-10 16:21:08	<--	martin-t_ (~martin-t@199.201.64.3) has quit (Read error: Connection reset by peer)
2016-04-10 16:21:09	--	Channel created on Sun, 26 Nov 2006 06:42:48
2016-04-10 16:21:14	leewz	of course, not in general
2016-04-10 16:21:27	<--	medakk (~medakk___@171.76.119.141) has quit (Ping timeout: 276 seconds)
2016-04-10 16:33:24	-->	harwiltz (~harwiltz@modemcable109.165-58-74.mc.videotron.ca) has joined #haskell
2016-04-10 16:33:24	--	Topic for #haskell is "http://www.haskell.org/ | https://wiki.haskell.org/IRC_channel | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2016-04-10 16:33:24	--	Topic set by quicksilver on Wed, 07 Oct 2015 15:39:51
2016-04-10 16:33:24	--	Channel #haskell: 1504 nicks (1 op, 0 voices, 1503 normals)
2016-04-10 16:33:24	--	URL for #haskell: http://www.haskell.org/
2016-04-10 16:33:25	<--	cat-o-the-thrill (~cat-o-the@ool-2f10e3fc.dyn.optonline.net) has quit (Ping timeout: 240 seconds)
2016-04-10 16:33:26	--	Channel created on Sun, 26 Nov 2006 06:42:48
2016-04-10 16:33:26	-->	Kristler (~KW@S0106bcd16583bf99.ok.shawcable.net) has joined #haskell
2016-04-10 16:33:37	jatentaki	more or less, did some reading and several examples like a year ago
2016-04-10 16:33:44	jatentaki	and now resuming the experience
2016-04-10 16:37:16	-->	harwiltz (~harwiltz@modemcable109.165-58-74.mc.videotron.ca) has joined #haskell
2016-04-10 16:37:16	(●)	Topic for #haskell is "http://www.haskell.org/ | https://wiki.haskell.org/IRC_channel | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2016-04-10 16:37:16	(●)	Topic set by quicksilver on Wed, 07 Oct 2015 15:39:51
2016-04-10 16:37:16	(●)	Channel #haskell: 1504 nicks (1 op, 0 voices, 1503 normals)
2016-04-10 16:37:16	(●)	URL for #haskell: http://www.haskell.org/
2016-04-10 16:37:19	(●)	Channel created on Sun, 26 Nov 2006 06:42:48
2016-04-10 16:37:31	ertes-t6v	s/haskell/GHC haskell/
2016-04-10 16:37:41	<--	cdidd (~cdidd@unaffiliated/cdidd) has quit
2016-04-10 16:38:08	<--	mmercer (~bc811b45@static-71-174-73-11.bstnma.fios.verizon.net) has quit (Quit: CGI:IRC (Error))
2016-04-10 16:47:51	-->	harwiltz (~harwiltz@modemcable109.165-58-74.mc.videotron.ca) has joined #haskell
2016-04-10 16:47:51	(●)	Topic for #haskell is "http://www.haskell.org/ | https://wiki.haskell.org/IRC_channel | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2016-04-10 16:47:51	(●)	Topic set by quicksilver on Wed, 07 Oct 2015 15:39:51
2016-04-10 16:47:51	(●)	Channel #haskell: 1502 nicks (1 op, 0 voices, 1501 normals)
2016-04-10 16:47:51	(●)	URL for #haskell: http://www.haskell.org/
2016-04-10 16:47:54	(●)	Channel created on Sun, 26 Nov 2006 06:42:48
2016-04-10 16:47:57	Grisha	I’m trying to import Text.Blaze.Html5 and running this single-line program in ghci produces “ouldn't match expected type ‘IO t0’
2016-04-10 16:47:58	Grisha	                with actual type ‘Html -> Html’
2016-04-10 16:47:59	Grisha	    Probable cause: ‘main’ is applied to too few arguments
2016-04-10 16:48:00	Grisha	    In the expression: main
2016-04-10 16:48:01	Grisha	    When checking the type of the IO action ‘main’”
2016-04-10 16:48:17	ertes-t6v	jatentaki: i think Aruro was just saying the same thing in different words =)
2016-04-10 16:48:26	Grisha	Aruro: no, never watched Futurama ;(
2016-04-10 16:48:29	ertes-t6v	but "current language paradigm" is ambiguous
2016-04-10 16:48:30	<--	latk (~textual@cpc91232-cmbg18-2-0-cust847.5-4.cable.virginm.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2016-04-10 16:48:36	aupiff	I have been thinking about lambda abstraction by convention being right-associative. Given that left- and right-associativity are simply a means to introduce a shorthand for non-associative operators (to eliminate parens), I'd assume that any operation we decide to treat as right-assoc. must be produce ambiguous terms if no associativity is assumed and parens are excluded. How could we misinterpret `\x.\y.
2016-04-10 16:48:42	aupiff	 x y x`? as `((\x.\y.) x y x)`? What would that mean?
2016-04-10 16:48:47	jatentaki	he said about someone inventing something soon. And you are talking about *me* needing to rewire my brain
2016-04-10 16:49:05	Grisha	so importing Text.Blaze.Html5 implicitly calls some main somewhere
2016-04-10 16:52:48	-->	harwiltz (~harwiltz@modemcable109.165-58-74.mc.videotron.ca) has joined #haskell
2016-04-10 16:52:48	(●)	Topic for #haskell is "http://www.haskell.org/ | https://wiki.haskell.org/IRC_channel | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2016-04-10 16:52:48	(●)	Topic set by quicksilver on Wed, 07 Oct 2015 15:39:51
2016-04-10 16:52:48	(●)	Channel #haskell: 1502 nicks (1 op, 0 voices, 1501 normals)
2016-04-10 16:52:49	(●)	Channel created on Sun, 26 Nov 2006 06:42:48
2016-04-10 16:52:49	(●)	URL for #haskell: http://www.haskell.org/
2016-04-10 16:53:13	ertes-t6v	Aruro: i don't think evaluation is messy
2016-04-10 16:54:29	-->	harwiltz (~harwiltz@modemcable109.165-58-74.mc.videotron.ca) has joined #haskell
2016-04-10 16:54:29	(●)	Topic for #haskell is "http://www.haskell.org/ | https://wiki.haskell.org/IRC_channel | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2016-04-10 16:54:29	(●)	Topic set by quicksilver on Wed, 07 Oct 2015 15:39:51
2016-04-10 16:54:29	(●)	Channel #haskell: 1503 nicks (1 op, 0 voices, 1502 normals)
2016-04-10 16:54:29	(●)	URL for #haskell: http://www.haskell.org/
2016-04-10 16:54:30	(●)	Channel created on Sun, 26 Nov 2006 06:42:48
2016-04-10 16:54:34	Grisha	ertes-t6v: of course
2016-04-10 16:54:36	ertes-t6v	Grisha: with the qualified import 'head' will refer to Prelude.head, the list function, while 'H.head' will refer to the <head> element
2016-04-10 16:54:39	-->	supernullset (~supernull@104.232.115.7) has joined #haskell
2016-04-10 16:54:42	Grisha	ertes-t6v: I see
